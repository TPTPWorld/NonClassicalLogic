%%% This output was generated by embedproblem, version 1.7.2 (library version 1.3).
%%% Generated on Wed May 11 11:33:16 EDT 2022
%%% using 'modal' embedding, version 1.5.3.
%%% Logic specification used:
%%% tff(k_constant_rigid, logic, ($modal) == ([($constants) == ($rigid),($quantification) == ($constant),($modalities) == ($modal_system_K)])).

thf(mworld, type, mworld: $tType).
thf(mindex, type, mindex: $tType).
thf(mrel_type, type, mrel: (mindex > (mworld > (mworld > $o)))).
thf('#r_type', type, '#r': mindex).
thf(mglobal_type, type, mglobal: ((mworld > $o) > $o)).
thf(mglobal_def, definition, (mglobal = (^ [Phi:(mworld > $o)]: ((! [W:mworld]: ((Phi @ W))))))).
thf(mnot_type, type, mnot: ((mworld > $o) > (mworld > $o))).
thf(mand_type, type, mand: ((mworld > $o) > ((mworld > $o) > (mworld > $o)))).
thf(mor_type, type, mor: ((mworld > $o) > ((mworld > $o) > (mworld > $o)))).
thf(mimplies_type, type, mimplies: ((mworld > $o) > ((mworld > $o) > (mworld > $o)))).
thf(mequiv_type, type, mequiv: ((mworld > $o) > ((mworld > $o) > (mworld > $o)))).
thf(mnot_def, definition, (mnot = (^ [A:(mworld > $o),W:mworld]: ((~ ((A @ W))))))).
thf(mand_def, definition, (mand = (^ [A:(mworld > $o),B:(mworld > $o),W:mworld]: (((A @ W) & (B @ W)))))).
thf(mor_def, definition, (mor = (^ [A:(mworld > $o),B:(mworld > $o),W:mworld]: (((A @ W) | (B @ W)))))).
thf(mimplies_def, definition, (mimplies = (^ [A:(mworld > $o),B:(mworld > $o),W:mworld]: (((A @ W) => (B @ W)))))).
thf(mequiv_def, definition, (mequiv = (^ [A:(mworld > $o),B:(mworld > $o),W:mworld]: (((A @ W) <=> (B @ W)))))).
thf(mbox_type, type, mbox: (mindex > ((mworld > $o) > (mworld > $o)))).
thf(mbox_def, definition, (mbox = (^ [R:mindex,Phi:(mworld > $o),W:mworld]: ((! [V:mworld]: (((((mrel @ R) @ W) @ V) => (Phi @ V)))))))).
thf(mdia_type, type, mdia: (mindex > ((mworld > $o) > (mworld > $o)))).
thf(mdia_def, definition, (mdia = (^ [R:mindex,Phi:(mworld > $o),W:mworld]: ((? [V:mworld]: (((((mrel @ R) @ W) @ V) & (Phi @ V)))))))).
thf(d0_type, type, d0: (mworld > $o)).
thf(d2_type, type, d2: (mworld > $o)).
thf(p0_type, type, p0: (mworld > $o)).
thf(d1_type, type, d1: (mworld > $o)).
thf(p1_type, type, p1: (mworld > $o)).
thf(prove, axiom, (mglobal @ (mnot @ ((mand @ d0) @ ((mand @ (mnot @ d1)) @ ((mand @ ((mimplies @ d1) @ d0)) @ ((mand @ ((mimplies @ d2) @ d1)) @ ((mand @ ((mimplies @ d0) @ ((mand @ ((mimplies @ p0) @ ((mbox @ '#r') @ ((mimplies @ d0) @ p0)))) @ ((mimplies @ (mnot @ p0)) @ ((mbox @ '#r') @ ((mimplies @ d0) @ (mnot @ p0))))))) @ ((mand @ ((mimplies @ d1) @ ((mand @ ((mimplies @ p1) @ ((mbox @ '#r') @ ((mimplies @ d1) @ p1)))) @ ((mimplies @ (mnot @ p1)) @ ((mbox @ '#r') @ ((mimplies @ d1) @ (mnot @ p1))))))) @ ((mand @ ((mimplies @ ((mand @ d0) @ (mnot @ d1))) @ ((mand @ ((mdia @ '#r') @ ((mand @ d1) @ ((mand @ (mnot @ d2)) @ p1)))) @ ((mdia @ '#r') @ ((mand @ d1) @ ((mand @ (mnot @ d2)) @ (mnot @ p1))))))) @ ((mbox @ '#r') @ ((mand @ ((mimplies @ d1) @ d0)) @ ((mand @ ((mimplies @ d2) @ d1)) @ ((mand @ ((mimplies @ d0) @ ((mand @ ((mimplies @ p0) @ ((mbox @ '#r') @ ((mimplies @ d0) @ p0)))) @ ((mimplies @ (mnot @ p0)) @ ((mbox @ '#r') @ ((mimplies @ d0) @ (mnot @ p0))))))) @ ((mand @ ((mimplies @ d1) @ ((mand @ ((mimplies @ p1) @ ((mbox @ '#r') @ ((mimplies @ d1) @ p1)))) @ ((mimplies @ (mnot @ p1)) @ ((mbox @ '#r') @ ((mimplies @ d1) @ (mnot @ p1))))))) @ ((mimplies @ ((mand @ d0) @ (mnot @ d1))) @ ((mand @ ((mdia @ '#r') @ ((mand @ d1) @ ((mand @ (mnot @ d2)) @ p1)))) @ ((mdia @ '#r') @ ((mand @ d1) @ ((mand @ (mnot @ d2)) @ (mnot @ p1))))))))))))))))))))).
% SZS output end ListOfTH0 for HalpernMoses_1.p

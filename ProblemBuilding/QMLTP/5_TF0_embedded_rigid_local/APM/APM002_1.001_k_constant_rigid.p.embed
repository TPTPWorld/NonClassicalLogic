%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:04:03 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(k_constant_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($constant),($modalities) == ($modal_system_K),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(a_decl, type, a: $i).
tff(b_decl, type, b: $i).
tff(c_decl, type, c: $i).
tff(p_decl, type, p: (('$world' * $i) > $o)).
tff(r_decl, type, r: (('$world' * $i) > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(schema1, axiom, ((~ (r('$local_world',a)) | r('$local_world',b)) & ((r('$local_world',c) <=> r('$local_world',a)) & ((r('$local_world',a) => (? [W:'$world']: (('$accessible_world'('$local_world',W) & r(W,b))))) & (~ (r('$local_world',a)) => (? [W:'$world']: (('$accessible_world'('$local_world',W) & (~ (r(W,b)) & ~ (r(W,c))))))))))).
tff(schema2, axiom, ((p('$local_world',a) => p('$local_world',b)) & ((p('$local_world',c) | ~ (p('$local_world',b))) & ((p('$local_world',a) & p('$local_world',b)) => (? [W:'$world']: (('$accessible_world'('$local_world',W) & ~ (p(W,b))))))))).
tff(integration_assertion, axiom, (! [X:$i]: ((p('$local_world',X) <=> r('$local_world',X))))).
tff(con, conjecture, $false).

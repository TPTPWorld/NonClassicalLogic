%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:04:04 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(d_constant_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($constant),($modalities) == ($modal_system_D),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
tff(mrel_serial, axiom, (! [W:'$world']: ((? [V:'$world']: ('$accessible_world'(W,V)))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(h_decl, type, h: (('$world' * $i) > $o)).
tff(bomb_decl, type, bomb: (('$world' * $i) > $o)).
tff(defused_decl, type, defused: (('$world' * $i) > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(ax1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (? [B:$i]: (bomb(W,B))))))).
tff(ax2, axiom, (? [A:$i]: ((! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: (((bomb(W,X) & h(W,A)) => (! [W0:'$world']: (('$accessible_world'(W,W0) => bomb(W0,X))))))))))))).
tff(ax3, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((? [D:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => ((bomb(W0,X) & h(W0,D)) => defused(W0,X))))))))))))).
tff(con, conjecture, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((? [D:$i]: (((bomb(W,X) & h(W,D)) => defused(W,X)))))))))).

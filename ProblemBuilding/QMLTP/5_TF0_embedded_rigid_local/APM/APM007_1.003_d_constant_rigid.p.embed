%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:04:04 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(d_constant_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($constant),($modalities) == ($modal_system_D),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
tff(mrel_serial, axiom, (! [W:'$world']: ((? [V:'$world']: ('$accessible_world'(W,V)))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(ann_decl, type, ann: $i).
tff(mary_decl, type, mary: $i).
tff(bob_decl, type, bob: $i).
tff(john_decl, type, john: $i).
tff(paul_decl, type, paul: $i).
tff(jane_decl, type, jane: $i).
tff(qmltpeq_decl, type, qmltpeq: (('$world' * $i * $i) > $o)).
tff(parent_decl, type, parent: (('$world' * $i * $i) > $o)).
tff(q3_decl, type, q3: (('$world' * $i) > $o)).
tff(female_decl, type, female: (('$world' * $i) > $o)).
tff(male_decl, type, male: (('$world' * $i) > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(reflexivity, axiom, (! [X:$i]: (qmltpeq('$local_world',X,X)))).
tff(symmetry, axiom, (! [X:$i,Y:$i]: ((qmltpeq('$local_world',X,Y) => qmltpeq('$local_world',Y,X))))).
tff(transitivity, axiom, (! [X:$i,Y:$i,Z:$i]: (((qmltpeq('$local_world',X,Y) & qmltpeq('$local_world',Y,Z)) => qmltpeq('$local_world',X,Z))))).
tff(female_substitution_1, axiom, (! [A:$i,B:$i]: (((qmltpeq('$local_world',A,B) & female('$local_world',A)) => female('$local_world',B))))).
tff(male_substitution_1, axiom, (! [A:$i,B:$i]: (((qmltpeq('$local_world',A,B) & male('$local_world',A)) => male('$local_world',B))))).
tff(q3_substitution_1, axiom, (! [A:$i,B:$i]: (((qmltpeq('$local_world',A,B) & q3('$local_world',A)) => q3('$local_world',B))))).
tff(parent_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: (((qmltpeq('$local_world',A,B) & parent('$local_world',A,C)) => parent('$local_world',B,C))))).
tff(parent_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: (((qmltpeq('$local_world',A,B) & parent('$local_world',C,A)) => parent('$local_world',C,B))))).
tff(abox, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (female(W,mary) & (female(W,ann) & (female(W,jane) & (male(W,bob) & (male(W,john) & (male(W,paul) & (parent(W,bob,mary) & (parent(W,bob,ann) & (parent(W,john,paul) & parent(W,mary,jane)))))))))))))).
tff(tbox, axiom, (! [X:$i]: (((! [W:'$world']: (('$accessible_world'('$local_world',W) => male(W,X)))) => (! [W:'$world']: (('$accessible_world'('$local_world',W) => ~ (female(W,X))))))))).
tff(query, axiom, (! [X:$i]: ((q3('$local_world',X) <=> (? [Y:$i]: (((! [W:'$world']: (('$accessible_world'('$local_world',W) => parent(W,Y,X)))) & (! [Z:$i]: (((! [W:'$world']: (('$accessible_world'('$local_world',W) => parent(W,Y,Z)))) => qmltpeq('$local_world',Z,X))))))))))).
tff(con, conjecture, (q3('$local_world',jane) & q3('$local_world',paul))).

%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:04:04 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(t_constant_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($constant),($modalities) == ($modal_system_T),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
tff(mrel_reflexive, axiom, (! [W:'$world']: ('$accessible_world'(W,W)))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(cs_decl, type, cs: $i).
tff(sue_decl, type, sue: $i).
tff(mary_decl, type, mary: $i).
tff(john_decl, type, john: $i).
tff(math_decl, type, math: $i).
tff(psych_decl, type, psych: $i).
tff(teach_decl, type, teach: (('$world' * $i * $i) > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(db, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (teach(W,john,math) & ((? [X:$i]: (teach(W,X,cs))) & (teach(W,mary,psych) & teach(W,sue,psych)))))))).
tff(query, conjecture, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (? [X:$i]: (teach(W,X,cs))))))).

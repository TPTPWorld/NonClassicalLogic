%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:04:08 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(t_constant_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($constant),($modalities) == ($modal_system_T),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
tff(mrel_reflexive, axiom, (! [W:'$world']: ('$accessible_world'(W,W)))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(qmltpeq_decl, type, qmltpeq: (('$world' * $i * $i) > $o)).
tff(sorti2_decl, type, sorti2: (('$world' * $i) > $o)).
tff(sorti1_decl, type, sorti1: (('$world' * $i) > $o)).
tff(op2_decl, type, op2: (($i * $i) > $i)).
tff(op1_decl, type, op1: (($i * $i) > $i)).
tff(h_decl, type, h: ($i > $i)).
tff(j_decl, type, j: ($i > $i)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(reflexivity, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => qmltpeq(W0,X,X)))))))))).
tff(symmetry, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [Y:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,X,Y)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,Y,X))))))))))))))))))).
tff(transitivity, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [Y:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [Z:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,X,Y)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,Y,Z))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,X,Z)))))))))))))))))))))))).
tff(h_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,h(A),h(B)))))))))))))))))))).
tff(j_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,j(A),j(B)))))))))))))))))))).
tff(op1_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,op1(A,C),op1(B,C))))))))))))))))))))))))).
tff(op1_substitution_2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,op1(C,A),op1(C,B))))))))))))))))))))))))).
tff(op2_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,op2(A,C),op2(B,C))))))))))))))))))))))))).
tff(op2_substitution_2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,op2(C,A),op2(C,B))))))))))))))))))))))))).
tff(sorti1_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => sorti1(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => sorti1(W2,B))))))))))))))))))).
tff(sorti2_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => sorti2(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => sorti2(W2,B))))))))))))))))))).
tff(ax1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => sorti1(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [V:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => sorti1(W3,V)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => sorti1(W3,op1(U,V)))))))))))))))))))))))).
tff(ax2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => sorti2(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [V:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => sorti2(W3,V)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => sorti2(W3,op2(U,V)))))))))))))))))))))))).
tff(ax3, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => ~ ((? [U:$i]: (((! [W0:'$world']: (('$accessible_world'(W,W0) => sorti1(W0,U)))) & (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [V:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => sorti1(W2,V)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,op1(V,V),U))))))))))))))))))))).
tff(ax4, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => ~ ((! [W0:'$world']: (('$accessible_world'(W,W0) => ~ ((? [U:$i]: (((! [W1:'$world']: (('$accessible_world'(W0,W1) => sorti2(W1,U)))) & (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [V:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => sorti2(W3,V)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,op2(V,V),U))))))))))))))))))))))))).
tff(co1, conjecture, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [U:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => sorti1(W2,U)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => sorti2(W2,h(U)))))))))))))) & (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [V:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => sorti2(W2,V)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => sorti1(W2,j(V))))))))))))))) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ~ (((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [W:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => sorti1(W3,W)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => (! [X:$i]: ((! [W4:'$world']: (('$accessible_world'(W3,W4) => ((! [W5:'$world']: (('$accessible_world'(W4,W5) => sorti1(W5,X)))) => (! [W5:'$world']: (('$accessible_world'(W4,W5) => qmltpeq(W5,h(op1(W,X)),op2(h(W),h(X)))))))))))))))))))))))) & ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [Y:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => sorti2(W3,Y)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => (! [Z:$i]: ((! [W4:'$world']: (('$accessible_world'(W3,W4) => ((! [W5:'$world']: (('$accessible_world'(W4,W5) => sorti2(W5,Z)))) => (! [W5:'$world']: (('$accessible_world'(W4,W5) => qmltpeq(W5,j(op2(Y,Z)),op1(j(Y),j(Z)))))))))))))))))))))))) & ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [X1:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => sorti2(W3,X1)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,h(j(X1)),X1))))))))))))) & (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [X2:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => sorti1(W3,X2)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,j(h(X2)),X2))))))))))))))))))))))))).

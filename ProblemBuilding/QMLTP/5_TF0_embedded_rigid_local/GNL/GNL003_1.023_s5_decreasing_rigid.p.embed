%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:04:20 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(s5_decreasing_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($decreasing),($modalities) == ($modal_system_S5),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
tff(mrel_universal, axiom, (! [W:'$world',V:'$world']: ('$accessible_world'(W,V)))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(chevy_decl, type, chevy: (('$world' * $i) > $o)).
tff(hollywood_decl, type, hollywood: (('$world' * $i) > $o)).
tff(woman_decl, type, woman: (('$world' * $i) > $o)).
tff(city_decl, type, city: (('$world' * $i) > $o)).
tff(down_decl, type, down: (('$world' * $i * $i) > $o)).
tff(vehicle_decl, type, vehicle: (('$world' * $i) > $o)).
tff(artifact_decl, type, artifact: (('$world' * $i) > $o)).
tff(white_decl, type, white: (('$world' * $i) > $o)).
tff(car_decl, type, car: (('$world' * $i) > $o)).
tff(street_decl, type, street: (('$world' * $i) > $o)).
tff(of_decl, type, of: (('$world' * $i * $i) > $o)).
tff(proposition_decl, type, proposition: (('$world' * $i) > $o)).
tff(have_decl, type, have: (('$world' * $i * $i * $i) > $o)).
tff(man_decl, type, man: (('$world' * $i) > $o)).
tff(event_decl, type, event: (('$world' * $i) > $o)).
tff(female_decl, type, female: (('$world' * $i) > $o)).
tff(lonely_decl, type, lonely: (('$world' * $i) > $o)).
tff(human_decl, type, human: (('$world' * $i) > $o)).
tff(dirty_decl, type, dirty: (('$world' * $i) > $o)).
tff(owner_decl, type, owner: (('$world' * $i) > $o)).
tff(barrel_decl, type, barrel: (('$world' * $i * $i) > $o)).
tff(new_decl, type, new: (('$world' * $i) > $o)).
tff(partof_decl, type, partof: (('$world' * $i * $i) > $o)).
tff(drs_decl, type, drs: (('$world' * $i) > $o)).
tff(in_decl, type, in: (('$world' * $i * $i) > $o)).
tff(old_decl, type, old: (('$world' * $i) > $o)).
tff(abstraction_decl, type, abstraction: (('$world' * $i) > $o)).
tff(transport_decl, type, transport: (('$world' * $i) > $o)).
tff(instrumentality_decl, type, instrumentality: (('$world' * $i) > $o)).
tff(way_decl, type, way: (('$world' * $i) > $o)).
tff(qmltpeq_decl, type, qmltpeq: (('$world' * $i * $i) > $o)).
tff(eventuality_decl, type, eventuality: (('$world' * $i) > $o)).
tff(location_decl, type, location: (('$world' * $i) > $o)).
tff(nonhuman_decl, type, nonhuman: (('$world' * $i) > $o)).
tff(entity_decl, type, entity: (('$world' * $i) > $o)).
tff(male_decl, type, male: (('$world' * $i) > $o)).
tff(object_decl, type, object: (('$world' * $i) > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Additional meta-logical definitions %%%%%%%%
tff('$exists_in_world_$i_decl', type, '$exists_in_world_$i': (('$world' * $i) > $o)).
tff('$exists_in_world_$i_const', axiom, (! [W:'$world',X:$i]: ('$exists_in_world_$i'(W,X)))).
tff('$exists_in_world_$i_nonempty', axiom, (! [W:'$world']: ((? [X:$i]: ('$exists_in_world_$i'(W,X)))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(reflexivity, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: (('$exists_in_world_$i'(W,X) => (! [W0:'$world']: (('$accessible_world'(W,W0) => qmltpeq(W0,X,X))))))))))).
tff(symmetry, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: (('$exists_in_world_$i'(W,X) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [Y:$i]: (('$exists_in_world_$i'(W0,Y) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,X,Y)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,Y,X))))))))))))))))))))).
tff(transitivity, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: (('$exists_in_world_$i'(W,X) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [Y:$i]: (('$exists_in_world_$i'(W0,Y) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [Z:$i]: (('$exists_in_world_$i'(W1,Z) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,X,Y)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,Y,Z))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,X,Z))))))))))))))))))))))))))).
tff(abstraction_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => abstraction(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => abstraction(W2,B))))))))))))))))))))).
tff(artifact_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => artifact(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => artifact(W2,B))))))))))))))))))))).
tff(barrel_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: (('$exists_in_world_$i'(W1,C) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => barrel(W3,A,C))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => barrel(W3,B,C))))))))))))))))))))))))))).
tff(barrel_substitution_2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: (('$exists_in_world_$i'(W1,C) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => barrel(W3,C,A))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => barrel(W3,C,B))))))))))))))))))))))))))).
tff(car_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => car(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => car(W2,B))))))))))))))))))))).
tff(chevy_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => chevy(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => chevy(W2,B))))))))))))))))))))).
tff(city_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => city(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => city(W2,B))))))))))))))))))))).
tff(dirty_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => dirty(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => dirty(W2,B))))))))))))))))))))).
tff(down_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: (('$exists_in_world_$i'(W1,C) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => down(W3,A,C))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => down(W3,B,C))))))))))))))))))))))))))).
tff(down_substitution_2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: (('$exists_in_world_$i'(W1,C) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => down(W3,C,A))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => down(W3,C,B))))))))))))))))))))))))))).
tff(drs_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => drs(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => drs(W2,B))))))))))))))))))))).
tff(entity_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => entity(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => entity(W2,B))))))))))))))))))))).
tff(event_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => event(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => event(W2,B))))))))))))))))))))).
tff(eventuality_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => eventuality(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => eventuality(W2,B))))))))))))))))))))).
tff(female_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => female(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => female(W2,B))))))))))))))))))))).
tff(have_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: (('$exists_in_world_$i'(W1,C) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (! [D:$i]: (('$exists_in_world_$i'(W2,D) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => (((! [W4:'$world']: (('$accessible_world'(W3,W4) => qmltpeq(W4,A,B)))) & (! [W4:'$world']: (('$accessible_world'(W3,W4) => have(W4,A,C,D))))) => (! [W4:'$world']: (('$accessible_world'(W3,W4) => have(W4,B,C,D))))))))))))))))))))))))))))))))).
tff(have_substitution_2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: (('$exists_in_world_$i'(W1,C) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (! [D:$i]: (('$exists_in_world_$i'(W2,D) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => (((! [W4:'$world']: (('$accessible_world'(W3,W4) => qmltpeq(W4,A,B)))) & (! [W4:'$world']: (('$accessible_world'(W3,W4) => have(W4,C,A,D))))) => (! [W4:'$world']: (('$accessible_world'(W3,W4) => have(W4,C,B,D))))))))))))))))))))))))))))))))).
tff(have_substitution_3, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: (('$exists_in_world_$i'(W1,C) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (! [D:$i]: (('$exists_in_world_$i'(W2,D) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => (((! [W4:'$world']: (('$accessible_world'(W3,W4) => qmltpeq(W4,A,B)))) & (! [W4:'$world']: (('$accessible_world'(W3,W4) => have(W4,C,D,A))))) => (! [W4:'$world']: (('$accessible_world'(W3,W4) => have(W4,C,D,B))))))))))))))))))))))))))))))))).
tff(hollywood_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => hollywood(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => hollywood(W2,B))))))))))))))))))))).
tff(human_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => human(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => human(W2,B))))))))))))))))))))).
tff(in_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: (('$exists_in_world_$i'(W1,C) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => in(W3,A,C))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => in(W3,B,C))))))))))))))))))))))))))).
tff(in_substitution_2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: (('$exists_in_world_$i'(W1,C) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => in(W3,C,A))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => in(W3,C,B))))))))))))))))))))))))))).
tff(instrumentality_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => instrumentality(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => instrumentality(W2,B))))))))))))))))))))).
tff(location_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => location(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => location(W2,B))))))))))))))))))))).
tff(lonely_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => lonely(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => lonely(W2,B))))))))))))))))))))).
tff(male_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => male(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => male(W2,B))))))))))))))))))))).
tff(man_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => man(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => man(W2,B))))))))))))))))))))).
tff(new_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => new(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => new(W2,B))))))))))))))))))))).
tff(nonhuman_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => nonhuman(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => nonhuman(W2,B))))))))))))))))))))).
tff(object_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => object(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => object(W2,B))))))))))))))))))))).
tff(of_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: (('$exists_in_world_$i'(W1,C) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => of(W3,A,C))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => of(W3,B,C))))))))))))))))))))))))))).
tff(of_substitution_2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: (('$exists_in_world_$i'(W1,C) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => of(W3,C,A))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => of(W3,C,B))))))))))))))))))))))))))).
tff(old_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => old(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => old(W2,B))))))))))))))))))))).
tff(owner_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => owner(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => owner(W2,B))))))))))))))))))))).
tff(partof_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: (('$exists_in_world_$i'(W1,C) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => partof(W3,A,C))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => partof(W3,B,C))))))))))))))))))))))))))).
tff(partof_substitution_2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: (('$exists_in_world_$i'(W1,C) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => partof(W3,C,A))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => partof(W3,C,B))))))))))))))))))))))))))).
tff(proposition_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => proposition(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => proposition(W2,B))))))))))))))))))))).
tff(street_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => street(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => street(W2,B))))))))))))))))))))).
tff(transport_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => transport(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => transport(W2,B))))))))))))))))))))).
tff(vehicle_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => vehicle(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => vehicle(W2,B))))))))))))))))))))).
tff(way_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => way(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => way(W2,B))))))))))))))))))))).
tff(white_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => white(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => white(W2,B))))))))))))))))))))).
tff(woman_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: (('$exists_in_world_$i'(W,A) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (('$exists_in_world_$i'(W0,B) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => woman(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => woman(W2,B))))))))))))))))))))).
tff(ax1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => chevy(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => car(W1,U))))))))))))))).
tff(ax2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => car(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => vehicle(W1,U))))))))))))))).
tff(ax3, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => vehicle(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => transport(W1,U))))))))))))))).
tff(ax4, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => transport(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => instrumentality(W1,U))))))))))))))).
tff(ax5, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => instrumentality(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => artifact(W1,U))))))))))))))).
tff(ax6, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => instrumentality(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => ~ ((! [W2:'$world']: (('$accessible_world'(W1,W2) => way(W2,U))))))))))))))))))).
tff(ax7, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => street(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => way(W1,U))))))))))))))).
tff(ax8, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => way(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => artifact(W1,U))))))))))))))).
tff(ax9, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => artifact(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => object(W1,U))))))))))))))).
tff(ax10, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => artifact(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => ~ ((! [W2:'$world']: (('$accessible_world'(W1,W2) => location(W2,U))))))))))))))))))).
tff(ax11, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => event(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => eventuality(W1,U))))))))))))))).
tff(ax12, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => hollywood(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => city(W1,U))))))))))))))).
tff(ax13, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => city(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => location(W1,U))))))))))))))).
tff(ax14, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => location(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => object(W1,U))))))))))))))).
tff(ax15, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => object(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => entity(W1,U))))))))))))))).
tff(ax16, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => old(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => ~ ((! [W2:'$world']: (('$accessible_world'(W1,W2) => new(W2,U))))))))))))))))))).
tff(ax17, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => eventuality(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => ~ ((! [W2:'$world']: (('$accessible_world'(W1,W2) => entity(W2,U))))))))))))))))))).
tff(ax18, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => abstraction(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => ~ ((! [W2:'$world']: (('$accessible_world'(W1,W2) => entity(W2,U))))))))))))))))))).
tff(ax19, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => abstraction(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => ~ ((! [W2:'$world']: (('$accessible_world'(W1,W2) => eventuality(W2,U))))))))))))))))))).
tff(ax20, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => male(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => ~ ((! [W2:'$world']: (('$accessible_world'(W1,W2) => female(W2,U))))))))))))))))))).
tff(ax21, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => man(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => ~ ((! [W2:'$world']: (('$accessible_world'(W1,W2) => woman(W2,U))))))))))))))))))).
tff(ax22, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => man(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => male(W1,U))))))))))))))).
tff(ax23, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => male(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => human(W1,U))))))))))))))).
tff(ax24, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => female(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => human(W1,U))))))))))))))).
tff(ax25, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => woman(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => female(W1,U))))))))))))))).
tff(ax26, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => ((! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => drs(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => proposition(W1,U)))))))) & (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => proposition(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => drs(W1,U)))))))))))))))).
tff(ax27, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => nonhuman(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => entity(W1,U))))))))))))))).
tff(ax28, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => human(W1,U)))) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => ~ ((! [W2:'$world']: (('$accessible_world'(W1,W2) => nonhuman(W2,U))))))))))))))))))).
tff(ax29, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [V:$i]: (('$exists_in_world_$i'(W0,V) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [W:$i]: (('$exists_in_world_$i'(W1,W) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => have(W3,U,V,W)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => human(W3,V))))) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => owner(W3,V)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => of(W3,V,W))))))))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => owner(W3,V)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => of(W3,V,W))))) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => have(W3,U,V,W)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => human(W3,V))))))))))))))))))))))))))))).
tff(ax30, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [V:$i]: (('$exists_in_world_$i'(W0,V) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [W:$i]: (('$exists_in_world_$i'(W1,W) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => have(W3,U,V,W)))) & ((! [W3:'$world']: (('$accessible_world'(W2,W3) => nonhuman(W3,V)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => nonhuman(W3,W)))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => partof(W3,W,V))))))))))))))))))))))))))).
tff(ax31, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [V:$i]: (('$exists_in_world_$i'(W0,V) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [W:$i]: (('$exists_in_world_$i'(W1,W) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => event(W3,U)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => have(W3,U,V,W))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => of(W3,V,W))))))))))))))))))))))))))).
tff(ax32, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [V:$i]: (('$exists_in_world_$i'(W0,V) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => of(W2,V,U)))) => (? [W:$i]: (('$exists_in_world_$i'(W1,W) & ((! [W2:'$world']: (('$accessible_world'(W1,W2) => event(W2,W)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => have(W2,W,U,V))))))))))))))))))))))))).
tff(ax33, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [U:$i]: (('$exists_in_world_$i'(W,U) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [V:$i]: (('$exists_in_world_$i'(W0,V) => (! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [W:$i]: (('$exists_in_world_$i'(W1,W) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => partof(W3,U,V)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => partof(W3,U,W))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,V,W))))))))))))))))))))))))))).
tff(co1, conjecture, (! [W:'$world']: (('$accessible_world'('$local_world',W) => ~ ((? [U:$i,V:$i,W:$i,X:$i]: ((((('$exists_in_world_$i'(W,U) & '$exists_in_world_$i'(W,V)) & '$exists_in_world_$i'(W,W)) & '$exists_in_world_$i'(W,X)) & ((! [W0:'$world']: (('$accessible_world'(W,W0) => hollywood(W0,U)))) & ((! [W0:'$world']: (('$accessible_world'(W,W0) => city(W0,U)))) & ((! [W0:'$world']: (('$accessible_world'(W,W0) => event(W0,V)))) & ((! [W0:'$world']: (('$accessible_world'(W,W0) => chevy(W0,W)))) & ((! [W0:'$world']: (('$accessible_world'(W,W0) => car(W0,W)))) & ((! [W0:'$world']: (('$accessible_world'(W,W0) => white(W0,W)))) & ((! [W0:'$world']: (('$accessible_world'(W,W0) => dirty(W0,W)))) & ((! [W0:'$world']: (('$accessible_world'(W,W0) => old(W0,W)))) & ((! [W0:'$world']: (('$accessible_world'(W,W0) => street(W0,X)))) & ((! [W0:'$world']: (('$accessible_world'(W,W0) => way(W0,X)))) & ((! [W0:'$world']: (('$accessible_world'(W,W0) => lonely(W0,X)))) & ((! [W0:'$world']: (('$accessible_world'(W,W0) => barrel(W0,V,W)))) & ((! [W0:'$world']: (('$accessible_world'(W,W0) => down(W0,V,X)))) & (! [W0:'$world']: (('$accessible_world'(W,W0) => in(W0,V,U))))))))))))))))))))))))).

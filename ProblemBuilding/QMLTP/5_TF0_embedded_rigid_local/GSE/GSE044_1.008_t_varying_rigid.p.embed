%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:04:31 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(t_varying_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($varying),($modalities) == ($modal_system_T),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
tff(mrel_reflexive, axiom, (! [W:'$world']: ('$accessible_world'(W,W)))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(element_decl, type, element: (('$world' * $i * $i) > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Additional meta-logical definitions %%%%%%%%
tff('$exists_in_world_$i_decl', type, '$exists_in_world_$i': (('$world' * $i) > $o)).
tff('$exists_in_world_$i_nonempty', axiom, (! [W:'$world']: ((? [X:$i]: ('$exists_in_world_$i'(W,X)))))).
tff(pel40, conjecture, (! [W:'$world']: (('$accessible_world'('$local_world',W) => ((? [Y:$i]: (('$exists_in_world_$i'(W,Y) & (! [W0:'$world']: (('$accessible_world'(W,W0) => (! [X:$i]: (('$exists_in_world_$i'(W0,X) => ((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => element(W2,X,Y)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => element(W2,X,X)))))))) & (! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => element(W2,X,X)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => element(W2,X,Y)))))))))))))))))) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ~ ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [X1:$i]: (('$exists_in_world_$i'(W1,X1) => (? [Y1:$i]: (('$exists_in_world_$i'(W1,Y1) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => (! [Z:$i]: (('$exists_in_world_$i'(W2,Z) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => ((! [W4:'$world']: (('$accessible_world'(W3,W4) => element(W4,Z,Y1)))) => (! [W4:'$world']: (('$accessible_world'(W3,W4) => ~ ((! [W5:'$world']: (('$accessible_world'(W4,W5) => element(W5,Z,X1)))))))))))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => ((! [W4:'$world']: (('$accessible_world'(W3,W4) => ~ ((! [W5:'$world']: (('$accessible_world'(W4,W5) => element(W5,Z,X1)))))))) => (! [W4:'$world']: (('$accessible_world'(W3,W4) => element(W4,Z,Y1))))))))))))))))))))))))))))))))).

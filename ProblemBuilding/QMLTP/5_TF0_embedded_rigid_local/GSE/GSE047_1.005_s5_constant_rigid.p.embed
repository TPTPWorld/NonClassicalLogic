%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:04:31 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(s5_constant_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($constant),($modalities) == ($modal_system_S5),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
tff(mrel_universal, axiom, (! [W:'$world',V:'$world']: ('$accessible_world'(W,V)))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(set_equal_decl, type, set_equal: (('$world' * $i * $i) > $o)).
tff(element_decl, type, element: (('$world' * $i * $i) > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(pel43_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [Y:$i]: (((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => set_equal(W2,X,Y)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (! [Z:$i]: (((! [W3:'$world']: (('$accessible_world'(W2,W3) => ((! [W4:'$world']: (('$accessible_world'(W3,W4) => element(W4,Z,X)))) => (! [W4:'$world']: (('$accessible_world'(W3,W4) => element(W4,Z,Y)))))))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => ((! [W4:'$world']: (('$accessible_world'(W3,W4) => element(W4,Z,Y)))) => (! [W4:'$world']: (('$accessible_world'(W3,W4) => element(W4,Z,X)))))))))))))))))) & (! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => (! [Z:$i]: (((! [W3:'$world']: (('$accessible_world'(W2,W3) => ((! [W4:'$world']: (('$accessible_world'(W3,W4) => element(W4,Z,X)))) => (! [W4:'$world']: (('$accessible_world'(W3,W4) => element(W4,Z,Y)))))))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => ((! [W4:'$world']: (('$accessible_world'(W3,W4) => element(W4,Z,Y)))) => (! [W4:'$world']: (('$accessible_world'(W3,W4) => element(W4,Z,X)))))))))))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => set_equal(W2,X,Y)))))))))))))))))))).
tff(pel43, conjecture, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [Y:$i]: (((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => set_equal(W2,X,Y)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => set_equal(W2,Y,X)))))))) & (! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => set_equal(W2,Y,X)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => set_equal(W2,X,Y)))))))))))))))))))).

%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:04:34 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(d_constant_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($constant),($modalities) == ($modal_system_D),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
tff(mrel_serial, axiom, (! [W:'$world']: ((? [V:'$world']: ('$accessible_world'(W,V)))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(empty_set_decl, type, empty_set: $i).
tff(qmltpeq_decl, type, qmltpeq: (('$world' * $i * $i) > $o)).
tff(equal_set_decl, type, equal_set: (('$world' * $i * $i) > $o)).
tff(member_decl, type, member: (('$world' * $i * $i) > $o)).
tff(subset_decl, type, subset: (('$world' * $i * $i) > $o)).
tff(singleton_decl, type, singleton: ($i > $i)).
tff(product_decl, type, product: ($i > $i)).
tff(unordered_pair_decl, type, unordered_pair: (($i * $i) > $i)).
tff(intersection_decl, type, intersection: (($i * $i) > $i)).
tff(difference_decl, type, difference: (($i * $i) > $i)).
tff(sum_decl, type, sum: ($i > $i)).
tff(union_decl, type, union: (($i * $i) > $i)).
tff(power_set_decl, type, power_set: ($i > $i)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(reflexivity, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => qmltpeq(W0,X,X)))))))))).
tff(symmetry, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [Y:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,X,Y)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,Y,X))))))))))))))))))).
tff(transitivity, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [Y:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [Z:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,X,Y)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,Y,Z))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,X,Z)))))))))))))))))))))))).
tff(difference_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,difference(A,C),difference(B,C))))))))))))))))))))))))).
tff(difference_substitution_2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,difference(C,A),difference(C,B))))))))))))))))))))))))).
tff(intersection_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,intersection(A,C),intersection(B,C))))))))))))))))))))))))).
tff(intersection_substitution_2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,intersection(C,A),intersection(C,B))))))))))))))))))))))))).
tff(power_set_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,power_set(A),power_set(B)))))))))))))))))))).
tff(product_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,product(A),product(B)))))))))))))))))))).
tff(singleton_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,singleton(A),singleton(B)))))))))))))))))))).
tff(sum_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,sum(A),sum(B)))))))))))))))))))).
tff(union_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,union(A,C),union(B,C))))))))))))))))))))))))).
tff(union_substitution_2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,union(C,A),union(C,B))))))))))))))))))))))))).
tff(unordered_pair_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,unordered_pair(A,C),unordered_pair(B,C))))))))))))))))))))))))).
tff(unordered_pair_substitution_2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,unordered_pair(C,A),unordered_pair(C,B))))))))))))))))))))))))).
tff(equal_set_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => equal_set(W3,A,C))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => equal_set(W3,B,C)))))))))))))))))))))))).
tff(equal_set_substitution_2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => equal_set(W3,C,A))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => equal_set(W3,C,B)))))))))))))))))))))))).
tff(member_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,A,C))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,B,C)))))))))))))))))))))))).
tff(member_substitution_2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,C,A))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,C,B)))))))))))))))))))))))).
tff(subset_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => subset(W3,A,C))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => subset(W3,B,C)))))))))))))))))))))))).
tff(subset_substitution_2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => subset(W3,C,A))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => subset(W3,C,B)))))))))))))))))))))))).
tff(subset_0, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => subset(W2,A,B)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (! [X:$i]: ((! [W3:'$world']: (('$accessible_world'(W2,W3) => ((! [W4:'$world']: (('$accessible_world'(W3,W4) => member(W4,X,A)))) => (! [W4:'$world']: (('$accessible_world'(W3,W4) => member(W4,X,B))))))))))))))))) & (! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => (! [X:$i]: ((! [W3:'$world']: (('$accessible_world'(W2,W3) => ((! [W4:'$world']: (('$accessible_world'(W3,W4) => member(W4,X,A)))) => (! [W4:'$world']: (('$accessible_world'(W3,W4) => member(W4,X,B))))))))))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => subset(W2,A,B)))))))))))))))))))).
tff(equal_set_0, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => equal_set(W2,A,B)))) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => subset(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => subset(W2,B,A))))))))) & (! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => subset(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => subset(W2,B,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => equal_set(W2,A,B)))))))))))))))))))).
tff(power_set_0, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [A:$i]: (((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,X,power_set(A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => subset(W2,X,A)))))))) & (! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => subset(W2,X,A)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,X,power_set(A))))))))))))))))))))).
tff(intersection_0, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [A:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [B:$i]: (((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,X,intersection(A,B))))) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,X,A)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,X,B))))))))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,X,A)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,X,B))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,X,intersection(A,B)))))))))))))))))))))))))).
tff(union_0, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [A:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [B:$i]: (((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,X,union(A,B))))) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,X,A)))) | (! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,X,B))))))))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,X,A)))) | (! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,X,B))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,X,union(A,B)))))))))))))))))))))))))).
tff(empty_set_0, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => ~ ((! [W1:'$world']: (('$accessible_world'(W0,W1) => member(W1,X,empty_set)))))))))))))).
tff(difference_0, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [B:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [A:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [E:$i]: (((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,B,difference(E,A))))) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,B,E)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => ~ ((! [W4:'$world']: (('$accessible_world'(W3,W4) => member(W4,B,A))))))))))))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,B,E)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => ~ ((! [W4:'$world']: (('$accessible_world'(W3,W4) => member(W4,B,A))))))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,B,difference(E,A)))))))))))))))))))))))))).
tff(singleton_0, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [A:$i]: (((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,X,singleton(A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,X,A)))))))) & (! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,X,A)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,X,singleton(A))))))))))))))))))))).
tff(unordered_pair_0, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [A:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [B:$i]: (((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,X,unordered_pair(A,B))))) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,X,A)))) | (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,X,B))))))))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,X,A)))) | (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,X,B))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => member(W3,X,unordered_pair(A,B)))))))))))))))))))))))))).
tff(sum_0, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [A:$i]: (((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,X,sum(A))))) => (? [Y:$i]: (((! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,Y,A)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,X,Y))))))))))) & (! [W1:'$world']: (('$accessible_world'(W0,W1) => ((? [Y:$i]: (((! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,Y,A)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,X,Y))))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,X,sum(A))))))))))))))))))))).
tff(product_0, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [A:$i]: (((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,X,product(A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (! [Y:$i]: ((! [W3:'$world']: (('$accessible_world'(W2,W3) => ((! [W4:'$world']: (('$accessible_world'(W3,W4) => member(W4,Y,A)))) => (! [W4:'$world']: (('$accessible_world'(W3,W4) => member(W4,X,Y))))))))))))))))) & (! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => (! [Y:$i]: ((! [W3:'$world']: (('$accessible_world'(W2,W3) => ((! [W4:'$world']: (('$accessible_world'(W3,W4) => member(W4,Y,A)))) => (! [W4:'$world']: (('$accessible_world'(W3,W4) => member(W4,X,Y))))))))))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,X,product(A))))))))))))))))))))).
tff(thI15, conjecture, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => subset(W0,empty_set,A)))))))))).

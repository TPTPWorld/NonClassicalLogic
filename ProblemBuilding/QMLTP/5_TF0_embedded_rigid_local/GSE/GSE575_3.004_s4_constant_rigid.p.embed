%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:04:36 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(s4_constant_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($constant),($modalities) == ($modal_system_S4),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
tff(mrel_reflexive, axiom, (! [W:'$world']: ('$accessible_world'(W,W)))).
tff(mrel_transitive, axiom, (! [W:'$world',V:'$world',U:'$world']: ((('$accessible_world'(W,V) & '$accessible_world'(V,U)) => '$accessible_world'(W,U))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(intersect_decl, type, intersect: (('$world' * $i * $i) > $o)).
tff(member_decl, type, member: (('$world' * $i * $i) > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(intersect_defn, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [B:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [C:$i]: (((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => intersect(W2,B,C)))) => (? [D:$i]: (((! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,D,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,D,C))))))))))) & (! [W1:'$world']: (('$accessible_world'(W0,W1) => ((? [D:$i]: (((! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,D,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,D,C))))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => intersect(W2,B,C)))))))))))))))))))).
tff(symmetry_of_intersect, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [B:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [C:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => intersect(W2,B,C)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => intersect(W2,C,B))))))))))))))))))).
tff(prove_th15, conjecture, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [B:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [C:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => intersect(W2,B,C)))) => (? [D:$i]: (((! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,D,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => member(W2,D,C)))))))))))))))))))))).

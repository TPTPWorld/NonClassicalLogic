%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:04:42 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(k_constant_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($constant),($modalities) == ($modal_system_K),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(qmltpeq_decl, type, qmltpeq: (('$world' * $i * $i) > $o)).
tff(in_decl, type, in: (('$world' * $i * $i) > $o)).
tff(empty_decl, type, empty: (('$world' * $i) > $o)).
tff(singleton_decl, type, singleton: ($i > $i)).
tff(set_difference_decl, type, set_difference: (($i * $i) > $i)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(reflexivity, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => qmltpeq(W0,X,X)))))))))).
tff(symmetry, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [Y:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,X,Y)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,Y,X))))))))))))))))))).
tff(transitivity, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [X:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [Y:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [Z:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,X,Y)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,Y,Z))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,X,Z)))))))))))))))))))))))).
tff(set_difference_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,set_difference(A,C),set_difference(B,C))))))))))))))))))))))))).
tff(set_difference_substitution_2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,set_difference(C,A),set_difference(C,B))))))))))))))))))))))))).
tff(singleton_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,singleton(A),singleton(B)))))))))))))))))))).
tff(empty_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,A,B)))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => empty(W2,A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => empty(W2,B))))))))))))))))))).
tff(in_substitution_1, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => in(W3,A,C))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => in(W3,B,C)))))))))))))))))))))))).
tff(in_substitution_2, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: ((! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => in(W3,C,A))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => in(W3,C,B)))))))))))))))))))))))).
tff(antisymmetry_r2_hidden, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => in(W2,A,B)))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => ~ ((! [W3:'$world']: (('$accessible_world'(W2,W3) => in(W3,B,A))))))))))))))))))))))).
tff(d1_tarski, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: (((! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,B,singleton(A))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => (! [C:$i]: (((! [W3:'$world']: (('$accessible_world'(W2,W3) => ((! [W4:'$world']: (('$accessible_world'(W3,W4) => in(W4,C,B)))) => (! [W4:'$world']: (('$accessible_world'(W3,W4) => qmltpeq(W4,C,A)))))))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => ((! [W4:'$world']: (('$accessible_world'(W3,W4) => qmltpeq(W4,C,A)))) => (! [W4:'$world']: (('$accessible_world'(W3,W4) => in(W4,C,B)))))))))))))))))) & (! [W1:'$world']: (('$accessible_world'(W0,W1) => ((! [W2:'$world']: (('$accessible_world'(W1,W2) => (! [C:$i]: (((! [W3:'$world']: (('$accessible_world'(W2,W3) => ((! [W4:'$world']: (('$accessible_world'(W3,W4) => in(W4,C,B)))) => (! [W4:'$world']: (('$accessible_world'(W3,W4) => qmltpeq(W4,C,A)))))))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => ((! [W4:'$world']: (('$accessible_world'(W3,W4) => qmltpeq(W4,C,A)))) => (! [W4:'$world']: (('$accessible_world'(W3,W4) => in(W4,C,B)))))))))))))) => (! [W2:'$world']: (('$accessible_world'(W1,W2) => qmltpeq(W2,B,singleton(A))))))))))))))))))))).
tff(d4_xboole_0, axiom, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: (((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,C,set_difference(A,B))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => (! [D:$i]: (((! [W4:'$world']: (('$accessible_world'(W3,W4) => ((! [W5:'$world']: (('$accessible_world'(W4,W5) => in(W5,D,C)))) => ((! [W5:'$world']: (('$accessible_world'(W4,W5) => in(W5,D,A)))) & (! [W5:'$world']: (('$accessible_world'(W4,W5) => ~ ((! [W6:'$world']: (('$accessible_world'(W5,W6) => in(W6,D,B))))))))))))) & (! [W4:'$world']: (('$accessible_world'(W3,W4) => (((! [W5:'$world']: (('$accessible_world'(W4,W5) => in(W5,D,A)))) & (! [W5:'$world']: (('$accessible_world'(W4,W5) => ~ ((! [W6:'$world']: (('$accessible_world'(W5,W6) => in(W6,D,B))))))))) => (! [W5:'$world']: (('$accessible_world'(W4,W5) => in(W5,D,C)))))))))))))))))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => (! [D:$i]: (((! [W4:'$world']: (('$accessible_world'(W3,W4) => ((! [W5:'$world']: (('$accessible_world'(W4,W5) => in(W5,D,C)))) => ((! [W5:'$world']: (('$accessible_world'(W4,W5) => in(W5,D,A)))) & (! [W5:'$world']: (('$accessible_world'(W4,W5) => ~ ((! [W6:'$world']: (('$accessible_world'(W5,W6) => in(W6,D,B))))))))))))) & (! [W4:'$world']: (('$accessible_world'(W3,W4) => (((! [W5:'$world']: (('$accessible_world'(W4,W5) => in(W5,D,A)))) & (! [W5:'$world']: (('$accessible_world'(W4,W5) => ~ ((! [W6:'$world']: (('$accessible_world'(W5,W6) => in(W6,D,B))))))))) => (! [W5:'$world']: (('$accessible_world'(W4,W5) => in(W5,D,C)))))))))))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => qmltpeq(W3,C,set_difference(A,B)))))))))))))))))))))))))).
tff(rc1_xboole_0, axiom, (? [A:$i]: ((! [W:'$world']: (('$accessible_world'('$local_world',W) => empty(W,A))))))).
tff(rc2_xboole_0, axiom, (? [A:$i]: ((! [W:'$world']: (('$accessible_world'('$local_world',W) => ~ ((! [W0:'$world']: (('$accessible_world'(W,W0) => empty(W0,A))))))))))).
tff(t64_zfmisc_1, conjecture, (! [W:'$world']: (('$accessible_world'('$local_world',W) => (! [A:$i]: ((! [W0:'$world']: (('$accessible_world'(W,W0) => (! [B:$i]: ((! [W1:'$world']: (('$accessible_world'(W0,W1) => (! [C:$i]: (((! [W2:'$world']: (('$accessible_world'(W1,W2) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => in(W3,A,set_difference(B,singleton(C)))))) => ((! [W3:'$world']: (('$accessible_world'(W2,W3) => in(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => ~ ((! [W4:'$world']: (('$accessible_world'(W3,W4) => qmltpeq(W4,A,C))))))))))))) & (! [W2:'$world']: (('$accessible_world'(W1,W2) => (((! [W3:'$world']: (('$accessible_world'(W2,W3) => in(W3,A,B)))) & (! [W3:'$world']: (('$accessible_world'(W2,W3) => ~ ((! [W4:'$world']: (('$accessible_world'(W3,W4) => qmltpeq(W4,A,C))))))))) => (! [W3:'$world']: (('$accessible_world'(W2,W3) => in(W3,A,set_difference(B,singleton(C))))))))))))))))))))))))))).

%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:05:28 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(d_decreasing_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($decreasing),($modalities) == ($modal_system_D),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
tff(mrel_serial, axiom, (! [W:'$world']: ((? [V:'$world']: ('$accessible_world'(W,V)))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(p1_decl, type, p1: ('$world' > $o)).
tff(p2_decl, type, p2: ('$world' > $o)).
tff(pel9, conjecture, (! [W:'$world']: (('$accessible_world'('$local_world',W) => ((((! [W0:'$world']: (('$accessible_world'(W,W0) => p1(W0)))) | (! [W0:'$world']: (('$accessible_world'(W,W0) => p2(W0))))) & (((! [W0:'$world']: (('$accessible_world'(W,W0) => ~ ((! [W1:'$world']: (('$accessible_world'(W0,W1) => p1(W1)))))))) | (! [W0:'$world']: (('$accessible_world'(W,W0) => p2(W0))))) & ((! [W0:'$world']: (('$accessible_world'(W,W0) => p1(W0)))) | (! [W0:'$world']: (('$accessible_world'(W,W0) => ~ ((! [W1:'$world']: (('$accessible_world'(W0,W1) => p2(W1))))))))))) => (! [W0:'$world']: (('$accessible_world'(W,W0) => ~ (((! [W1:'$world']: (('$accessible_world'(W0,W1) => ~ ((! [W2:'$world']: (('$accessible_world'(W1,W2) => p1(W2)))))))) | (! [W1:'$world']: (('$accessible_world'(W0,W1) => ~ ((! [W2:'$world']: (('$accessible_world'(W1,W2) => p2(W2)))))))))))))))))).

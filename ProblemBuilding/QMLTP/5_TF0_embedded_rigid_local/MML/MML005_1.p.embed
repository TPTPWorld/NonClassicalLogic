%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:26:40 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(s4_cumulative_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($cumulative),($modalities) == ($modal_system_S4),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$index_type', type, '$index': $tType).
tff('$accessible_world_decl', type, '$accessible_world': (('$index' * '$world' * '$world') > $o)).
tff('#idx(always)_decl', type, '#idx(always)': '$index').
tff('#idx(praise)_decl', type, '#idx(praise)': '$index').
tff('#idx(sing)_decl', type, '#idx(sing)': '$index').
tff('#idx(fox)_decl', type, '#idx(fox)': '$index').
tff('mrel_reflexive_#idx(always)', axiom, (! [W:'$world']: ('$accessible_world'('#idx(always)',W,W)))).
tff('mrel_transitive_#idx(always)', axiom, (! [W:'$world',V:'$world',U:'$world']: ((('$accessible_world'('#idx(always)',W,V) & '$accessible_world'('#idx(always)',V,U)) => '$accessible_world'('#idx(always)',W,U))))).
tff('mrel_reflexive_#idx(praise)', axiom, (! [W:'$world']: ('$accessible_world'('#idx(praise)',W,W)))).
tff('mrel_transitive_#idx(praise)', axiom, (! [W:'$world',V:'$world',U:'$world']: ((('$accessible_world'('#idx(praise)',W,V) & '$accessible_world'('#idx(praise)',V,U)) => '$accessible_world'('#idx(praise)',W,U))))).
tff('mrel_reflexive_#idx(sing)', axiom, (! [W:'$world']: ('$accessible_world'('#idx(sing)',W,W)))).
tff('mrel_transitive_#idx(sing)', axiom, (! [W:'$world',V:'$world',U:'$world']: ((('$accessible_world'('#idx(sing)',W,V) & '$accessible_world'('#idx(sing)',V,U)) => '$accessible_world'('#idx(sing)',W,U))))).
tff('mrel_reflexive_#idx(fox)', axiom, (! [W:'$world']: ('$accessible_world'('#idx(fox)',W,W)))).
tff('mrel_transitive_#idx(fox)', axiom, (! [W:'$world',V:'$world',U:'$world']: ((('$accessible_world'('#idx(fox)',W,V) & '$accessible_world'('#idx(fox)',V,U)) => '$accessible_world'('#idx(fox)',W,U))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(raven_decl, type, raven: $i).
tff(cheese_decl, type, cheese: $i).
tff(dropped_decl, type, dropped: (('$world' * $i) > $o)).
tff(charmed_decl, type, charmed: (('$world' * $i) > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(i_always_praise_1_1, axiom, ((! [W:'$world']: (('$accessible_world'('#idx(always)','$local_world',W) => dropped(W,cheese)))) => (! [W:'$world']: (('$accessible_world'('#idx(praise)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(always)',W,W0) => dropped(W0,cheese))))))))).
tff(i_always_praise_2_2, axiom, ((! [W:'$world']: (('$accessible_world'('#idx(always)','$local_world',W) => ~ (dropped(W,cheese))))) => (! [W:'$world']: (('$accessible_world'('#idx(praise)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(always)',W,W0) => ~ (dropped(W0,cheese)))))))))).
tff(i_always_praise_1_3, axiom, ((! [W:'$world']: (('$accessible_world'('#idx(always)','$local_world',W) => charmed(W,raven)))) => (! [W:'$world']: (('$accessible_world'('#idx(praise)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(always)',W,W0) => charmed(W0,raven))))))))).
tff(i_always_praise_2_4, axiom, ((! [W:'$world']: (('$accessible_world'('#idx(always)','$local_world',W) => ~ (charmed(W,cheese))))) => (! [W:'$world']: (('$accessible_world'('#idx(praise)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(always)',W,W0) => ~ (charmed(W0,raven)))))))))).
tff(i_always_praise_1_5, axiom, ((! [W:'$world']: (('$accessible_world'('#idx(always)','$local_world',W) => dropped(W,cheese)))) => (! [W:'$world']: (('$accessible_world'('#idx(sing)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(always)',W,W0) => dropped(W0,cheese))))))))).
tff(i_always_praise_2_6, axiom, ((! [W:'$world']: (('$accessible_world'('#idx(always)','$local_world',W) => ~ (dropped(W,cheese))))) => (! [W:'$world']: (('$accessible_world'('#idx(sing)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(always)',W,W0) => ~ (dropped(W0,cheese)))))))))).
tff(i_always_praise_1_7, axiom, ((! [W:'$world']: (('$accessible_world'('#idx(always)','$local_world',W) => charmed(W,raven)))) => (! [W:'$world']: (('$accessible_world'('#idx(sing)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(always)',W,W0) => charmed(W0,raven))))))))).
tff(i_always_praise_2_8, axiom, ((! [W:'$world']: (('$accessible_world'('#idx(always)','$local_world',W) => ~ (charmed(W,cheese))))) => (! [W:'$world']: (('$accessible_world'('#idx(sing)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(always)',W,W0) => ~ (charmed(W0,raven)))))))))).
tff(axiom_1, axiom, (! [W:'$world']: (('$accessible_world'('#idx(fox)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(praise)',W,W0) => charmed(W0,raven)))))))).
tff(axiom_2, axiom, (! [W:'$world']: (('$accessible_world'('#idx(fox)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(always)',W,W0) => (charmed(W0,raven) => (! [W1:'$world']: (('$accessible_world'('#idx(sing)',W0,W1) => dropped(W1,cheese)))))))))))).
tff(conj, conjecture, (! [W:'$world']: (('$accessible_world'('#idx(fox)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(praise)',W,W0) => (! [W1:'$world']: (('$accessible_world'('#idx(sing)',W0,W1) => dropped(W1,cheese))))))))))).

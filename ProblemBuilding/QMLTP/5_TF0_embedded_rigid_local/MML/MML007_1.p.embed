%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:26:40 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(s5_cumulative_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($cumulative),($modalities) == ($modal_system_S5),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$index_type', type, '$index': $tType).
tff('$accessible_world_decl', type, '$accessible_world': (('$index' * '$world' * '$world') > $o)).
tff('#idx(a)_decl', type, '#idx(a)': '$index').
tff('#idx(c)_decl', type, '#idx(c)': '$index').
tff('#idx(b)_decl', type, '#idx(b)': '$index').
tff('mrel_reflexive_#idx(a)', axiom, (! [W:'$world']: ('$accessible_world'('#idx(a)',W,W)))).
tff('mrel_transitive_#idx(a)', axiom, (! [W:'$world',V:'$world',U:'$world']: ((('$accessible_world'('#idx(a)',W,V) & '$accessible_world'('#idx(a)',V,U)) => '$accessible_world'('#idx(a)',W,U))))).
tff('mrel_euclidean_#idx(a)', axiom, (! [W:'$world',V:'$world',U:'$world']: ((('$accessible_world'('#idx(a)',W,U) & '$accessible_world'('#idx(a)',W,V)) => '$accessible_world'('#idx(a)',U,V))))).
tff('mrel_reflexive_#idx(c)', axiom, (! [W:'$world']: ('$accessible_world'('#idx(c)',W,W)))).
tff('mrel_transitive_#idx(c)', axiom, (! [W:'$world',V:'$world',U:'$world']: ((('$accessible_world'('#idx(c)',W,V) & '$accessible_world'('#idx(c)',V,U)) => '$accessible_world'('#idx(c)',W,U))))).
tff('mrel_euclidean_#idx(c)', axiom, (! [W:'$world',V:'$world',U:'$world']: ((('$accessible_world'('#idx(c)',W,U) & '$accessible_world'('#idx(c)',W,V)) => '$accessible_world'('#idx(c)',U,V))))).
tff('mrel_reflexive_#idx(b)', axiom, (! [W:'$world']: ('$accessible_world'('#idx(b)',W,W)))).
tff('mrel_transitive_#idx(b)', axiom, (! [W:'$world',V:'$world',U:'$world']: ((('$accessible_world'('#idx(b)',W,V) & '$accessible_world'('#idx(b)',V,U)) => '$accessible_world'('#idx(b)',W,U))))).
tff('mrel_euclidean_#idx(b)', axiom, (! [W:'$world',V:'$world',U:'$world']: ((('$accessible_world'('#idx(b)',W,U) & '$accessible_world'('#idx(b)',W,V)) => '$accessible_world'('#idx(b)',U,V))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(c0_decl, type, c0: ('$world' > $o)).
tff(c1_decl, type, c1: ('$world' > $o)).
tff(b0_decl, type, b0: ('$world' > $o)).
tff(c2_decl, type, c2: ('$world' > $o)).
tff(b1_decl, type, b1: ('$world' > $o)).
tff(a0_decl, type, a0: ('$world' > $o)).
tff(b2_decl, type, b2: ('$world' > $o)).
tff(a1_decl, type, a1: ('$world' > $o)).
tff(a2_decl, type, a2: ('$world' > $o)).
tff(cb_decl, type, cb: ('$world' > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(axiom_knows_a_b_c, axiom, (! [W:'$world']: (('$accessible_world'('#idx(a)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(b)',W,W0) => ((! [W1:'$world']: (('$accessible_world'('#idx(c)',W0,W1) => c0(W1)))) | ((! [W1:'$world']: (('$accessible_world'('#idx(c)',W0,W1) => c1(W1)))) | (! [W1:'$world']: (('$accessible_world'('#idx(c)',W0,W1) => c2(W1))))))))))))).
tff(axiom_knows_b_a_c, axiom, (! [W:'$world']: (('$accessible_world'('#idx(b)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(a)',W,W0) => ((! [W1:'$world']: (('$accessible_world'('#idx(c)',W0,W1) => c0(W1)))) | ((! [W1:'$world']: (('$accessible_world'('#idx(c)',W0,W1) => c1(W1)))) | (! [W1:'$world']: (('$accessible_world'('#idx(c)',W0,W1) => c2(W1))))))))))))).
tff(axiom_knows_a_b_c_0, axiom, (! [W:'$world']: (('$accessible_world'('#idx(a)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(b)',W,W0) => ((! [W1:'$world']: (('$accessible_world'('#idx(c)',W0,W1) => c0(W1)))) | ((! [W1:'$world']: (('$accessible_world'('#idx(c)',W0,W1) => c1(W1)))) | (! [W1:'$world']: (('$accessible_world'('#idx(c)',W0,W1) => c2(W1))))))))))))).
tff(axiom_knows_a_c_b, axiom, (! [W:'$world']: (('$accessible_world'('#idx(a)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(c)',W,W0) => ((! [W1:'$world']: (('$accessible_world'('#idx(b)',W0,W1) => b0(W1)))) | ((! [W1:'$world']: (('$accessible_world'('#idx(b)',W0,W1) => b1(W1)))) | (! [W1:'$world']: (('$accessible_world'('#idx(b)',W0,W1) => b2(W1))))))))))))).
tff(axiom_knows_c_a_b, axiom, (! [W:'$world']: (('$accessible_world'('#idx(c)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(a)',W,W0) => ((! [W1:'$world']: (('$accessible_world'('#idx(b)',W0,W1) => cb(W1)))) | ((! [W1:'$world']: (('$accessible_world'('#idx(b)',W0,W1) => b1(W1)))) | (! [W1:'$world']: (('$accessible_world'('#idx(b)',W0,W1) => b2(W1))))))))))))).
tff(axiom_knows_c_b_a, axiom, (! [W:'$world']: (('$accessible_world'('#idx(c)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(b)',W,W0) => ((! [W1:'$world']: (('$accessible_world'('#idx(a)',W0,W1) => a0(W1)))) | ((! [W1:'$world']: (('$accessible_world'('#idx(a)',W0,W1) => a1(W1)))) | (! [W1:'$world']: (('$accessible_world'('#idx(a)',W0,W1) => a2(W1))))))))))))).
tff(axiom_knows_b_c_a, axiom, (! [W:'$world']: (('$accessible_world'('#idx(b)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(c)',W,W0) => ((! [W1:'$world']: (('$accessible_world'('#idx(a)',W0,W1) => a0(W1)))) | ((! [W1:'$world']: (('$accessible_world'('#idx(a)',W0,W1) => a1(W1)))) | (! [W1:'$world']: (('$accessible_world'('#idx(a)',W0,W1) => a2(W1))))))))))))).
tff(axiom_a0, axiom, a0('$local_world')).
tff(con, conjecture, (! [W:'$world']: (('$accessible_world'('#idx(b)','$local_world',W) => ~ ((? [W0:'$world']: (('$accessible_world'('#idx(a)',W,W0) & (? [W1:'$world']: (('$accessible_world'('#idx(b)',W0,W1) & (! [W2:'$world']: (('$accessible_world'('#idx(c)',W1,W2) => ~ (a0(W2)))))))))))))))).

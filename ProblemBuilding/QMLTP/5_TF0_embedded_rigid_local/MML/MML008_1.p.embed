%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:26:40 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(s4_cumulative_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($cumulative),($modalities) == ($modal_system_S4),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$index_type', type, '$index': $tType).
tff('$accessible_world_decl', type, '$accessible_world': (('$index' * '$world' * '$world') > $o)).
tff('#idx(fool)_decl', type, '#idx(fool)': '$index').
tff('#idx(anne)_decl', type, '#idx(anne)': '$index').
tff('#idx(bill)_decl', type, '#idx(bill)': '$index').
tff('mrel_reflexive_#idx(fool)', axiom, (! [W:'$world']: ('$accessible_world'('#idx(fool)',W,W)))).
tff('mrel_transitive_#idx(fool)', axiom, (! [W:'$world',V:'$world',U:'$world']: ((('$accessible_world'('#idx(fool)',W,V) & '$accessible_world'('#idx(fool)',V,U)) => '$accessible_world'('#idx(fool)',W,U))))).
tff('mrel_reflexive_#idx(anne)', axiom, (! [W:'$world']: ('$accessible_world'('#idx(anne)',W,W)))).
tff('mrel_transitive_#idx(anne)', axiom, (! [W:'$world',V:'$world',U:'$world']: ((('$accessible_world'('#idx(anne)',W,V) & '$accessible_world'('#idx(anne)',V,U)) => '$accessible_world'('#idx(anne)',W,U))))).
tff('mrel_reflexive_#idx(bill)', axiom, (! [W:'$world']: ('$accessible_world'('#idx(bill)',W,W)))).
tff('mrel_transitive_#idx(bill)', axiom, (! [W:'$world',V:'$world',U:'$world']: ((('$accessible_world'('#idx(bill)',W,V) & '$accessible_world'('#idx(bill)',V,U)) => '$accessible_world'('#idx(bill)',W,U))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(n0_decl, type, n0: $i).
tff(n1_decl, type, n1: $i).
tff(n2_decl, type, n2: $i).
tff(n3_decl, type, n3: $i).
tff(n4_decl, type, n4: $i).
tff(n5_decl, type, n5: $i).
tff(n6_decl, type, n6: $i).
tff(a_decl, type, a: (('$world' * $i) > $o)).
tff(b_decl, type, b: (('$world' * $i) > $o)).
tff(succ_decl, type, succ: (('$world' * $i * $i) > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Additional meta-logical definitions %%%%%%%%
tff('$exists_in_world_$i_decl', type, '$exists_in_world_$i': (('$world' * $i) > $o)).
tff('$exists_in_world_$i_cumul_#idx(fool)', axiom, (! [W:'$world',V:'$world',X:$i]: ((('$exists_in_world_$i'(W,X) & '$accessible_world'('#idx(fool)',W,V)) => '$exists_in_world_$i'(V,X))))).
tff('$exists_in_world_$i_cumul_#idx(anne)', axiom, (! [W:'$world',V:'$world',X:$i]: ((('$exists_in_world_$i'(W,X) & '$accessible_world'('#idx(anne)',W,V)) => '$exists_in_world_$i'(V,X))))).
tff('$exists_in_world_$i_cumul_#idx(bill)', axiom, (! [W:'$world',V:'$world',X:$i]: ((('$exists_in_world_$i'(W,X) & '$accessible_world'('#idx(bill)',W,V)) => '$exists_in_world_$i'(V,X))))).
tff('$exists_in_world_$i_nonempty', axiom, (! [W:'$world']: ((? [X:$i]: ('$exists_in_world_$i'(W,X)))))).
tff('$exists_in_world_n4_mono', axiom, (! [W:'$world']: ('$exists_in_world_$i'(W,n4)))).
tff('$exists_in_world_n0_mono', axiom, (! [W:'$world']: ('$exists_in_world_$i'(W,n0)))).
tff('$exists_in_world_n1_mono', axiom, (! [W:'$world']: ('$exists_in_world_$i'(W,n1)))).
tff('$exists_in_world_n2_mono', axiom, (! [W:'$world']: ('$exists_in_world_$i'(W,n2)))).
tff('$exists_in_world_n5_mono', axiom, (! [W:'$world']: ('$exists_in_world_$i'(W,n5)))).
tff('$exists_in_world_n3_mono', axiom, (! [W:'$world']: ('$exists_in_world_$i'(W,n3)))).
tff('$exists_in_world_n6_mono', axiom, (! [W:'$world']: ('$exists_in_world_$i'(W,n6)))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(axiom_1, axiom, (! [W:'$world']: (('$accessible_world'('#idx(fool)','$local_world',W) => succ(W,n0,n1))))).
tff(axiom_2, axiom, (! [W:'$world']: (('$accessible_world'('#idx(fool)','$local_world',W) => succ(W,n1,n2))))).
tff(axiom_3, axiom, (! [W:'$world']: (('$accessible_world'('#idx(fool)','$local_world',W) => succ(W,n2,n3))))).
tff(axiom_4, axiom, (! [W:'$world']: (('$accessible_world'('#idx(fool)','$local_world',W) => succ(W,n3,n4))))).
tff(axiom_5, axiom, (! [W:'$world']: (('$accessible_world'('#idx(fool)','$local_world',W) => succ(W,n4,n5))))).
tff(axiom_6, axiom, (! [W:'$world']: (('$accessible_world'('#idx(fool)','$local_world',W) => succ(W,n5,n6))))).
tff(axiom_7, axiom, (! [W:'$world']: (('$accessible_world'('#idx(fool)','$local_world',W) => (? [X:$i]: (('$exists_in_world_$i'(W,X) & (? [Y:$i]: (('$exists_in_world_$i'(W,Y) & (a(W,X) & (b(W,Y) & (succ(W,X,Y) | succ(W,Y,X)))))))))))))).
tff(axiom_8, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => (a('$local_world',X) => (! [W:'$world']: (('$accessible_world'('#idx(bill)','$local_world',W) => a(W,X))))))))).
tff(axiom_9, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => (b('$local_world',X) => (! [W:'$world']: (('$accessible_world'('#idx(bill)','$local_world',W) => b(W,X))))))))).
tff(axiom_i_for_fool_a_1, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => ((! [W:'$world']: (('$accessible_world'('#idx(fool)','$local_world',W) => a(W,X)))) => (! [W:'$world']: (('$accessible_world'('#idx(anne)','$local_world',W) => a(W,X))))))))).
tff(axiom_i_for_fool_a_2, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => ((! [W:'$world']: (('$accessible_world'('#idx(fool)','$local_world',W) => ~ (a(W,X))))) => (! [W:'$world']: (('$accessible_world'('#idx(anne)','$local_world',W) => ~ (a(W,X)))))))))).
tff(axiom_i_for_fool_a_3, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => ((! [W:'$world']: (('$accessible_world'('#idx(fool)','$local_world',W) => b(W,X)))) => (! [W:'$world']: (('$accessible_world'('#idx(anne)','$local_world',W) => b(W,X))))))))).
tff(axiom_i_for_fool_a_4, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => ((! [W:'$world']: (('$accessible_world'('#idx(fool)','$local_world',W) => ~ (b(W,X))))) => (! [W:'$world']: (('$accessible_world'('#idx(anne)','$local_world',W) => ~ (b(W,X)))))))))).
tff(axiom_i_for_fool_b_1, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => ((! [W:'$world']: (('$accessible_world'('#idx(fool)','$local_world',W) => a(W,X)))) => (! [W:'$world']: (('$accessible_world'('#idx(bill)','$local_world',W) => a(W,X))))))))).
tff(axiom_i_for_fool_b_2, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => ((! [W:'$world']: (('$accessible_world'('#idx(fool)','$local_world',W) => ~ (a(W,X))))) => (! [W:'$world']: (('$accessible_world'('#idx(bill)','$local_world',W) => ~ (a(W,X)))))))))).
tff(axiom_i_for_fool_b_3, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => ((! [W:'$world']: (('$accessible_world'('#idx(fool)','$local_world',W) => b(W,X)))) => (! [W:'$world']: (('$accessible_world'('#idx(bill)','$local_world',W) => b(W,X))))))))).
tff(axiom_i_for_fool_b_4, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => ((! [W:'$world']: (('$accessible_world'('#idx(fool)','$local_world',W) => ~ (b(W,X))))) => (! [W:'$world']: (('$accessible_world'('#idx(bill)','$local_world',W) => ~ (b(W,X)))))))))).
tff(axiom_a3, axiom, a('$local_world',n3)).
tff(axiom_b2, axiom, b('$local_world',n2)).
tff(con, conjecture, ((! [W:'$world']: (('$accessible_world'('#idx(anne)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(bill)',W,W0) => (! [W1:'$world']: (('$accessible_world'('#idx(anne)',W0,W1) => (b(W1,n0) | (b(W1,n2) | b(W1,n4)))))))))))) & (! [W:'$world']: (('$accessible_world'('#idx(bill)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(anne)',W,W0) => (! [W1:'$world']: (('$accessible_world'('#idx(bill)',W0,W1) => (a(W1,n1) | (a(W1,n3) | a(W1,n5)))))))))))))).

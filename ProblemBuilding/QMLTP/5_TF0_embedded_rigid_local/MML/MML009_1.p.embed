%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:26:40 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(d_cumulative_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($cumulative),($modalities) == ($modal_system_D),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$index_type', type, '$index': $tType).
tff('$accessible_world_decl', type, '$accessible_world': (('$index' * '$world' * '$world') > $o)).
tff('#idx(bu)_decl', type, '#idx(bu)': '$index').
tff('#idx(bs)_decl', type, '#idx(bs)': '$index').
tff('#idx(wu)_decl', type, '#idx(wu)': '$index').
tff('mrel_serial_#idx(bu)', axiom, (! [W:'$world']: ((? [V:'$world']: ('$accessible_world'('#idx(bu)',W,V)))))).
tff('mrel_serial_#idx(bs)', axiom, (! [W:'$world']: ((? [V:'$world']: ('$accessible_world'('#idx(bs)',W,V)))))).
tff('mrel_serial_#idx(wu)', axiom, (! [W:'$world']: ((? [V:'$world']: ('$accessible_world'('#idx(wu)',W,V)))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(userdoc_decl, type, userdoc: $i).
tff(lw_decl, type, lw: $i).
tff(printed_decl, type, printed: (('$world' * $i) > $o)).
tff(printableon_decl, type, printableon: (('$world' * $i * $i) > $o)).
tff(printedable_decl, type, printedable: (('$world' * $i * $i) > $o)).
tff(printedon_decl, type, printedon: (('$world' * $i * $i) > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Additional meta-logical definitions %%%%%%%%
tff('$exists_in_world_$i_decl', type, '$exists_in_world_$i': (('$world' * $i) > $o)).
tff('$exists_in_world_$i_cumul_#idx(bu)', axiom, (! [W:'$world',V:'$world',X:$i]: ((('$exists_in_world_$i'(W,X) & '$accessible_world'('#idx(bu)',W,V)) => '$exists_in_world_$i'(V,X))))).
tff('$exists_in_world_$i_cumul_#idx(bs)', axiom, (! [W:'$world',V:'$world',X:$i]: ((('$exists_in_world_$i'(W,X) & '$accessible_world'('#idx(bs)',W,V)) => '$exists_in_world_$i'(V,X))))).
tff('$exists_in_world_$i_cumul_#idx(wu)', axiom, (! [W:'$world',V:'$world',X:$i]: ((('$exists_in_world_$i'(W,X) & '$accessible_world'('#idx(wu)',W,V)) => '$exists_in_world_$i'(V,X))))).
tff('$exists_in_world_$i_nonempty', axiom, (! [W:'$world']: ((? [X:$i]: ('$exists_in_world_$i'(W,X)))))).
tff('$exists_in_world_userdoc_mono', axiom, (! [W:'$world']: ('$exists_in_world_$i'(W,userdoc)))).
tff('$exists_in_world_lw_mono', axiom, (! [W:'$world']: ('$exists_in_world_$i'(W,lw)))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(axiom_1, axiom, (! [D:$i]: (('$exists_in_world_$i'('$local_world',D) => (! [P:$i]: (('$exists_in_world_$i'('$local_world',P) => ((! [W:'$world']: (('$accessible_world'('#idx(bs)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(wu)',W,W0) => printedon(W0,D,P))))))) => (! [W:'$world']: (('$accessible_world'('#idx(bs)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(bu)',W,W0) => printableon(W0,D,P))))))))))))))).
tff(axiom_2_1, axiom, (! [D:$i]: (('$exists_in_world_$i'('$local_world',D) => (! [P:$i]: (('$exists_in_world_$i'('$local_world',P) => (((! [W:'$world']: (('$accessible_world'('#idx(bs)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(wu)',W,W0) => printed(W0,D))))))) & (! [W:'$world']: (('$accessible_world'('#idx(bs)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(bu)',W,W0) => (printed(W0,D) => printedon(W0,D,P))))))))) => (! [W:'$world']: (('$accessible_world'('#idx(bs)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(wu)',W,W0) => printedon(W0,D,P))))))))))))))).
tff(axiom_2_2, axiom, (! [D:$i]: (('$exists_in_world_$i'('$local_world',D) => (! [P:$i]: (('$exists_in_world_$i'('$local_world',P) => (((! [W:'$world']: (('$accessible_world'('#idx(bs)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(wu)',W,W0) => printedon(W0,D,P))))))) & (! [W:'$world']: (('$accessible_world'('#idx(bs)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(bu)',W,W0) => (printedon(W0,D,P) => printedable(W0,D,P))))))))) => (! [W:'$world']: (('$accessible_world'('#idx(bs)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(wu)',W,W0) => printedable(W0,D,P))))))))))))))).
tff(axiom_3, axiom, (! [W:'$world']: (('$accessible_world'('#idx(bs)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(wu)',W,W0) => printed(W0,userdoc)))))))).
tff(axiom_4, axiom, (! [W:'$world']: (('$accessible_world'('#idx(bs)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(bu)',W,W0) => (! [D:$i]: (('$exists_in_world_$i'(W0,D) => (printed(W0,D) => printedon(W0,D,lw)))))))))))).
tff(con, conjecture, (! [W:'$world']: (('$accessible_world'('#idx(bs)','$local_world',W) => (! [W0:'$world']: (('$accessible_world'('#idx(wu)',W,W0) => printedon(W0,userdoc,lw)))))))).

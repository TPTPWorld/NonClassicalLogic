%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:26:40 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(s4_cumulative_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($cumulative),($modalities) == ($modal_system_S4),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$index_type', type, '$index': $tType).
tff('$accessible_world_decl', type, '$accessible_world': (('$index' * '$world' * '$world') > $o)).
tff('#idx(ticket)_decl', type, '#idx(ticket)': '$index').
tff('#idx(coffee)_decl', type, '#idx(coffee)': '$index').
tff('mrel_reflexive_#idx(ticket)', axiom, (! [W:'$world']: ('$accessible_world'('#idx(ticket)',W,W)))).
tff('mrel_transitive_#idx(ticket)', axiom, (! [W:'$world',V:'$world',U:'$world']: ((('$accessible_world'('#idx(ticket)',W,V) & '$accessible_world'('#idx(ticket)',V,U)) => '$accessible_world'('#idx(ticket)',W,U))))).
tff('mrel_reflexive_#idx(coffee)', axiom, (! [W:'$world']: ('$accessible_world'('#idx(coffee)',W,W)))).
tff('mrel_transitive_#idx(coffee)', axiom, (! [W:'$world',V:'$world',U:'$world']: ((('$accessible_world'('#idx(coffee)',W,V) & '$accessible_world'('#idx(coffee)',V,U)) => '$accessible_world'('#idx(coffee)',W,U))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(passenger_decl, type, passenger: $i).
tff(takejourney_decl, type, takejourney: (('$world' * $i) > $o)).
tff(usemachine_decl, type, usemachine: (('$world' * $i) > $o)).
tff(visitdonuts_decl, type, visitdonuts: (('$world' * $i) > $o)).
tff(usewindow_decl, type, usewindow: (('$world' * $i) > $o)).
tff(getticket_decl, type, getticket: (('$world' * $i) > $o)).
tff(visitstarbucks_decl, type, visitstarbucks: (('$world' * $i) > $o)).
tff(getcoffee_decl, type, getcoffee: (('$world' * $i) > $o)).
tff(visitstarbuck_decl, type, visitstarbuck: (('$world' * $i) > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Additional meta-logical definitions %%%%%%%%
tff('$exists_in_world_$i_decl', type, '$exists_in_world_$i': (('$world' * $i) > $o)).
tff('$exists_in_world_$i_cumul_#idx(ticket)', axiom, (! [W:'$world',V:'$world',X:$i]: ((('$exists_in_world_$i'(W,X) & '$accessible_world'('#idx(ticket)',W,V)) => '$exists_in_world_$i'(V,X))))).
tff('$exists_in_world_$i_cumul_#idx(coffee)', axiom, (! [W:'$world',V:'$world',X:$i]: ((('$exists_in_world_$i'(W,X) & '$accessible_world'('#idx(coffee)',W,V)) => '$exists_in_world_$i'(V,X))))).
tff('$exists_in_world_$i_nonempty', axiom, (! [W:'$world']: ((? [X:$i]: ('$exists_in_world_$i'(W,X)))))).
tff('$exists_in_world_passenger_mono', axiom, (! [W:'$world']: ('$exists_in_world_$i'(W,passenger)))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(axiom_1, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => (! [W:'$world']: (('$accessible_world'('#idx(ticket)','$local_world',W) => (usemachine(W,X) | usewindow(W,X))))))))).
tff(axiom_2, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => (! [W:'$world']: (('$accessible_world'('#idx(ticket)','$local_world',W) => (usemachine(W,X) => getticket(W,X))))))))).
tff(axiom_3, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => (! [W:'$world']: (('$accessible_world'('#idx(ticket)','$local_world',W) => (usewindow(W,X) => getticket(W,X))))))))).
tff(axiom_4, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => (! [W:'$world']: (('$accessible_world'('#idx(coffee)','$local_world',W) => (visitdonuts(W,X) | visitstarbucks(W,X))))))))).
tff(axiom_5, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => (! [W:'$world']: (('$accessible_world'('#idx(coffee)','$local_world',W) => (visitdonuts(W,X) => getcoffee(W,X))))))))).
tff(axiom_6, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => (! [W:'$world']: (('$accessible_world'('#idx(coffee)','$local_world',W) => (visitstarbuck(W,X) => getcoffee(W,X))))))))).
tff(axiom_7, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => (((! [W:'$world']: (('$accessible_world'('#idx(ticket)','$local_world',W) => getticket(W,X)))) & (! [W:'$world']: (('$accessible_world'('#idx(coffee)','$local_world',W) => getcoffee(W,X))))) => takejourney('$local_world',X)))))).
tff(con, conjecture, takejourney('$local_world',passenger)).

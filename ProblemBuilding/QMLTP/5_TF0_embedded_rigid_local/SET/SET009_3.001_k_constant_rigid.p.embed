%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:05:33 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(k_constant_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($constant),($modalities) == ($modal_system_K),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(member_decl, type, member: (('$world' * $i * $i) > $o)).
tff(subset_decl, type, subset: (('$world' * $i * $i) > $o)).
tff(difference_decl, type, difference: (($i * $i) > $i)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(difference_defn, axiom, (! [B:$i,C:$i,D:$i]: ((member('$local_world',D,difference(B,C)) <=> (member('$local_world',D,B) & ~ (member('$local_world',D,C))))))).
tff(subset_defn, axiom, (! [B:$i,C:$i]: ((subset('$local_world',B,C) <=> (! [D:$i]: ((member('$local_world',D,B) => member('$local_world',D,C)))))))).
tff(reflexivity_of_subset, axiom, (! [B:$i]: (subset('$local_world',B,B)))).
tff(prove_subset_difference, conjecture, (! [B:$i,C:$i,D:$i]: ((subset('$local_world',B,C) => subset('$local_world',difference(D,C),difference(D,B)))))).

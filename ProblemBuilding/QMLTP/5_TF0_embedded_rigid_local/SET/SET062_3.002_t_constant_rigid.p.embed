%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:05:41 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(t_constant_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($constant),($modalities) == ($modal_system_T),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
tff(mrel_reflexive, axiom, (! [W:'$world']: ('$accessible_world'(W,W)))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(empty_set_decl, type, empty_set: $i).
tff(member_decl, type, member: (('$world' * $i * $i) > $o)).
tff(subset_decl, type, subset: (('$world' * $i * $i) > $o)).
tff(empty_decl, type, empty: (('$world' * $i) > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(empty_set_defn, axiom, (! [B:$i]: (~ (member('$local_world',B,empty_set))))).
tff(subset_defn, axiom, (! [B:$i,C:$i]: ((subset('$local_world',B,C) <=> (! [D:$i]: ((member('$local_world',D,B) => member('$local_world',D,C)))))))).
tff(reflexivity_of_subset, axiom, (! [B:$i]: (subset('$local_world',B,B)))).
tff(empty_defn, axiom, (! [B:$i]: ((empty('$local_world',B) <=> (! [C:$i]: (~ (member('$local_world',C,B)))))))).
tff(prove_empty_set_subset, conjecture, (! [B:$i]: (subset('$local_world',empty_set,B)))).

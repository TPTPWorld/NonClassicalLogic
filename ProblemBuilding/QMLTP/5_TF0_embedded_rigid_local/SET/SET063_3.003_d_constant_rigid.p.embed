%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:05:42 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(d_constant_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($constant),($modalities) == ($modal_system_D),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
tff(mrel_serial, axiom, (! [W:'$world']: ((? [V:'$world']: ('$accessible_world'(W,V)))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(universal_class_decl, type, universal_class: $i).
tff(identity_relation_decl, type, identity_relation: $i).
tff(successor_relation_decl, type, successor_relation: $i).
tff(element_relation_decl, type, element_relation: $i).
tff(null_class_decl, type, null_class: $i).
tff(qmltpeq_decl, type, qmltpeq: (('$world' * $i * $i) > $o)).
tff(inductive_decl, type, inductive: (('$world' * $i) > $o)).
tff(disjoint_decl, type, disjoint: (('$world' * $i * $i) > $o)).
tff(function_decl, type, function: (('$world' * $i) > $o)).
tff(member_decl, type, member: (('$world' * $i * $i) > $o)).
tff(subclass_decl, type, subclass: (('$world' * $i * $i) > $o)).
tff(singleton_decl, type, singleton: ($i > $i)).
tff(image_decl, type, image: (($i * $i) > $i)).
tff(inverse_decl, type, inverse: ($i > $i)).
tff(rotate_decl, type, rotate: ($i > $i)).
tff(unordered_pair_decl, type, unordered_pair: (($i * $i) > $i)).
tff(successor_decl, type, successor: ($i > $i)).
tff(apply_decl, type, apply: (($i * $i) > $i)).
tff(power_class_decl, type, power_class: ($i > $i)).
tff(range_of_decl, type, range_of: ($i > $i)).
tff(union_decl, type, union: (($i * $i) > $i)).
tff(restrict_decl, type, restrict: (($i * $i * $i) > $i)).
tff(second_decl, type, second: ($i > $i)).
tff(ordered_pair_decl, type, ordered_pair: (($i * $i) > $i)).
tff(domain_of_decl, type, domain_of: ($i > $i)).
tff(sum_class_decl, type, sum_class: ($i > $i)).
tff(compose_decl, type, compose: (($i * $i) > $i)).
tff(intersection_decl, type, intersection: (($i * $i) > $i)).
tff(cross_product_decl, type, cross_product: (($i * $i) > $i)).
tff(complement_decl, type, complement: ($i > $i)).
tff(flip_decl, type, flip: ($i > $i)).
tff(first_decl, type, first: ($i > $i)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(reflexivity, axiom, (! [X:$i]: (qmltpeq('$local_world',X,X)))).
tff(symmetry, axiom, (! [X:$i,Y:$i]: ((qmltpeq('$local_world',X,Y) => qmltpeq('$local_world',Y,X))))).
tff(transitivity, axiom, (! [X:$i,Y:$i,Z:$i]: (((qmltpeq('$local_world',X,Y) & qmltpeq('$local_world',Y,Z)) => qmltpeq('$local_world',X,Z))))).
tff(apply_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',apply(A,C),apply(B,C)))))).
tff(apply_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',apply(C,A),apply(C,B)))))).
tff(complement_substitution_1, axiom, (! [A:$i,B:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',complement(A),complement(B)))))).
tff(compose_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',compose(A,C),compose(B,C)))))).
tff(compose_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',compose(C,A),compose(C,B)))))).
tff(cross_product_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',cross_product(A,C),cross_product(B,C)))))).
tff(cross_product_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',cross_product(C,A),cross_product(C,B)))))).
tff(domain_of_substitution_1, axiom, (! [A:$i,B:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',domain_of(A),domain_of(B)))))).
tff(first_substitution_1, axiom, (! [A:$i,B:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',first(A),first(B)))))).
tff(flip_substitution_1, axiom, (! [A:$i,B:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',flip(A),flip(B)))))).
tff(image_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',image(A,C),image(B,C)))))).
tff(image_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',image(C,A),image(C,B)))))).
tff(intersection_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',intersection(A,C),intersection(B,C)))))).
tff(intersection_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',intersection(C,A),intersection(C,B)))))).
tff(inverse_substitution_1, axiom, (! [A:$i,B:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',inverse(A),inverse(B)))))).
tff(ordered_pair_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',ordered_pair(A,C),ordered_pair(B,C)))))).
tff(ordered_pair_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',ordered_pair(C,A),ordered_pair(C,B)))))).
tff(power_class_substitution_1, axiom, (! [A:$i,B:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',power_class(A),power_class(B)))))).
tff(range_of_substitution_1, axiom, (! [A:$i,B:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',range_of(A),range_of(B)))))).
tff(restrict_substitution_1, axiom, (! [A:$i,B:$i,C:$i,D:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',restrict(A,C,D),restrict(B,C,D)))))).
tff(restrict_substitution_2, axiom, (! [A:$i,B:$i,C:$i,D:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',restrict(C,A,D),restrict(C,B,D)))))).
tff(restrict_substitution_3, axiom, (! [A:$i,B:$i,C:$i,D:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',restrict(C,D,A),restrict(C,D,B)))))).
tff(rotate_substitution_1, axiom, (! [A:$i,B:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',rotate(A),rotate(B)))))).
tff(second_substitution_1, axiom, (! [A:$i,B:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',second(A),second(B)))))).
tff(singleton_substitution_1, axiom, (! [A:$i,B:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',singleton(A),singleton(B)))))).
tff(successor_substitution_1, axiom, (! [A:$i,B:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',successor(A),successor(B)))))).
tff(sum_class_substitution_1, axiom, (! [A:$i,B:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',sum_class(A),sum_class(B)))))).
tff(union_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',union(A,C),union(B,C)))))).
tff(union_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',union(C,A),union(C,B)))))).
tff(unordered_pair_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',unordered_pair(A,C),unordered_pair(B,C)))))).
tff(unordered_pair_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',unordered_pair(C,A),unordered_pair(C,B)))))).
tff(disjoint_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: (((qmltpeq('$local_world',A,B) & disjoint('$local_world',A,C)) => disjoint('$local_world',B,C))))).
tff(disjoint_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: (((qmltpeq('$local_world',A,B) & disjoint('$local_world',C,A)) => disjoint('$local_world',C,B))))).
tff(function_substitution_1, axiom, (! [A:$i,B:$i]: (((qmltpeq('$local_world',A,B) & function('$local_world',A)) => function('$local_world',B))))).
tff(inductive_substitution_1, axiom, (! [A:$i,B:$i]: (((qmltpeq('$local_world',A,B) & inductive('$local_world',A)) => inductive('$local_world',B))))).
tff(member_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: (((qmltpeq('$local_world',A,B) & member('$local_world',A,C)) => member('$local_world',B,C))))).
tff(member_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: (((qmltpeq('$local_world',A,B) & member('$local_world',C,A)) => member('$local_world',C,B))))).
tff(subclass_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: (((qmltpeq('$local_world',A,B) & subclass('$local_world',A,C)) => subclass('$local_world',B,C))))).
tff(subclass_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: (((qmltpeq('$local_world',A,B) & subclass('$local_world',C,A)) => subclass('$local_world',C,B))))).
tff(subclass_defn, axiom, (! [X:$i,Y:$i]: ((subclass('$local_world',X,Y) <=> (! [U:$i]: ((member('$local_world',U,X) => member('$local_world',U,Y)))))))).
tff(class_elements_are_sets, axiom, (! [X:$i]: (subclass('$local_world',X,universal_class)))).
tff(extensionality, axiom, (! [X:$i,Y:$i]: ((qmltpeq('$local_world',X,Y) <=> (subclass('$local_world',X,Y) & subclass('$local_world',Y,X)))))).
tff(unordered_pair_defn, axiom, (! [U:$i,X:$i,Y:$i]: ((member('$local_world',U,unordered_pair(X,Y)) <=> (member('$local_world',U,universal_class) & (qmltpeq('$local_world',U,X) | qmltpeq('$local_world',U,Y))))))).
tff(unordered_pair_0, axiom, (! [X:$i,Y:$i]: (member('$local_world',unordered_pair(X,Y),universal_class)))).
tff(singleton_set_defn, axiom, (! [X:$i]: (qmltpeq('$local_world',singleton(X),unordered_pair(X,X))))).
tff(ordered_pair_defn, axiom, (! [X:$i,Y:$i]: (qmltpeq('$local_world',ordered_pair(X,Y),unordered_pair(singleton(X),unordered_pair(X,singleton(Y))))))).
tff(cross_product_defn, axiom, (! [U:$i,V:$i,X:$i,Y:$i]: ((member('$local_world',ordered_pair(U,V),cross_product(X,Y)) <=> (member('$local_world',U,X) & member('$local_world',V,Y)))))).
tff(cross_product_0, axiom, (! [X:$i,Y:$i,Z:$i]: ((member('$local_world',Z,cross_product(X,Y)) => qmltpeq('$local_world',Z,ordered_pair(first(Z),second(Z))))))).
tff(element_relation_defn, axiom, (! [X:$i,Y:$i]: ((member('$local_world',ordered_pair(X,Y),element_relation) <=> (member('$local_world',Y,universal_class) & member('$local_world',X,Y)))))).
tff(element_relation_0, axiom, subclass('$local_world',element_relation,cross_product(universal_class,universal_class))).
tff(intersection_0, axiom, (! [X:$i,Y:$i,Z:$i]: ((member('$local_world',Z,intersection(X,Y)) <=> (member('$local_world',Z,X) & member('$local_world',Z,Y)))))).
tff(complement_0, axiom, (! [X:$i,Z:$i]: ((member('$local_world',Z,complement(X)) <=> (member('$local_world',Z,universal_class) & ~ (member('$local_world',Z,X))))))).
tff(restrict_defn, axiom, (! [X:$i,XR:$i,Y:$i]: (qmltpeq('$local_world',restrict(XR,X,Y),intersection(XR,cross_product(X,Y)))))).
tff(null_class_defn, axiom, (! [X:$i]: (~ (member('$local_world',X,null_class))))).
tff(domain_of_0, axiom, (! [X:$i,Z:$i]: ((member('$local_world',Z,domain_of(X)) <=> (member('$local_world',Z,universal_class) & ~ (qmltpeq('$local_world',restrict(X,singleton(Z),universal_class),null_class))))))).
tff(rotate_defn, axiom, (! [X:$i,U:$i,V:$i,W:$i]: ((member('$local_world',ordered_pair(ordered_pair(U,V),W),rotate(X)) <=> (member('$local_world',ordered_pair(ordered_pair(U,V),W),cross_product(cross_product(universal_class,universal_class),universal_class)) & member('$local_world',ordered_pair(ordered_pair(V,W),U),X)))))).
tff(rotate_0, axiom, (! [X:$i]: (subclass('$local_world',rotate(X),cross_product(cross_product(universal_class,universal_class),universal_class))))).
tff(flip_defn, axiom, (! [U:$i,V:$i,W:$i,X:$i]: ((member('$local_world',ordered_pair(ordered_pair(U,V),W),flip(X)) <=> (member('$local_world',ordered_pair(ordered_pair(U,V),W),cross_product(cross_product(universal_class,universal_class),universal_class)) & member('$local_world',ordered_pair(ordered_pair(V,U),W),X)))))).
tff(flip_0, axiom, (! [X:$i]: (subclass('$local_world',flip(X),cross_product(cross_product(universal_class,universal_class),universal_class))))).
tff(union_defn, axiom, (! [X:$i,Y:$i,Z:$i]: ((member('$local_world',Z,union(X,Y)) <=> (member('$local_world',Z,X) | member('$local_world',Z,Y)))))).
tff(successor_defn, axiom, (! [X:$i]: (qmltpeq('$local_world',successor(X),union(X,singleton(X)))))).
tff(successor_relation_defn1, axiom, subclass('$local_world',successor_relation,cross_product(universal_class,universal_class))).
tff(successor_relation_defn2, axiom, (! [X:$i,Y:$i]: ((member('$local_world',ordered_pair(X,Y),successor_relation) <=> (member('$local_world',X,universal_class) & (member('$local_world',Y,universal_class) & qmltpeq('$local_world',successor(X),Y))))))).
tff(inverse_defn, axiom, (! [Y:$i]: (qmltpeq('$local_world',inverse(Y),domain_of(flip(cross_product(Y,universal_class))))))).
tff(range_of_defn, axiom, (! [Z:$i]: (qmltpeq('$local_world',range_of(Z),domain_of(inverse(Z)))))).
tff(image_defn, axiom, (! [X:$i,XR:$i]: (qmltpeq('$local_world',image(XR,X),range_of(restrict(XR,X,universal_class)))))).
tff(inductive_defn, axiom, (! [X:$i]: ((inductive('$local_world',X) <=> (member('$local_world',null_class,X) & subclass('$local_world',image(successor_relation,X),X)))))).
tff(infinity, axiom, (? [X:$i]: ((member('$local_world',X,universal_class) & (inductive('$local_world',X) & (! [Y:$i]: ((inductive('$local_world',Y) => subclass('$local_world',X,Y))))))))).
tff(sum_class_defn, axiom, (! [U:$i,X:$i]: ((member('$local_world',U,sum_class(X)) <=> (? [Y:$i]: ((member('$local_world',U,Y) & member('$local_world',Y,X)))))))).
tff(sum_class_0, axiom, (! [X:$i]: ((member('$local_world',X,universal_class) => member('$local_world',sum_class(X),universal_class))))).
tff(power_class_defn, axiom, (! [U:$i,X:$i]: ((member('$local_world',U,power_class(X)) <=> (member('$local_world',U,universal_class) & subclass('$local_world',U,X)))))).
tff(power_class_0, axiom, (! [U:$i]: ((member('$local_world',U,universal_class) => member('$local_world',power_class(U),universal_class))))).
tff(compose_defn1, axiom, (! [XR:$i,YR:$i]: (subclass('$local_world',compose(YR,XR),cross_product(universal_class,universal_class))))).
tff(compose_defn2, axiom, (! [XR:$i,YR:$i,U:$i,V:$i]: ((member('$local_world',ordered_pair(U,V),compose(YR,XR)) <=> (member('$local_world',U,universal_class) & member('$local_world',V,image(YR,image(YR,singleton(U))))))))).
tff(function_defn, axiom, (! [XF:$i]: ((function('$local_world',XF) <=> (subclass('$local_world',XF,cross_product(universal_class,universal_class)) & subclass('$local_world',compose(XF,inverse(XF)),identity_relation)))))).
tff(replacement, axiom, (! [X:$i,XF:$i]: (((member('$local_world',X,universal_class) & function('$local_world',XF)) => member('$local_world',image(XF,X),universal_class))))).
tff(disjoint_defn, axiom, (! [X:$i,Y:$i]: ((disjoint('$local_world',X,Y) <=> (! [U:$i]: (~ ((member('$local_world',U,X) & member('$local_world',U,Y))))))))).
tff(regularity, axiom, (! [X:$i]: ((~ (qmltpeq('$local_world',X,null_class)) => (? [U:$i]: ((member('$local_world',U,universal_class) & (member('$local_world',U,X) & disjoint('$local_world',U,X))))))))).
tff(apply_defn, axiom, (! [XF:$i,Y:$i]: (qmltpeq('$local_world',apply(XF,Y),sum_class(image(XF,singleton(Y))))))).
tff(choice, axiom, (? [XF:$i]: ((function('$local_world',XF) & (! [Y:$i]: ((member('$local_world',Y,universal_class) => (qmltpeq('$local_world',Y,null_class) | member('$local_world',apply(XF,Y),Y))))))))).
tff(corollary_of_null_class_is_subclass, conjecture, (! [X:$i]: ((subclass('$local_world',X,null_class) => qmltpeq('$local_world',X,null_class))))).

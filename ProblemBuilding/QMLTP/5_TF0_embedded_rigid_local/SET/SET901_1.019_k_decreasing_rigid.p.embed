%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:05:44 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(k_decreasing_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($decreasing),($modalities) == ($modal_system_K),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(empty_set_decl, type, empty_set: $i).
tff(qmltpeq_decl, type, qmltpeq: (('$world' * $i * $i) > $o)).
tff(subset_decl, type, subset: (('$world' * $i * $i) > $o)).
tff(empty_decl, type, empty: (('$world' * $i) > $o)).
tff(singleton_decl, type, singleton: ($i > $i)).
tff(unordered_pair_decl, type, unordered_pair: (($i * $i) > $i)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Additional meta-logical definitions %%%%%%%%
tff('$exists_in_world_$i_decl', type, '$exists_in_world_$i': (('$world' * $i) > $o)).
tff('$exists_in_world_$i_decr', axiom, (! [W:'$world',V:'$world',X:$i]: ((('$exists_in_world_$i'(W,X) & '$accessible_world'(V,W)) => '$exists_in_world_$i'(V,X))))).
tff('$exists_in_world_$i_nonempty', axiom, (! [W:'$world']: ((? [X:$i]: ('$exists_in_world_$i'(W,X)))))).
tff('$exists_in_world_empty_set_mono', axiom, (! [W:'$world']: ('$exists_in_world_$i'(W,empty_set)))).
tff('$exists_in_world_singleton_mono', axiom, (! [W:'$world',X0:$i]: (('$exists_in_world_$i'(W,X0) => '$exists_in_world_$i'(W,singleton(X0)))))).
tff('$exists_in_world_unordered_pair_mono', axiom, (! [W:'$world',X0:$i,X1:$i]: (('$exists_in_world_$i'(W,X0) => ('$exists_in_world_$i'(W,X1) => '$exists_in_world_$i'(W,unordered_pair(X0,X1))))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(reflexivity, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => qmltpeq('$local_world',X,X))))).
tff(symmetry, axiom, (! [X:$i,Y:$i]: ((('$exists_in_world_$i'('$local_world',X) & '$exists_in_world_$i'('$local_world',Y)) => (qmltpeq('$local_world',X,Y) => qmltpeq('$local_world',Y,X)))))).
tff(transitivity, axiom, (! [X:$i,Y:$i,Z:$i]: (((('$exists_in_world_$i'('$local_world',X) & '$exists_in_world_$i'('$local_world',Y)) & '$exists_in_world_$i'('$local_world',Z)) => ((qmltpeq('$local_world',X,Y) & qmltpeq('$local_world',Y,Z)) => qmltpeq('$local_world',X,Z)))))).
tff(singleton_substitution_1, axiom, (! [A:$i,B:$i]: ((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) => (qmltpeq('$local_world',A,B) => qmltpeq('$local_world',singleton(A),singleton(B))))))).
tff(unordered_pair_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: (((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) & '$exists_in_world_$i'('$local_world',C)) => (qmltpeq('$local_world',A,B) => qmltpeq('$local_world',unordered_pair(A,C),unordered_pair(B,C))))))).
tff(unordered_pair_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: (((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) & '$exists_in_world_$i'('$local_world',C)) => (qmltpeq('$local_world',A,B) => qmltpeq('$local_world',unordered_pair(C,A),unordered_pair(C,B))))))).
tff(empty_substitution_1, axiom, (! [A:$i,B:$i]: ((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) => ((qmltpeq('$local_world',A,B) & empty('$local_world',A)) => empty('$local_world',B)))))).
tff(subset_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: (((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) & '$exists_in_world_$i'('$local_world',C)) => ((qmltpeq('$local_world',A,B) & subset('$local_world',A,C)) => subset('$local_world',B,C)))))).
tff(subset_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: (((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) & '$exists_in_world_$i'('$local_world',C)) => ((qmltpeq('$local_world',A,B) & subset('$local_world',C,A)) => subset('$local_world',C,B)))))).
tff(commutativity_k2_tarski, axiom, (! [A:$i,B:$i]: ((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) => qmltpeq('$local_world',unordered_pair(A,B),unordered_pair(B,A)))))).
tff(reflexivity_r1_tarski, axiom, (! [A:$i,B:$i]: ((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) => subset('$local_world',A,A))))).
tff(fc1_xboole_0, axiom, empty('$local_world',empty_set)).
tff(rc1_xboole_0, axiom, (? [A:$i]: (('$exists_in_world_$i'('$local_world',A) & empty('$local_world',A))))).
tff(rc2_xboole_0, axiom, (? [A:$i]: (('$exists_in_world_$i'('$local_world',A) & ~ (empty('$local_world',A)))))).
tff(l46_zfmisc_1, axiom, (! [A:$i,B:$i,C:$i]: (((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) & '$exists_in_world_$i'('$local_world',C)) => (subset('$local_world',A,unordered_pair(B,C)) <=> ~ ((~ (qmltpeq('$local_world',A,empty_set)) & (~ (qmltpeq('$local_world',A,singleton(B))) & (~ (qmltpeq('$local_world',A,singleton(C))) & ~ (qmltpeq('$local_world',A,unordered_pair(B,C)))))))))))).
tff(t42_zfmisc_1, conjecture, (! [A:$i,B:$i,C:$i]: (((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) & '$exists_in_world_$i'('$local_world',C)) => (subset('$local_world',A,unordered_pair(B,C)) <=> ~ ((~ (qmltpeq('$local_world',A,empty_set)) & (~ (qmltpeq('$local_world',A,singleton(B))) & (~ (qmltpeq('$local_world',A,singleton(C))) & ~ (qmltpeq('$local_world',A,unordered_pair(B,C)))))))))))).

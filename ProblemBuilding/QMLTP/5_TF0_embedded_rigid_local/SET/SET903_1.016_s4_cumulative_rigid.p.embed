%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:05:44 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(s4_cumulative_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($cumulative),($modalities) == ($modal_system_S4),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
tff(mrel_reflexive, axiom, (! [W:'$world']: ('$accessible_world'(W,W)))).
tff(mrel_transitive, axiom, (! [W:'$world',V:'$world',U:'$world']: ((('$accessible_world'(W,V) & '$accessible_world'(V,U)) => '$accessible_world'(W,U))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(empty_set_decl, type, empty_set: $i).
tff(qmltpeq_decl, type, qmltpeq: (('$world' * $i * $i) > $o)).
tff(empty_decl, type, empty: (('$world' * $i) > $o)).
tff(singleton_decl, type, singleton: ($i > $i)).
tff(set_union2_decl, type, set_union2: (($i * $i) > $i)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Additional meta-logical definitions %%%%%%%%
tff('$exists_in_world_$i_decl', type, '$exists_in_world_$i': (('$world' * $i) > $o)).
tff('$exists_in_world_$i_cumul', axiom, (! [W:'$world',V:'$world',X:$i]: ((('$exists_in_world_$i'(W,X) & '$accessible_world'(W,V)) => '$exists_in_world_$i'(V,X))))).
tff('$exists_in_world_$i_nonempty', axiom, (! [W:'$world']: ((? [X:$i]: ('$exists_in_world_$i'(W,X)))))).
tff('$exists_in_world_empty_set_mono', axiom, (! [W:'$world']: ('$exists_in_world_$i'(W,empty_set)))).
tff('$exists_in_world_singleton_mono', axiom, (! [W:'$world',X0:$i]: (('$exists_in_world_$i'(W,X0) => '$exists_in_world_$i'(W,singleton(X0)))))).
tff('$exists_in_world_set_union2_mono', axiom, (! [W:'$world',X0:$i,X1:$i]: (('$exists_in_world_$i'(W,X0) => ('$exists_in_world_$i'(W,X1) => '$exists_in_world_$i'(W,set_union2(X0,X1))))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(reflexivity, axiom, (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => qmltpeq('$local_world',X,X))))).
tff(symmetry, axiom, (! [X:$i,Y:$i]: ((('$exists_in_world_$i'('$local_world',X) & '$exists_in_world_$i'('$local_world',Y)) => (qmltpeq('$local_world',X,Y) => qmltpeq('$local_world',Y,X)))))).
tff(transitivity, axiom, (! [X:$i,Y:$i,Z:$i]: (((('$exists_in_world_$i'('$local_world',X) & '$exists_in_world_$i'('$local_world',Y)) & '$exists_in_world_$i'('$local_world',Z)) => ((qmltpeq('$local_world',X,Y) & qmltpeq('$local_world',Y,Z)) => qmltpeq('$local_world',X,Z)))))).
tff(set_union2_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: (((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) & '$exists_in_world_$i'('$local_world',C)) => (qmltpeq('$local_world',A,B) => qmltpeq('$local_world',set_union2(A,C),set_union2(B,C))))))).
tff(set_union2_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: (((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) & '$exists_in_world_$i'('$local_world',C)) => (qmltpeq('$local_world',A,B) => qmltpeq('$local_world',set_union2(C,A),set_union2(C,B))))))).
tff(singleton_substitution_1, axiom, (! [A:$i,B:$i]: ((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) => (qmltpeq('$local_world',A,B) => qmltpeq('$local_world',singleton(A),singleton(B))))))).
tff(empty_substitution_1, axiom, (! [A:$i,B:$i]: ((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) => ((qmltpeq('$local_world',A,B) & empty('$local_world',A)) => empty('$local_world',B)))))).
tff(commutativity_k2_xboole_0, axiom, (! [A:$i,B:$i]: ((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) => qmltpeq('$local_world',set_union2(A,B),set_union2(B,A)))))).
tff(fc1_xboole_0, axiom, empty('$local_world',empty_set)).
tff(fc2_xboole_0, axiom, (! [A:$i,B:$i]: ((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) => (~ (empty('$local_world',A)) => ~ (empty('$local_world',set_union2(A,B)))))))).
tff(fc3_xboole_0, axiom, (! [A:$i,B:$i]: ((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) => (~ (empty('$local_world',A)) => ~ (empty('$local_world',set_union2(B,A)))))))).
tff(idempotence_k2_xboole_0, axiom, (! [A:$i,B:$i]: ((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) => qmltpeq('$local_world',set_union2(A,A),A))))).
tff(rc1_xboole_0, axiom, (? [A:$i]: (('$exists_in_world_$i'('$local_world',A) & empty('$local_world',A))))).
tff(rc2_xboole_0, axiom, (? [A:$i]: (('$exists_in_world_$i'('$local_world',A) & ~ (empty('$local_world',A)))))).
tff(t43_zfmisc_1, axiom, (! [A:$i,B:$i,C:$i]: (((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) & '$exists_in_world_$i'('$local_world',C)) => ~ ((qmltpeq('$local_world',singleton(A),set_union2(B,C)) & (~ ((qmltpeq('$local_world',B,singleton(A)) & qmltpeq('$local_world',C,singleton(A)))) & (~ ((qmltpeq('$local_world',B,empty_set) & qmltpeq('$local_world',C,singleton(A)))) & ~ ((qmltpeq('$local_world',B,singleton(A)) & qmltpeq('$local_world',C,empty_set))))))))))).
tff(t44_zfmisc_1, conjecture, (! [A:$i,B:$i,C:$i]: (((('$exists_in_world_$i'('$local_world',A) & '$exists_in_world_$i'('$local_world',B)) & '$exists_in_world_$i'('$local_world',C)) => ~ ((qmltpeq('$local_world',singleton(A),set_union2(B,C)) & (~ (qmltpeq('$local_world',B,C)) & (~ (qmltpeq('$local_world',B,empty_set)) & ~ (qmltpeq('$local_world',C,empty_set)))))))))).

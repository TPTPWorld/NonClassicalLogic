%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:05:45 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(k_constant_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($constant),($modalities) == ($modal_system_K),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(empty_set_decl, type, empty_set: $i).
tff(qmltpeq_decl, type, qmltpeq: (('$world' * $i * $i) > $o)).
tff(in_decl, type, in: (('$world' * $i * $i) > $o)).
tff(empty_decl, type, empty: (('$world' * $i) > $o)).
tff(unordered_pair_decl, type, unordered_pair: (($i * $i) > $i)).
tff(set_union2_decl, type, set_union2: (($i * $i) > $i)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
tff(reflexivity, axiom, (! [X:$i]: (qmltpeq('$local_world',X,X)))).
tff(symmetry, axiom, (! [X:$i,Y:$i]: ((qmltpeq('$local_world',X,Y) => qmltpeq('$local_world',Y,X))))).
tff(transitivity, axiom, (! [X:$i,Y:$i,Z:$i]: (((qmltpeq('$local_world',X,Y) & qmltpeq('$local_world',Y,Z)) => qmltpeq('$local_world',X,Z))))).
tff(set_union2_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',set_union2(A,C),set_union2(B,C)))))).
tff(set_union2_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',set_union2(C,A),set_union2(C,B)))))).
tff(unordered_pair_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',unordered_pair(A,C),unordered_pair(B,C)))))).
tff(unordered_pair_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',A,B) => qmltpeq('$local_world',unordered_pair(C,A),unordered_pair(C,B)))))).
tff(empty_substitution_1, axiom, (! [A:$i,B:$i]: (((qmltpeq('$local_world',A,B) & empty('$local_world',A)) => empty('$local_world',B))))).
tff(in_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: (((qmltpeq('$local_world',A,B) & in('$local_world',A,C)) => in('$local_world',B,C))))).
tff(in_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: (((qmltpeq('$local_world',A,B) & in('$local_world',C,A)) => in('$local_world',C,B))))).
tff(antisymmetry_r2_hidden, axiom, (! [A:$i,B:$i]: ((in('$local_world',A,B) => ~ (in('$local_world',B,A)))))).
tff(commutativity_k2_tarski, axiom, (! [A:$i,B:$i]: (qmltpeq('$local_world',unordered_pair(A,B),unordered_pair(B,A))))).
tff(commutativity_k2_xboole_0, axiom, (! [A:$i,B:$i]: (qmltpeq('$local_world',set_union2(A,B),set_union2(B,A))))).
tff(d1_xboole_0, axiom, (! [A:$i]: ((qmltpeq('$local_world',A,empty_set) <=> (! [B:$i]: (~ (in('$local_world',B,A)))))))).
tff(d2_tarski, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',C,unordered_pair(A,B)) <=> (! [D:$i]: ((in('$local_world',D,C) <=> (qmltpeq('$local_world',D,A) | qmltpeq('$local_world',D,B))))))))).
tff(d2_xboole_0, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq('$local_world',C,set_union2(A,B)) <=> (! [D:$i]: ((in('$local_world',D,C) <=> (in('$local_world',D,A) | in('$local_world',D,B))))))))).
tff(fc1_xboole_0, axiom, empty('$local_world',empty_set)).
tff(fc2_xboole_0, axiom, (! [A:$i,B:$i]: ((~ (empty('$local_world',A)) => ~ (empty('$local_world',set_union2(A,B))))))).
tff(fc3_xboole_0, axiom, (! [A:$i,B:$i]: ((~ (empty('$local_world',A)) => ~ (empty('$local_world',set_union2(B,A))))))).
tff(idempotence_k2_xboole_0, axiom, (! [A:$i,B:$i]: (qmltpeq('$local_world',set_union2(A,A),A)))).
tff(rc1_xboole_0, axiom, (? [A:$i]: (empty('$local_world',A)))).
tff(rc2_xboole_0, axiom, (? [A:$i]: (~ (empty('$local_world',A))))).
tff(t50_zfmisc_1, conjecture, (! [A:$i,B:$i,C:$i]: (~ (qmltpeq('$local_world',set_union2(unordered_pair(A,B),C),empty_set))))).

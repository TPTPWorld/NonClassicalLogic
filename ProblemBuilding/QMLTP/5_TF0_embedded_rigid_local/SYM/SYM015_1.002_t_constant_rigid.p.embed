%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:05:50 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(t_constant_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($constant),($modalities) == ($modal_system_T),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
tff(mrel_reflexive, axiom, (! [W:'$world']: ('$accessible_world'(W,W)))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(a_decl, type, a: $i).
tff(f_decl, type, f: (('$world' * $i) > $o)).
tff(con, conjecture, ((! [X:$i]: (((! [W:'$world']: (('$accessible_world'('$local_world',W) => f(W,X)))) | (! [W:'$world']: (('$accessible_world'('$local_world',W) => ~ (f(W,X)))))))) => (! [W:'$world']: (('$accessible_world'('$local_world',W) => ((! [W0:'$world']: (('$accessible_world'(W,W0) => f(W0,a)))) <=> f(W,a))))))).

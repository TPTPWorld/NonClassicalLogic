%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:05:51 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(k_cumulative_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($cumulative),($modalities) == ($modal_system_K),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(f_decl, type, f: (('$world' * $i) > $o)).
tff(g_decl, type, g: (('$world' * $i) > $o)).
tff(h_decl, type, h: (('$world' * $i) > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Additional meta-logical definitions %%%%%%%%
tff('$exists_in_world_$i_decl', type, '$exists_in_world_$i': (('$world' * $i) > $o)).
tff('$exists_in_world_$i_cumul', axiom, (! [W:'$world',V:'$world',X:$i]: ((('$exists_in_world_$i'(W,X) & '$accessible_world'(W,V)) => '$exists_in_world_$i'(V,X))))).
tff('$exists_in_world_$i_nonempty', axiom, (! [W:'$world']: ((? [X:$i]: ('$exists_in_world_$i'(W,X)))))).
tff(con, conjecture, (((! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => (f('$local_world',X) => (! [W:'$world']: (('$accessible_world'('$local_world',W) => g(W,X)))))))) & (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => (g('$local_world',X) => (! [W:'$world']: (('$accessible_world'('$local_world',W) => h(W,X))))))))) => (! [X:$i]: (('$exists_in_world_$i'('$local_world',X) => (f('$local_world',X) => (! [W:'$world']: (('$accessible_world'('$local_world',W) => h(W,X)))))))))).

%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:05:53 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(d_varying_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($varying),($modalities) == ($modal_system_D),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
tff(mrel_serial, axiom, (! [W:'$world']: ((? [V:'$world']: ('$accessible_world'(W,V)))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(a_decl, type, a: ('$world' > $o)).
tff(b_decl, type, b: ('$world' > $o)).
tff(f_decl, type, f: (('$world' * $i) > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Additional meta-logical definitions %%%%%%%%
tff('$exists_in_world_$i_decl', type, '$exists_in_world_$i': (('$world' * $i) > $o)).
tff('$exists_in_world_$i_nonempty', axiom, (! [W:'$world']: ((? [X:$i]: ('$exists_in_world_$i'(W,X)))))).
tff(con, conjecture, (((? [W:'$world']: (('$accessible_world'('$local_world',W) & (! [X:$i]: (('$exists_in_world_$i'(W,X) => (f(W,X) => (! [W0:'$world']: (('$accessible_world'(W,W0) => (a(W0) => ~ (f(W0,X))))))))))))) & (! [W:'$world']: (('$accessible_world'('$local_world',W) => (? [X:$i]: (('$exists_in_world_$i'(W,X) & (f(W,X) & (! [W0:'$world']: (('$accessible_world'(W,W0) => (b(W0) => f(W0,X))))))))))))) => ~ ((? [W:'$world']: (('$accessible_world'('$local_world',W) & (a(W) & b(W)))))))).

%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:05:54 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(s5_constant_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($constant),($modalities) == ($modal_system_S5),($terms) == ($local)])).
%%% Transformation parameters: SILENT

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
tff('$world_type', type, '$world': $tType).
tff('$local_world_decl', type, '$local_world': '$world').
tff('$accessible_world_decl', type, '$accessible_world': (('$world' * '$world') > $o)).
tff(mrel_universal, axiom, (! [W:'$world',V:'$world']: ('$accessible_world'(W,V)))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
tff(e_decl, type, e: (('$world' * $i) > $o)).
tff(m_decl, type, m: (('$world' * $i) > $o)).
tff(con, conjecture, ~ (((! [X:$i]: ((m('$local_world',X) => (! [W:'$world']: (('$accessible_world'('$local_world',W) => (e(W,X) => m(W,X)))))))) => (! [X:$i]: ((! [W:'$world']: (('$accessible_world'('$local_world',W) => (e(W,X) => m(W,X)))))))))).

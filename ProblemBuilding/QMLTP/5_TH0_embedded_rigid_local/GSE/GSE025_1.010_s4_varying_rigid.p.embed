%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:08:02 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(s4_varying_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($varying),($modalities) == ($modal_system_S4),($terms) == ($local)])).
%%% Transformation parameters: FORCE_HIGHERORDER

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
thf(mworld_type, type, mworld: $tType).
thf(mrel_decl, type, mrel: (mworld > (mworld > $o))).
thf(mbox_decl, type, mbox: ((mworld > $o) > (mworld > $o))).
thf(mbox_def, definition, (mbox = (^ [Phi:(mworld > $o),W:mworld]: ((! [V:mworld]: ((((mrel @ W) @ V) => (Phi @ V)))))))).
thf(mdia_decl, type, mdia: ((mworld > $o) > (mworld > $o))).
thf(mdia_def, definition, (mdia = (^ [Phi:(mworld > $o),W:mworld]: ((? [V:mworld]: ((((mrel @ W) @ V) & (Phi @ V)))))))).
thf(mrel_reflexive, axiom, (! [W:mworld]: (((mrel @ W) @ W)))).
thf(mrel_transitive, axiom, (! [W:mworld,V:mworld,U:mworld]: (((((mrel @ W) @ V) & ((mrel @ V) @ U)) => ((mrel @ W) @ U))))).
thf(mactual_decl, type, mactual: mworld).
thf(mlocal_decl, type, mlocal: ((mworld > $o) > $o)).
thf(mlocal_def, definition, (mlocal = (^ [Phi:(mworld > $o)]: ((Phi @ mactual))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
thf(universal_class_decl, type, universal_class: $i).
thf(identity_relation_decl, type, identity_relation: $i).
thf(successor_relation_decl, type, successor_relation: $i).
thf(element_relation_decl, type, element_relation: $i).
thf(null_class_decl, type, null_class: $i).
thf(qmltpeq_decl, type, qmltpeq: (mworld > ($i > ($i > $o)))).
thf(inductive_decl, type, inductive: (mworld > ($i > $o))).
thf(disjoint_decl, type, disjoint: (mworld > ($i > ($i > $o)))).
thf(function_decl, type, function: (mworld > ($i > $o))).
thf(member_decl, type, member: (mworld > ($i > ($i > $o)))).
thf(subclass_decl, type, subclass: (mworld > ($i > ($i > $o)))).
thf(singleton_decl, type, singleton: ($i > $i)).
thf(image_decl, type, image: ($i > ($i > $i))).
thf(inverse_decl, type, inverse: ($i > $i)).
thf(rotate_decl, type, rotate: ($i > $i)).
thf(unordered_pair_decl, type, unordered_pair: ($i > ($i > $i))).
thf(successor_decl, type, successor: ($i > $i)).
thf(apply_decl, type, apply: ($i > ($i > $i))).
thf(power_class_decl, type, power_class: ($i > $i)).
thf(range_of_decl, type, range_of: ($i > $i)).
thf(union_decl, type, union: ($i > ($i > $i))).
thf(restrict_decl, type, restrict: ($i > ($i > ($i > $i)))).
thf(second_decl, type, second: ($i > $i)).
thf(ordered_pair_decl, type, ordered_pair: ($i > ($i > $i))).
thf(domain_of_decl, type, domain_of: ($i > $i)).
thf(sum_class_decl, type, sum_class: ($i > $i)).
thf(compose_decl, type, compose: ($i > ($i > $i))).
thf(intersection_decl, type, intersection: ($i > ($i > $i))).
thf(cross_product_decl, type, cross_product: ($i > ($i > $i))).
thf(complement_decl, type, complement: ($i > $i)).
thf(flip_decl, type, flip: ($i > $i)).
thf(first_decl, type, first: ($i > $i)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Additional meta-logical definitions %%%%%%%%
thf(eiw_di_decl, type, eiw_di: ($i > (mworld > $o))).
thf(eiw_di_nonempty, axiom, (! [W:mworld]: ((? [X:$i]: (((eiw_di @ X) @ W)))))).
thf(eiw_intersection_mono, axiom, (! [W:mworld,X0:$i,X1:$i]: ((((eiw_di @ X0) @ W) => (((eiw_di @ X1) @ W) => ((eiw_di @ ((intersection @ X0) @ X1)) @ W)))))).
thf(eiw_complement_mono, axiom, (! [W:mworld,X0:$i]: ((((eiw_di @ X0) @ W) => ((eiw_di @ (complement @ X0)) @ W))))).
thf(eiw_cross_product_mono, axiom, (! [W:mworld,X0:$i,X1:$i]: ((((eiw_di @ X0) @ W) => (((eiw_di @ X1) @ W) => ((eiw_di @ ((cross_product @ X0) @ X1)) @ W)))))).
thf(eiw_first_mono, axiom, (! [W:mworld,X0:$i]: ((((eiw_di @ X0) @ W) => ((eiw_di @ (first @ X0)) @ W))))).
thf(eiw_compose_mono, axiom, (! [W:mworld,X0:$i,X1:$i]: ((((eiw_di @ X0) @ W) => (((eiw_di @ X1) @ W) => ((eiw_di @ ((compose @ X0) @ X1)) @ W)))))).
thf(eiw_ordered_pair_mono, axiom, (! [W:mworld,X0:$i,X1:$i]: ((((eiw_di @ X0) @ W) => (((eiw_di @ X1) @ W) => ((eiw_di @ ((ordered_pair @ X0) @ X1)) @ W)))))).
thf(eiw_second_mono, axiom, (! [W:mworld,X0:$i]: ((((eiw_di @ X0) @ W) => ((eiw_di @ (second @ X0)) @ W))))).
thf(eiw_power_class_mono, axiom, (! [W:mworld,X0:$i]: ((((eiw_di @ X0) @ W) => ((eiw_di @ (power_class @ X0)) @ W))))).
thf(eiw_restrict_mono, axiom, (! [W:mworld,X0:$i,X1:$i,X2:$i]: ((((eiw_di @ X0) @ W) => (((eiw_di @ X1) @ W) => (((eiw_di @ X2) @ W) => ((eiw_di @ (((restrict @ X0) @ X1) @ X2)) @ W))))))).
thf(eiw_universal_class_mono, axiom, (! [W:mworld]: (((eiw_di @ universal_class) @ W)))).
thf(eiw_sum_class_mono, axiom, (! [W:mworld,X0:$i]: ((((eiw_di @ X0) @ W) => ((eiw_di @ (sum_class @ X0)) @ W))))).
thf(eiw_identity_relation_mono, axiom, (! [W:mworld]: (((eiw_di @ identity_relation) @ W)))).
thf(eiw_successor_relation_mono, axiom, (! [W:mworld]: (((eiw_di @ successor_relation) @ W)))).
thf(eiw_range_of_mono, axiom, (! [W:mworld,X0:$i]: ((((eiw_di @ X0) @ W) => ((eiw_di @ (range_of @ X0)) @ W))))).
thf(eiw_element_relation_mono, axiom, (! [W:mworld]: (((eiw_di @ element_relation) @ W)))).
thf(eiw_union_mono, axiom, (! [W:mworld,X0:$i,X1:$i]: ((((eiw_di @ X0) @ W) => (((eiw_di @ X1) @ W) => ((eiw_di @ ((union @ X0) @ X1)) @ W)))))).
thf(eiw_image_mono, axiom, (! [W:mworld,X0:$i,X1:$i]: ((((eiw_di @ X0) @ W) => (((eiw_di @ X1) @ W) => ((eiw_di @ ((image @ X0) @ X1)) @ W)))))).
thf(eiw_domain_of_mono, axiom, (! [W:mworld,X0:$i]: ((((eiw_di @ X0) @ W) => ((eiw_di @ (domain_of @ X0)) @ W))))).
thf(eiw_rotate_mono, axiom, (! [W:mworld,X0:$i]: ((((eiw_di @ X0) @ W) => ((eiw_di @ (rotate @ X0)) @ W))))).
thf(eiw_null_class_mono, axiom, (! [W:mworld]: (((eiw_di @ null_class) @ W)))).
thf(eiw_apply_mono, axiom, (! [W:mworld,X0:$i,X1:$i]: ((((eiw_di @ X0) @ W) => (((eiw_di @ X1) @ W) => ((eiw_di @ ((apply @ X0) @ X1)) @ W)))))).
thf(eiw_successor_mono, axiom, (! [W:mworld,X0:$i]: ((((eiw_di @ X0) @ W) => ((eiw_di @ (successor @ X0)) @ W))))).
thf(eiw_unordered_pair_mono, axiom, (! [W:mworld,X0:$i,X1:$i]: ((((eiw_di @ X0) @ W) => (((eiw_di @ X1) @ W) => ((eiw_di @ ((unordered_pair @ X0) @ X1)) @ W)))))).
thf(eiw_inverse_mono, axiom, (! [W:mworld,X0:$i]: ((((eiw_di @ X0) @ W) => ((eiw_di @ (inverse @ X0)) @ W))))).
thf(eiw_flip_mono, axiom, (! [W:mworld,X0:$i]: ((((eiw_di @ X0) @ W) => ((eiw_di @ (flip @ X0)) @ W))))).
thf(eiw_singleton_mono, axiom, (! [W:mworld,X0:$i]: ((((eiw_di @ X0) @ W) => ((eiw_di @ (singleton @ X0)) @ W))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
thf(reflexivity, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W))))))))).
thf(symmetry, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W))))) @ W))))))) @ W))))))))).
thf(transitivity, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((mbox @ (^ [W:mworld]: ((! [Z:$i]: ((((eiw_di @ Z) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (Z)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Z)) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(apply_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (apply)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (apply)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(apply_substitution_2, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (apply)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (apply)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(complement_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (complement)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (complement)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))))).
thf(compose_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (compose)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (compose)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(compose_substitution_2, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (compose)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (compose)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(cross_product_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(cross_product_substitution_2, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(domain_of_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (domain_of)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (domain_of)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))))).
thf(first_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (first)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (first)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))))).
thf(flip_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (flip)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (flip)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))))).
thf(image_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (image)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (image)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(image_substitution_2, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (image)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (image)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(intersection_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (intersection)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (intersection)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(intersection_substitution_2, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (intersection)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (intersection)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(inverse_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (inverse)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (inverse)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))))).
thf(ordered_pair_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (ordered_pair)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (ordered_pair)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(ordered_pair_substitution_2, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (ordered_pair)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (ordered_pair)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(power_class_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (power_class)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (power_class)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))))).
thf(range_of_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (range_of)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (range_of)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))))).
thf(restrict_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((! [D:$i]: ((((eiw_di @ D) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (restrict)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (D)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (restrict)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (D)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))) @ W))))))))).
thf(restrict_substitution_2, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((! [D:$i]: ((((eiw_di @ D) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (restrict)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (D)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (restrict)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (D)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))) @ W))))))))).
thf(restrict_substitution_3, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((! [D:$i]: ((((eiw_di @ D) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (restrict)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (D)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (restrict)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (D)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))) @ W))))))))).
thf(rotate_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (rotate)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (rotate)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))))).
thf(second_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (second)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (second)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))))).
thf(singleton_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))))).
thf(successor_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (successor)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (successor)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))))).
thf(sum_class_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (sum_class)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (sum_class)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))))).
thf(union_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (union)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (union)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(union_substitution_2, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (union)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (union)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(unordered_pair_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(unordered_pair_substitution_2, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(disjoint_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((disjoint @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((disjoint @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(disjoint_substitution_2, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((disjoint @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((disjoint @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(function_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: (((function @ W) @ ((^ [W:mworld]: (A)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: (((function @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W))))) @ W))))))) @ W))))))))).
thf(inductive_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: (((inductive @ W) @ ((^ [W:mworld]: (A)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: (((inductive @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W))))) @ W))))))) @ W))))))))).
thf(member_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(member_substitution_2, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(subclass_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(subclass_substitution_2, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => ((mbox @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((mbox @ (^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(subclass_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((! [U:$i]: ((((eiw_di @ U) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W))))) @ W))))))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((! [U:$i]: ((((eiw_di @ U) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W))))) @ W))))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W))))) @ W)))) @ W))))))) @ W))))))))).
thf(class_elements_are_sets, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W))))))))).
thf(extensionality, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W)))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W))))) @ W)))) @ W))))))) @ W))))))))).
thf(unordered_pair_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [U:$i]: ((((eiw_di @ U) @ W) => ((mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W))))) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) | ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W)))) @ W)))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) | ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W)))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W))))) @ W))))) @ W)))) @ W))))))) @ W))))))) @ W))))))))).
thf(unordered_pair_0, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W))))))) @ W))))))))).
thf(singleton_set_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W))))) @ W))))))))).
thf(ordered_pair_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (ordered_pair)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W)))) @ W)))) @ W))))) @ W))))))) @ W))))))))).
thf(cross_product_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [U:$i]: ((((eiw_di @ U) @ W) => ((mbox @ (^ [W:mworld]: ((! [V:$i]: ((((eiw_di @ V) @ W) => ((mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (ordered_pair)) @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (V)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W))))) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (V)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W)))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (V)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (ordered_pair)) @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (V)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W))))) @ W))))) @ W)))) @ W))))))) @ W))))))) @ W))))))) @ W))))))))).
thf(cross_product_0, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((mbox @ (^ [W:mworld]: ((! [Z:$i]: ((((eiw_di @ Z) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (ordered_pair)) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (first)) @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (second)) @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W)))) @ W))))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(element_relation_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (ordered_pair)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (element_relation)) @ W))))) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W)))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (ordered_pair)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (element_relation)) @ W))))) @ W))))) @ W)))) @ W))))))) @ W))))))))).
thf(element_relation_0, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (element_relation)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W))))))).
thf(intersection_0, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((mbox @ (^ [W:mworld]: ((! [Z:$i]: ((((eiw_di @ Z) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (intersection)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W))))) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W)))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (intersection)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W))))) @ W))))) @ W)))) @ W))))))) @ W))))))) @ W))))))))).
thf(complement_0, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Z:$i]: ((((eiw_di @ Z) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (complement)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W))))) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W)))))) @ W)))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W)))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (complement)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W))))) @ W))))) @ W)))) @ W))))))) @ W))))))))).
thf(restrict_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [XR:$i]: ((((eiw_di @ XR) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (restrict)) @ W) @ ((^ [W:mworld]: (XR)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (intersection)) @ W) @ ((^ [W:mworld]: (XR)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W)))) @ W))))) @ W))))))) @ W))))))) @ W))))))))).
thf(null_class_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (null_class)) @ W))))) @ W)))))) @ W))))))))).
thf(domain_of_0, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Z:$i]: ((((eiw_di @ Z) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (domain_of)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W))))) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (restrict)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (null_class)) @ W))))) @ W)))))) @ W)))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (restrict)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (null_class)) @ W))))) @ W)))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (domain_of)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W))))) @ W))))) @ W)))) @ W))))))) @ W))))))))).
thf(rotate_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [U:$i]: ((((eiw_di @ U) @ W) => ((mbox @ (^ [W:mworld]: ((! [V:$i]: ((((eiw_di @ V) @ W) => ((mbox @ (^ [W0:mworld]: ((! [W:$i]: ((((eiw_di @ W) @ W0) => ((^ [W0:mworld]: ((((mbox @ (^ [W0:mworld]: ((((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: (((member @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: (U)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (V)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (W)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: (rotate)) @ W0) @ ((^ [W0:mworld]: (X)) @ W0)))) @ W0))))) @ W0) => ((^ [W0:mworld]: ((((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: (((member @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: (U)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (V)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (W)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (cross_product)) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (cross_product)) @ W0) @ ((^ [W0:mworld]: (universal_class)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (universal_class)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (universal_class)) @ W0)))) @ W0))))) @ W0) & ((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: (((member @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: (V)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (W)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (U)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (X)) @ W0))))) @ W0)))) @ W0))))) @ W0) & ((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: ((((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: (((member @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: (U)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (V)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (W)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (cross_product)) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (cross_product)) @ W0) @ ((^ [W0:mworld]: (universal_class)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (universal_class)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (universal_class)) @ W0)))) @ W0))))) @ W0) & ((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: (((member @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: (V)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (W)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (U)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (X)) @ W0))))) @ W0)))) @ W0) => ((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: (((member @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: (U)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (V)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (W)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: (rotate)) @ W0) @ ((^ [W0:mworld]: (X)) @ W0)))) @ W0))))) @ W0))))) @ W0)))) @ W0))))))) @ W))))))) @ W))))))) @ W))))))))).
thf(rotate_0, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (rotate)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W))))) @ W))))))))).
thf(flip_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [U:$i]: ((((eiw_di @ U) @ W) => ((mbox @ (^ [W:mworld]: ((! [V:$i]: ((((eiw_di @ V) @ W) => ((mbox @ (^ [W0:mworld]: ((! [W:$i]: ((((eiw_di @ W) @ W0) => ((mbox @ (^ [W0:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W0) => ((^ [W0:mworld]: ((((mbox @ (^ [W0:mworld]: ((((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: (((member @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: (U)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (V)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (W)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: (flip)) @ W0) @ ((^ [W0:mworld]: (X)) @ W0)))) @ W0))))) @ W0) => ((^ [W0:mworld]: ((((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: (((member @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: (U)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (V)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (W)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (cross_product)) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (cross_product)) @ W0) @ ((^ [W0:mworld]: (universal_class)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (universal_class)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (universal_class)) @ W0)))) @ W0))))) @ W0) & ((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: (((member @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: (V)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (U)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (W)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (X)) @ W0))))) @ W0)))) @ W0))))) @ W0) & ((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: ((((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: (((member @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: (U)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (V)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (W)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (cross_product)) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (cross_product)) @ W0) @ ((^ [W0:mworld]: (universal_class)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (universal_class)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (universal_class)) @ W0)))) @ W0))))) @ W0) & ((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: (((member @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: (V)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (U)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (W)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (X)) @ W0))))) @ W0)))) @ W0) => ((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: (((member @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (ordered_pair)) @ W0) @ ((^ [W0:mworld]: (U)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (V)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: (W)) @ W0)))) @ W0)))) @ W0) @ ((^ [W0:mworld]: ((((^ [W0:mworld]: (flip)) @ W0) @ ((^ [W0:mworld]: (X)) @ W0)))) @ W0))))) @ W0))))) @ W0)))) @ W0))))))) @ W0))))))) @ W))))))) @ W))))))))).
thf(flip_0, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (flip)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W))))) @ W))))))))).
thf(union_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((mbox @ (^ [W:mworld]: ((! [Z:$i]: ((((eiw_di @ Z) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (union)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W))))) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) | ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W)))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) | ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (union)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W))))) @ W))))) @ W)))) @ W))))))) @ W))))))) @ W))))))))).
thf(successor_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (successor)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (union)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W)))) @ W))))) @ W))))))))).
thf(successor_relation_defn1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (successor_relation)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W))))))).
thf(successor_relation_defn2, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (ordered_pair)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (successor_relation)) @ W))))) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (successor)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W)))) @ W)))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (successor)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W)))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (ordered_pair)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (successor_relation)) @ W))))) @ W))))) @ W)))) @ W))))))) @ W))))))))).
thf(inverse_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (inverse)) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (domain_of)) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (flip)) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W)))) @ W)))) @ W))))) @ W))))))))).
thf(range_of_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [Z:$i]: ((((eiw_di @ Z) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (range_of)) @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (domain_of)) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (inverse)) @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W)))) @ W))))) @ W))))))))).
thf(image_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [XR:$i]: ((((eiw_di @ XR) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (image)) @ W) @ ((^ [W:mworld]: (XR)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (range_of)) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (restrict)) @ W) @ ((^ [W:mworld]: (XR)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W)))) @ W))))) @ W))))))) @ W))))))))).
thf(inductive_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: (((inductive @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (null_class)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (image)) @ W) @ ((^ [W:mworld]: (successor_relation)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W)))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (null_class)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (image)) @ W) @ ((^ [W:mworld]: (successor_relation)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: (((inductive @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W))))) @ W)))) @ W))))))))).
thf(infinity, axiom, (mlocal @ (^ [W:mworld]: ((? [X:$i]: ((((eiw_di @ X) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: (((inductive @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: (((inductive @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W))))) @ W))))))) @ W)))) @ W)))) @ W)))))))).
thf(sum_class_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [U:$i]: ((((eiw_di @ U) @ W) => ((mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (sum_class)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W))))) @ W) => ((^ [W:mworld]: ((? [Y:$i]: ((((eiw_di @ Y) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W)))) @ W)))))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((? [Y:$i]: ((((eiw_di @ Y) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W)))) @ W)))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (sum_class)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W))))) @ W))))) @ W)))) @ W))))))) @ W))))))))).
thf(sum_class_0, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (sum_class)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W))))) @ W))))))))).
thf(power_class_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [U:$i]: ((((eiw_di @ U) @ W) => ((mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (power_class)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W))))) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W)))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (power_class)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W))))) @ W))))) @ W)))) @ W))))))) @ W))))))))).
thf(power_class_0, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [U:$i]: ((((eiw_di @ U) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (power_class)) @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W))))) @ W))))))))).
thf(compose_defn1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [XR:$i]: ((((eiw_di @ XR) @ W) => ((mbox @ (^ [W:mworld]: ((! [YR:$i]: ((((eiw_di @ YR) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (compose)) @ W) @ ((^ [W:mworld]: (YR)) @ W)))) @ W) @ ((^ [W:mworld]: (XR)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W))))) @ W))))))) @ W))))))))).
thf(compose_defn2, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [XR:$i]: ((((eiw_di @ XR) @ W) => ((mbox @ (^ [W:mworld]: ((! [YR:$i]: ((((eiw_di @ YR) @ W) => ((mbox @ (^ [W:mworld]: ((! [U:$i]: ((((eiw_di @ U) @ W) => ((mbox @ (^ [W:mworld]: ((! [V:$i]: ((((eiw_di @ V) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (ordered_pair)) @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (V)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (compose)) @ W) @ ((^ [W:mworld]: (YR)) @ W)))) @ W) @ ((^ [W:mworld]: (XR)) @ W)))) @ W))))) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (V)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (image)) @ W) @ ((^ [W:mworld]: (YR)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (image)) @ W) @ ((^ [W:mworld]: (YR)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W)))) @ W)))) @ W))))) @ W)))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (V)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (image)) @ W) @ ((^ [W:mworld]: (YR)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (image)) @ W) @ ((^ [W:mworld]: (YR)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W)))) @ W)))) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (ordered_pair)) @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (V)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (compose)) @ W) @ ((^ [W:mworld]: (YR)) @ W)))) @ W) @ ((^ [W:mworld]: (XR)) @ W)))) @ W))))) @ W))))) @ W)))) @ W))))))) @ W))))))) @ W))))))) @ W))))))))).
thf(function_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [XF:$i]: ((((eiw_di @ XF) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: (((function @ W) @ ((^ [W:mworld]: (XF)) @ W))))) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (XF)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (compose)) @ W) @ ((^ [W:mworld]: (XF)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (inverse)) @ W) @ ((^ [W:mworld]: (XF)) @ W)))) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (identity_relation)) @ W))))) @ W)))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: (XF)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (cross_product)) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W)))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subclass @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (compose)) @ W) @ ((^ [W:mworld]: (XF)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (inverse)) @ W) @ ((^ [W:mworld]: (XF)) @ W)))) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (identity_relation)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: (((function @ W) @ ((^ [W:mworld]: (XF)) @ W))))) @ W))))) @ W)))) @ W))))))))).
thf(replacement, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [XF:$i]: ((((eiw_di @ XF) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: (((function @ W) @ ((^ [W:mworld]: (XF)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (image)) @ W) @ ((^ [W:mworld]: (XF)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W))))) @ W))))))) @ W))))))))).
thf(disjoint_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((disjoint @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((! [U:$i]: ((((eiw_di @ U) @ W) => ((mbox @ (^ [W:mworld]: ((~ (((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W)))) @ W)))))) @ W))))))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((! [U:$i]: ((((eiw_di @ U) @ W) => ((mbox @ (^ [W:mworld]: ((~ (((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W)))) @ W)))))) @ W))))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((disjoint @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W))))) @ W)))) @ W))))))) @ W))))))))).
thf(regularity, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (null_class)) @ W))))) @ W)))))) @ W) => ((^ [W:mworld]: ((? [U:$i]: ((((eiw_di @ U) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((disjoint @ W) @ ((^ [W:mworld]: (U)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W)))) @ W)))) @ W)))))) @ W))))) @ W))))))))).
thf(apply_defn, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [XF:$i]: ((((eiw_di @ XF) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (apply)) @ W) @ ((^ [W:mworld]: (XF)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (sum_class)) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (image)) @ W) @ ((^ [W:mworld]: (XF)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W)))) @ W)))) @ W))))) @ W))))))) @ W))))))))).
thf(choice, axiom, (mlocal @ (^ [W:mworld]: ((? [XF:$i]: ((((eiw_di @ XF) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: (((function @ W) @ ((^ [W:mworld]: (XF)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W) => ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (null_class)) @ W))))) @ W) | ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (apply)) @ W) @ ((^ [W:mworld]: (XF)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W)))) @ W))))) @ W))))))) @ W)))) @ W)))))))).
thf(ordered_pair_is_set, conjecture, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (ordered_pair)) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (universal_class)) @ W))))) @ W))))))) @ W))))))))).

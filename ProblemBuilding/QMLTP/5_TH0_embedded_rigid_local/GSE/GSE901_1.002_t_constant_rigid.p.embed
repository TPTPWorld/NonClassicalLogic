%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:08:13 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(t_constant_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($constant),($modalities) == ($modal_system_T),($terms) == ($local)])).
%%% Transformation parameters: FORCE_HIGHERORDER

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
thf(mworld_type, type, mworld: $tType).
thf(mrel_decl, type, mrel: (mworld > (mworld > $o))).
thf(mbox_decl, type, mbox: ((mworld > $o) > (mworld > $o))).
thf(mbox_def, definition, (mbox = (^ [Phi:(mworld > $o),W:mworld]: ((! [V:mworld]: ((((mrel @ W) @ V) => (Phi @ V)))))))).
thf(mdia_decl, type, mdia: ((mworld > $o) > (mworld > $o))).
thf(mdia_def, definition, (mdia = (^ [Phi:(mworld > $o),W:mworld]: ((? [V:mworld]: ((((mrel @ W) @ V) & (Phi @ V)))))))).
thf(mrel_reflexive, axiom, (! [W:mworld]: (((mrel @ W) @ W)))).
thf(mactual_decl, type, mactual: mworld).
thf(mlocal_decl, type, mlocal: ((mworld > $o) > $o)).
thf(mlocal_def, definition, (mlocal = (^ [Phi:(mworld > $o)]: ((Phi @ mactual))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
thf(empty_set_decl, type, empty_set: $i).
thf(qmltpeq_decl, type, qmltpeq: (mworld > ($i > ($i > $o)))).
thf(subset_decl, type, subset: (mworld > ($i > ($i > $o)))).
thf(empty_decl, type, empty: (mworld > ($i > $o))).
thf(singleton_decl, type, singleton: ($i > $i)).
thf(unordered_pair_decl, type, unordered_pair: ($i > ($i > $i))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
thf(reflexivity, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W)))))))).
thf(symmetry, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: (((mbox @ (^ [W:mworld]: ((! [Y:$i]: (((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W))))) @ W)))))) @ W)))))))).
thf(transitivity, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [X:$i]: (((mbox @ (^ [W:mworld]: ((! [Y:$i]: (((mbox @ (^ [W:mworld]: ((! [Z:$i]: (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (Z)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Z)) @ W))))) @ W))))) @ W)))))) @ W)))))) @ W)))))))).
thf(singleton_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: (((mbox @ (^ [W:mworld]: ((! [B:$i]: (((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W)))))) @ W)))))))).
thf(unordered_pair_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: (((mbox @ (^ [W:mworld]: ((! [B:$i]: (((mbox @ (^ [W:mworld]: ((! [C:$i]: (((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W))))) @ W)))))) @ W)))))) @ W)))))))).
thf(unordered_pair_substitution_2, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: (((mbox @ (^ [W:mworld]: ((! [B:$i]: (((mbox @ (^ [W:mworld]: ((! [C:$i]: (((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W))))) @ W)))))) @ W)))))) @ W)))))))).
thf(empty_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: (((mbox @ (^ [W:mworld]: ((! [B:$i]: (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: (((empty @ W) @ ((^ [W:mworld]: (A)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: (((empty @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W))))) @ W)))))) @ W)))))))).
thf(subset_substitution_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: (((mbox @ (^ [W:mworld]: ((! [B:$i]: (((mbox @ (^ [W:mworld]: ((! [C:$i]: (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subset @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subset @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W))))) @ W))))) @ W)))))) @ W)))))) @ W)))))))).
thf(subset_substitution_2, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: (((mbox @ (^ [W:mworld]: ((! [B:$i]: (((mbox @ (^ [W:mworld]: ((! [C:$i]: (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subset @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subset @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W))))) @ W))))) @ W)))))) @ W)))))) @ W)))))))).
thf(commutativity_k2_tarski, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: (((mbox @ (^ [W:mworld]: ((! [B:$i]: (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W))))) @ W)))))) @ W)))))))).
thf(reflexivity_r1_tarski, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: (((mbox @ (^ [W:mworld]: ((! [B:$i]: (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subset @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W))))) @ W)))))) @ W)))))))).
thf(fc1_xboole_0, axiom, (mlocal @ (mbox @ (^ [W:mworld]: (((empty @ W) @ ((^ [W:mworld]: (empty_set)) @ W))))))).
thf(rc1_xboole_0, axiom, (mlocal @ (^ [W:mworld]: ((? [A:$i]: (((mbox @ (^ [W:mworld]: (((empty @ W) @ ((^ [W:mworld]: (A)) @ W))))) @ W))))))).
thf(rc2_xboole_0, axiom, (mlocal @ (^ [W:mworld]: ((? [A:$i]: (((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: (((empty @ W) @ ((^ [W:mworld]: (A)) @ W))))) @ W)))))) @ W))))))).
thf(t42_zfmisc_1, conjecture, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: (((mbox @ (^ [W:mworld]: ((! [B:$i]: (((mbox @ (^ [W:mworld]: ((! [C:$i]: (((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subset @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((~ (((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (empty_set)) @ W))))) @ W)))))) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W)))))) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W)))))) @ W) & ((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W)))))) @ W)))) @ W)))) @ W)))) @ W)))))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((~ (((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (empty_set)) @ W))))) @ W)))))) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W)))))) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W)))))) @ W) & ((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W)))))) @ W)))) @ W)))) @ W)))) @ W)))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subset @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W))))) @ W)))) @ W)))))) @ W)))))) @ W)))))))).
thf(l46_zfmisc_1, axiom, (mlocal @ (mbox @ (^ [W:mworld]: ((! [A:$i]: (((mbox @ (^ [W:mworld]: ((! [B:$i]: (((mbox @ (^ [W:mworld]: ((! [C:$i]: (((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subset @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((~ (((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (empty_set)) @ W))))) @ W)))))) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W)))))) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W)))))) @ W) & ((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W)))))) @ W)))) @ W)))) @ W)))) @ W)))))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((~ (((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (empty_set)) @ W))))) @ W)))))) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W)))))) @ W) & ((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (singleton)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W)))))) @ W) & ((mbox @ (^ [W:mworld]: ((~ (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W)))))) @ W)))) @ W)))) @ W)))) @ W)))))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((subset @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (unordered_pair)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W))))) @ W)))) @ W)))))) @ W)))))) @ W)))))))).

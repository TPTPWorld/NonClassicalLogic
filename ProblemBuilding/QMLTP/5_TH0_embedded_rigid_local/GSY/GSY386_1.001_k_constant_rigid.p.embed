%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:09:19 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(k_constant_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($constant),($modalities) == ($modal_system_K),($terms) == ($local)])).
%%% Transformation parameters: FORCE_HIGHERORDER

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
thf(mworld_type, type, mworld: $tType).
thf(mrel_decl, type, mrel: (mworld > (mworld > $o))).
thf(mbox_decl, type, mbox: ((mworld > $o) > (mworld > $o))).
thf(mbox_def, definition, (mbox = (^ [Phi:(mworld > $o),W:mworld]: ((! [V:mworld]: ((((mrel @ W) @ V) => (Phi @ V)))))))).
thf(mdia_decl, type, mdia: ((mworld > $o) > (mworld > $o))).
thf(mdia_def, definition, (mdia = (^ [Phi:(mworld > $o),W:mworld]: ((? [V:mworld]: ((((mrel @ W) @ V) & (Phi @ V)))))))).
thf(mactual_decl, type, mactual: mworld).
thf(mlocal_decl, type, mlocal: ((mworld > $o) > $o)).
thf(mlocal_def, definition, (mlocal = (^ [Phi:(mworld > $o)]: ((Phi @ mactual))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
thf(big_f_decl, type, big_f: (mworld > ($i > ($i > $o)))).
thf(big_s_decl, type, big_s: (mworld > ($i > ($i > $o)))).
thf(big_d_decl, type, big_d: (mworld > ($i > ($i > ($i > $o))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
thf(x2138, conjecture, (mlocal @ (mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((! [X:$i]: (((^ [W:mworld]: ((? [Y:$i]: (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((big_f @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W))))) @ W)))))) @ W) & ((^ [W:mworld]: ((((^ [W:mworld]: ((? [X:$i]: (((mbox @ (^ [W:mworld]: ((! [E:$i]: (((^ [W:mworld]: ((? [N:$i]: (((mbox @ (^ [W0:mworld]: ((! [W:$i]: (((mbox @ (^ [W0:mworld]: ((((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: (((big_s @ W0) @ ((^ [W0:mworld]: (N)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (W)) @ W0))))) @ W0) => ((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (((big_d @ W0) @ ((^ [W0:mworld]: (W)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (X)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (E)) @ W0))))) @ W0))))) @ W0)))))) @ W))))) @ W)))))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((! [E:$i]: (((^ [W:mworld]: ((? [D:$i]: (((mbox @ (^ [W:mworld]: ((! [A:$i]: (((mbox @ (^ [W:mworld]: ((! [B:$i]: (((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((big_d @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (D)) @ W))))) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: (((mbox @ (^ [W:mworld]: ((! [Z:$i]: (((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((big_f @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: (((big_f @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (Z)) @ W))))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((big_d @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W) @ ((^ [W:mworld]: (E)) @ W))))) @ W))))) @ W)))))) @ W)))))) @ W))))) @ W)))))) @ W)))))) @ W))))) @ W)))))) @ W)))) @ W)))) @ W) => ((^ [W:mworld]: ((? [Y:$i]: (((mbox @ (^ [W:mworld]: ((! [E:$i]: (((^ [W:mworld]: ((? [M:$i]: (((mbox @ (^ [W0:mworld]: ((! [W:$i]: (((mbox @ (^ [W0:mworld]: ((((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: (((big_s @ W0) @ ((^ [W0:mworld]: (M)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (W)) @ W0))))) @ W0) => ((mbox @ (^ [W0:mworld]: ((! [Z:$i]: (((mbox @ (^ [W0:mworld]: ((((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: (((big_f @ W0) @ ((^ [W0:mworld]: (W)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (Z)) @ W0))))) @ W0) => ((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (((big_d @ W0) @ ((^ [W0:mworld]: (Z)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (Y)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (E)) @ W0))))) @ W0))))) @ W0)))))) @ W0))))) @ W0)))))) @ W))))) @ W)))))) @ W))))) @ W))))))).

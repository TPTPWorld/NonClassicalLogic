%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:09:23 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(d_decreasing_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($decreasing),($modalities) == ($modal_system_D),($terms) == ($local)])).
%%% Transformation parameters: FORCE_HIGHERORDER

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
thf(mworld_type, type, mworld: $tType).
thf(mrel_decl, type, mrel: (mworld > (mworld > $o))).
thf(mbox_decl, type, mbox: ((mworld > $o) > (mworld > $o))).
thf(mbox_def, definition, (mbox = (^ [Phi:(mworld > $o),W:mworld]: ((! [V:mworld]: ((((mrel @ W) @ V) => (Phi @ V)))))))).
thf(mdia_decl, type, mdia: ((mworld > $o) > (mworld > $o))).
thf(mdia_def, definition, (mdia = (^ [Phi:(mworld > $o),W:mworld]: ((? [V:mworld]: ((((mrel @ W) @ V) & (Phi @ V)))))))).
thf(mrel_serial, axiom, (! [W:mworld]: ((? [V:mworld]: (((mrel @ W) @ V)))))).
thf(mactual_decl, type, mactual: mworld).
thf(mlocal_decl, type, mlocal: ((mworld > $o) > $o)).
thf(mlocal_def, definition, (mlocal = (^ [Phi:(mworld > $o)]: ((Phi @ mactual))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
thf(f_decl, type, f: (mworld > ($i > ($i > ($i > $o))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Additional meta-logical definitions %%%%%%%%
thf(eiw_di_decl, type, eiw_di: ($i > (mworld > $o))).
thf(eiw_di_nonempty, axiom, (! [W:mworld]: ((? [X:$i]: (((eiw_di @ X) @ W)))))).
thf(eiw_di_decr, axiom, (! [W:mworld,V:mworld,X:$i]: (((((eiw_di @ X) @ W) & ((mrel @ V) @ W)) => ((eiw_di @ X) @ V))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
thf(kalish250, conjecture, (mlocal @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((mbox @ (^ [W:mworld]: ((! [Z:$i]: ((((eiw_di @ Z) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((f @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (Z)) @ W))))) @ W))))))) @ W))))))) @ W))))))) @ W) => ((mbox @ (^ [W:mworld]: ((~ (((^ [W0:mworld]: ((? [U:$i]: ((((eiw_di @ U) @ W0) & (? [V:$i]: ((((eiw_di @ V) @ W0) & (? [W:$i]: ((((eiw_di @ W) @ W0) & ((mbox @ (^ [W0:mworld]: ((~ (((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (((f @ W0) @ ((^ [W0:mworld]: (U)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (V)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (W)) @ W0))))) @ W0)))))) @ W0)))))))))))) @ W)))))) @ W))))) @ W) & ((mbox @ (^ [W:mworld]: ((((mbox @ (^ [W:mworld]: ((~ (((^ [W0:mworld]: ((? [U:$i]: ((((eiw_di @ U) @ W0) & (? [V:$i]: ((((eiw_di @ V) @ W0) & (? [W:$i]: ((((eiw_di @ W) @ W0) & ((mbox @ (^ [W0:mworld]: ((~ (((mbox @ (^ [W0:mworld]: ((((^ [W0:mworld]: ((((^ [W0:mworld]: (((f @ W0) @ ((^ [W0:mworld]: (U)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (V)) @ W0)))) @ W0) @ ((^ [W0:mworld]: (W)) @ W0))))) @ W0)))))) @ W0)))))))))))) @ W)))))) @ W) => ((mbox @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((mbox @ (^ [W:mworld]: ((! [Y:$i]: ((((eiw_di @ Y) @ W) => ((mbox @ (^ [W:mworld]: ((! [Z:$i]: ((((eiw_di @ Z) @ W) => ((mbox @ (^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((f @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (Z)) @ W))))) @ W))))))) @ W))))))) @ W))))))) @ W))))) @ W)))))).

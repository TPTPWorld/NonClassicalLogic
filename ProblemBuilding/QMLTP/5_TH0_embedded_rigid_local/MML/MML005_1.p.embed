%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:26:57 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(s4_cumulative_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($cumulative),($modalities) == ($modal_system_S4),($terms) == ($local)])).
%%% Transformation parameters: FORCE_HIGHERORDER

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
thf(mworld_type, type, mworld: $tType).
thf(mindex_type, type, mindex: $tType).
thf(mrel_decl, type, mrel: (mindex > (mworld > (mworld > $o)))).
thf('#always_decl', type, '#always': mindex).
thf('#fox_decl', type, '#fox': mindex).
thf('#sing_decl', type, '#sing': mindex).
thf('#praise_decl', type, '#praise': mindex).
thf(mbox_decl, type, mbox: (mindex > ((mworld > $o) > (mworld > $o)))).
thf(mbox_def, definition, (mbox = (^ [R:mindex,Phi:(mworld > $o),W:mworld]: ((! [V:mworld]: (((((mrel @ R) @ W) @ V) => (Phi @ V)))))))).
thf(mdia_decl, type, mdia: (mindex > ((mworld > $o) > (mworld > $o)))).
thf(mdia_def, definition, (mdia = (^ [R:mindex,Phi:(mworld > $o),W:mworld]: ((? [V:mworld]: (((((mrel @ R) @ W) @ V) & (Phi @ V)))))))).
thf(mactual_decl, type, mactual: mworld).
thf(mlocal_decl, type, mlocal: ((mworld > $o) > $o)).
thf(mlocal_def, definition, (mlocal = (^ [Phi:(mworld > $o)]: ((Phi @ mactual))))).
thf('mrel_#always_reflexive', axiom, (! [W:mworld]: ((((mrel @ '#always') @ W) @ W)))).
thf('mrel_#always_transitive', axiom, (! [W:mworld,V:mworld,U:mworld]: ((((((mrel @ '#always') @ W) @ V) & (((mrel @ '#always') @ V) @ U)) => (((mrel @ '#always') @ W) @ U))))).
thf('mrel_#fox_reflexive', axiom, (! [W:mworld]: ((((mrel @ '#fox') @ W) @ W)))).
thf('mrel_#fox_transitive', axiom, (! [W:mworld,V:mworld,U:mworld]: ((((((mrel @ '#fox') @ W) @ V) & (((mrel @ '#fox') @ V) @ U)) => (((mrel @ '#fox') @ W) @ U))))).
thf('mrel_#sing_reflexive', axiom, (! [W:mworld]: ((((mrel @ '#sing') @ W) @ W)))).
thf('mrel_#sing_transitive', axiom, (! [W:mworld,V:mworld,U:mworld]: ((((((mrel @ '#sing') @ W) @ V) & (((mrel @ '#sing') @ V) @ U)) => (((mrel @ '#sing') @ W) @ U))))).
thf('mrel_#praise_reflexive', axiom, (! [W:mworld]: ((((mrel @ '#praise') @ W) @ W)))).
thf('mrel_#praise_transitive', axiom, (! [W:mworld,V:mworld,U:mworld]: ((((((mrel @ '#praise') @ W) @ V) & (((mrel @ '#praise') @ V) @ U)) => (((mrel @ '#praise') @ W) @ U))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
thf(raven_decl, type, raven: $i).
thf(cheese_decl, type, cheese: $i).
thf(dropped_decl, type, dropped: (mworld > ($i > $o))).
thf(charmed_decl, type, charmed: (mworld > ($i > $o))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
thf(i_always_praise_1_1, axiom, (mlocal @ (^ [W:mworld]: (((((mbox @ '#always') @ (^ [W:mworld]: (((dropped @ W) @ ((^ [W:mworld]: (cheese)) @ W))))) @ W) => (((mbox @ '#praise') @ ((mbox @ '#always') @ (^ [W:mworld]: (((dropped @ W) @ ((^ [W:mworld]: (cheese)) @ W)))))) @ W)))))).
thf(i_always_praise_2_2, axiom, (mlocal @ (^ [W:mworld]: (((((mbox @ '#always') @ (^ [W:mworld]: ((~ (((^ [W:mworld]: (((dropped @ W) @ ((^ [W:mworld]: (cheese)) @ W)))) @ W)))))) @ W) => (((mbox @ '#praise') @ ((mbox @ '#always') @ (^ [W:mworld]: ((~ (((^ [W:mworld]: (((dropped @ W) @ ((^ [W:mworld]: (cheese)) @ W)))) @ W))))))) @ W)))))).
thf(i_always_praise_1_3, axiom, (mlocal @ (^ [W:mworld]: (((((mbox @ '#always') @ (^ [W:mworld]: (((charmed @ W) @ ((^ [W:mworld]: (raven)) @ W))))) @ W) => (((mbox @ '#praise') @ ((mbox @ '#always') @ (^ [W:mworld]: (((charmed @ W) @ ((^ [W:mworld]: (raven)) @ W)))))) @ W)))))).
thf(i_always_praise_2_4, axiom, (mlocal @ (^ [W:mworld]: (((((mbox @ '#always') @ (^ [W:mworld]: ((~ (((^ [W:mworld]: (((charmed @ W) @ ((^ [W:mworld]: (cheese)) @ W)))) @ W)))))) @ W) => (((mbox @ '#praise') @ ((mbox @ '#always') @ (^ [W:mworld]: ((~ (((^ [W:mworld]: (((charmed @ W) @ ((^ [W:mworld]: (raven)) @ W)))) @ W))))))) @ W)))))).
thf(i_always_praise_1_5, axiom, (mlocal @ (^ [W:mworld]: (((((mbox @ '#always') @ (^ [W:mworld]: (((dropped @ W) @ ((^ [W:mworld]: (cheese)) @ W))))) @ W) => (((mbox @ '#sing') @ ((mbox @ '#always') @ (^ [W:mworld]: (((dropped @ W) @ ((^ [W:mworld]: (cheese)) @ W)))))) @ W)))))).
thf(i_always_praise_2_6, axiom, (mlocal @ (^ [W:mworld]: (((((mbox @ '#always') @ (^ [W:mworld]: ((~ (((^ [W:mworld]: (((dropped @ W) @ ((^ [W:mworld]: (cheese)) @ W)))) @ W)))))) @ W) => (((mbox @ '#sing') @ ((mbox @ '#always') @ (^ [W:mworld]: ((~ (((^ [W:mworld]: (((dropped @ W) @ ((^ [W:mworld]: (cheese)) @ W)))) @ W))))))) @ W)))))).
thf(i_always_praise_1_7, axiom, (mlocal @ (^ [W:mworld]: (((((mbox @ '#always') @ (^ [W:mworld]: (((charmed @ W) @ ((^ [W:mworld]: (raven)) @ W))))) @ W) => (((mbox @ '#sing') @ ((mbox @ '#always') @ (^ [W:mworld]: (((charmed @ W) @ ((^ [W:mworld]: (raven)) @ W)))))) @ W)))))).
thf(i_always_praise_2_8, axiom, (mlocal @ (^ [W:mworld]: (((((mbox @ '#always') @ (^ [W:mworld]: ((~ (((^ [W:mworld]: (((charmed @ W) @ ((^ [W:mworld]: (cheese)) @ W)))) @ W)))))) @ W) => (((mbox @ '#sing') @ ((mbox @ '#always') @ (^ [W:mworld]: ((~ (((^ [W:mworld]: (((charmed @ W) @ ((^ [W:mworld]: (raven)) @ W)))) @ W))))))) @ W)))))).
thf(axiom_1, axiom, (mlocal @ ((mbox @ '#fox') @ ((mbox @ '#praise') @ (^ [W:mworld]: (((charmed @ W) @ ((^ [W:mworld]: (raven)) @ W)))))))).
thf(axiom_2, axiom, (mlocal @ ((mbox @ '#fox') @ ((mbox @ '#always') @ (^ [W:mworld]: ((((^ [W:mworld]: (((charmed @ W) @ ((^ [W:mworld]: (raven)) @ W)))) @ W) => (((mbox @ '#sing') @ (^ [W:mworld]: (((dropped @ W) @ ((^ [W:mworld]: (cheese)) @ W))))) @ W)))))))).
thf(conj, conjecture, (mlocal @ ((mbox @ '#fox') @ ((mbox @ '#praise') @ ((mbox @ '#sing') @ (^ [W:mworld]: (((dropped @ W) @ ((^ [W:mworld]: (cheese)) @ W))))))))).

%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:26:57 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(k_cumulative_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($cumulative),($modalities) == ($modal_system_K),($terms) == ($local)])).
%%% Transformation parameters: FORCE_HIGHERORDER

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
thf(mworld_type, type, mworld: $tType).
thf(mindex_type, type, mindex: $tType).
thf(mrel_decl, type, mrel: (mindex > (mworld > (mworld > $o)))).
thf('#pour_a_decl', type, '#pour_a': mindex).
thf('#make_c_decl', type, '#make_c': mindex).
thf('#pour_b_decl', type, '#pour_b': mindex).
thf(mbox_decl, type, mbox: (mindex > ((mworld > $o) > (mworld > $o)))).
thf(mbox_def, definition, (mbox = (^ [R:mindex,Phi:(mworld > $o),W:mworld]: ((! [V:mworld]: (((((mrel @ R) @ W) @ V) => (Phi @ V)))))))).
thf(mdia_decl, type, mdia: (mindex > ((mworld > $o) > (mworld > $o)))).
thf(mdia_def, definition, (mdia = (^ [R:mindex,Phi:(mworld > $o),W:mworld]: ((? [V:mworld]: (((((mrel @ R) @ W) @ V) & (Phi @ V)))))))).
thf(mactual_decl, type, mactual: mworld).
thf(mlocal_decl, type, mlocal: ((mworld > $o) > $o)).
thf(mlocal_def, definition, (mlocal = (^ [Phi:(mworld > $o)]: ((Phi @ mactual))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
thf(acid_decl, type, acid: (mworld > $o)).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
thf(pour_ab_make_axiom_1, axiom, (mlocal @ (^ [W:mworld]: (((((mbox @ '#pour_a') @ ((mbox @ '#pour_b') @ acid)) @ W) => (((mbox @ '#make_c') @ acid) @ W)))))).
thf(pour_ab_make_axiom_2, axiom, (mlocal @ (^ [W:mworld]: (((((mbox @ '#pour_a') @ ((mbox @ '#pour_b') @ (^ [W:mworld]: ((~ ((acid @ W))))))) @ W) => (((mbox @ '#make_c') @ (^ [W:mworld]: ((~ ((acid @ W)))))) @ W)))))).
thf(pour_ba_make_axiom_1, axiom, (mlocal @ (^ [W:mworld]: (((((mbox @ '#pour_b') @ ((mbox @ '#pour_a') @ acid)) @ W) => (((mbox @ '#make_c') @ acid) @ W)))))).
thf(pour_ba_make_axiom_2, axiom, (mlocal @ (^ [W:mworld]: (((((mbox @ '#pour_b') @ ((mbox @ '#pour_a') @ (^ [W:mworld]: ((~ ((acid @ W))))))) @ W) => (((mbox @ '#make_c') @ (^ [W:mworld]: ((~ ((acid @ W)))))) @ W)))))).
thf(pour_a_acid, axiom, (mlocal @ ((mbox @ '#pour_a') @ (^ [W:mworld]: ((~ ((acid @ W)))))))).
thf(make_c_acid, axiom, (mlocal @ ((mdia @ '#make_c') @ acid))).
thf(conj, conjecture, (mlocal @ (^ [W:mworld]: (((((mdia @ '#pour_a') @ (^ [W:mworld]: ((~ ((acid @ W)))))) @ W) & (((mdia @ '#pour_a') @ ((mdia @ '#pour_b') @ acid)) @ W)))))).

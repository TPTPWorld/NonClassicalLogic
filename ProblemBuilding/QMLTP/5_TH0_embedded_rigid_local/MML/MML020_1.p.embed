%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:26:57 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(s4_cumulative_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($cumulative),($modalities) == ($modal_system_S4),($terms) == ($local)])).
%%% Transformation parameters: FORCE_HIGHERORDER

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
thf(mworld_type, type, mworld: $tType).
thf(mindex_type, type, mindex: $tType).
thf(mrel_decl, type, mrel: (mindex > (mworld > (mworld > $o)))).
thf('#coffee_decl', type, '#coffee': mindex).
thf('#ticket_decl', type, '#ticket': mindex).
thf(mbox_decl, type, mbox: (mindex > ((mworld > $o) > (mworld > $o)))).
thf(mbox_def, definition, (mbox = (^ [R:mindex,Phi:(mworld > $o),W:mworld]: ((! [V:mworld]: (((((mrel @ R) @ W) @ V) => (Phi @ V)))))))).
thf(mdia_decl, type, mdia: (mindex > ((mworld > $o) > (mworld > $o)))).
thf(mdia_def, definition, (mdia = (^ [R:mindex,Phi:(mworld > $o),W:mworld]: ((? [V:mworld]: (((((mrel @ R) @ W) @ V) & (Phi @ V)))))))).
thf(mactual_decl, type, mactual: mworld).
thf(mlocal_decl, type, mlocal: ((mworld > $o) > $o)).
thf(mlocal_def, definition, (mlocal = (^ [Phi:(mworld > $o)]: ((Phi @ mactual))))).
thf('mrel_#coffee_reflexive', axiom, (! [W:mworld]: ((((mrel @ '#coffee') @ W) @ W)))).
thf('mrel_#coffee_transitive', axiom, (! [W:mworld,V:mworld,U:mworld]: ((((((mrel @ '#coffee') @ W) @ V) & (((mrel @ '#coffee') @ V) @ U)) => (((mrel @ '#coffee') @ W) @ U))))).
thf('mrel_#ticket_reflexive', axiom, (! [W:mworld]: ((((mrel @ '#ticket') @ W) @ W)))).
thf('mrel_#ticket_transitive', axiom, (! [W:mworld,V:mworld,U:mworld]: ((((((mrel @ '#ticket') @ W) @ V) & (((mrel @ '#ticket') @ V) @ U)) => (((mrel @ '#ticket') @ W) @ U))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
thf(passenger_decl, type, passenger: $i).
thf(takejourney_decl, type, takejourney: (mworld > ($i > $o))).
thf(usemachine_decl, type, usemachine: (mworld > ($i > $o))).
thf(visitdonuts_decl, type, visitdonuts: (mworld > ($i > $o))).
thf(usewindow_decl, type, usewindow: (mworld > ($i > $o))).
thf(getticket_decl, type, getticket: (mworld > ($i > $o))).
thf(visitstarbucks_decl, type, visitstarbucks: (mworld > ($i > $o))).
thf(getcoffee_decl, type, getcoffee: (mworld > ($i > $o))).
thf(visitstarbuck_decl, type, visitstarbuck: (mworld > ($i > $o))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Additional meta-logical definitions %%%%%%%%
thf(eiw_di_decl, type, eiw_di: ($i > (mworld > $o))).
thf(eiw_di_nonempty, axiom, (! [W:mworld]: ((? [X:$i]: (((eiw_di @ X) @ W)))))).
thf(eiw_di_cumul, axiom, (! [Index:mindex,W:mworld,V:mworld,X:$i]: (((((eiw_di @ X) @ W) & (((mrel @ Index) @ W) @ V)) => ((eiw_di @ X) @ V))))).
thf(eiw_passenger_mono, axiom, (! [W:mworld]: (((eiw_di @ passenger) @ W)))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
thf(axiom_1, axiom, (mlocal @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => (((mbox @ '#ticket') @ (^ [W:mworld]: ((((^ [W:mworld]: (((usemachine @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) | ((^ [W:mworld]: (((usewindow @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W))))) @ W)))))))).
thf(axiom_2, axiom, (mlocal @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => (((mbox @ '#ticket') @ (^ [W:mworld]: ((((^ [W:mworld]: (((usemachine @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) => ((^ [W:mworld]: (((getticket @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W))))) @ W)))))))).
thf(axiom_3, axiom, (mlocal @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => (((mbox @ '#ticket') @ (^ [W:mworld]: ((((^ [W:mworld]: (((usewindow @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) => ((^ [W:mworld]: (((getticket @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W))))) @ W)))))))).
thf(axiom_4, axiom, (mlocal @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => (((mbox @ '#coffee') @ (^ [W:mworld]: ((((^ [W:mworld]: (((visitdonuts @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) | ((^ [W:mworld]: (((visitstarbucks @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W))))) @ W)))))))).
thf(axiom_5, axiom, (mlocal @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => (((mbox @ '#coffee') @ (^ [W:mworld]: ((((^ [W:mworld]: (((visitdonuts @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) => ((^ [W:mworld]: (((getcoffee @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W))))) @ W)))))))).
thf(axiom_6, axiom, (mlocal @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => (((mbox @ '#coffee') @ (^ [W:mworld]: ((((^ [W:mworld]: (((visitstarbuck @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) => ((^ [W:mworld]: (((getcoffee @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W))))) @ W)))))))).
thf(axiom_7, axiom, (mlocal @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: (((((mbox @ '#ticket') @ (^ [W:mworld]: (((getticket @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W) & (((mbox @ '#coffee') @ (^ [W:mworld]: (((getcoffee @ W) @ ((^ [W:mworld]: (X)) @ W))))) @ W)))) @ W) => ((^ [W:mworld]: (((takejourney @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W)))) @ W)))))))).
thf(con, conjecture, (mlocal @ (^ [W:mworld]: (((takejourney @ W) @ ((^ [W:mworld]: (passenger)) @ W)))))).

%%% This output was generated by embedproblem, version 1.8.4 (library version 1.8).
%%% Generated on Tue Feb 13 18:09:43 CET 2024
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(k_varying_rigid, logic, ($modal) == ([($designation) == ($rigid),($domains) == ($varying),($modalities) == ($modal_system_K),($terms) == ($local)])).
%%% Transformation parameters: FORCE_HIGHERORDER

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
thf(mworld_type, type, mworld: $tType).
thf(mrel_decl, type, mrel: (mworld > (mworld > $o))).
thf(mbox_decl, type, mbox: ((mworld > $o) > (mworld > $o))).
thf(mbox_def, definition, (mbox = (^ [Phi:(mworld > $o),W:mworld]: ((! [V:mworld]: ((((mrel @ W) @ V) => (Phi @ V)))))))).
thf(mdia_decl, type, mdia: ((mworld > $o) > (mworld > $o))).
thf(mdia_def, definition, (mdia = (^ [Phi:(mworld > $o),W:mworld]: ((? [V:mworld]: ((((mrel @ W) @ V) & (Phi @ V)))))))).
thf(mactual_decl, type, mactual: mworld).
thf(mlocal_decl, type, mlocal: ((mworld > $o) > $o)).
thf(mlocal_def, definition, (mlocal = (^ [Phi:(mworld > $o)]: ((Phi @ mactual))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
thf(empty_set_decl, type, empty_set: $i).
thf(qmltpeq_decl, type, qmltpeq: (mworld > ($i > ($i > $o)))).
thf(not_equal_decl, type, not_equal: (mworld > ($i > ($i > $o)))).
thf(member_decl, type, member: (mworld > ($i > ($i > $o)))).
thf(empty_decl, type, empty: (mworld > ($i > $o))).
thf(intersection_decl, type, intersection: ($i > ($i > $i))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Additional meta-logical definitions %%%%%%%%
thf(eiw_di_decl, type, eiw_di: ($i > (mworld > $o))).
thf(eiw_di_nonempty, axiom, (! [W:mworld]: ((? [X:$i]: (((eiw_di @ X) @ W)))))).
thf(eiw_empty_set_mono, axiom, (! [W:mworld]: (((eiw_di @ empty_set) @ W)))).
thf(eiw_intersection_mono, axiom, (! [W:mworld,X0:$i,X1:$i]: ((((eiw_di @ X0) @ W) => (((eiw_di @ X1) @ W) => ((eiw_di @ ((intersection @ X0) @ X1)) @ W)))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
thf(reflexivity, axiom, (mlocal @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W)))))))).
thf(symmetry, axiom, (mlocal @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => (! [Y:$i]: ((((eiw_di @ Y) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W)))) @ W))))))))))).
thf(transitivity, axiom, (mlocal @ (^ [W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => (! [Y:$i]: ((((eiw_di @ Y) @ W) => (! [Z:$i]: ((((eiw_di @ Z) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) & ((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (Y)) @ W)))) @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W)))) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (X)) @ W)))) @ W) @ ((^ [W:mworld]: (Z)) @ W)))) @ W)))) @ W)))))))))))))).
thf(intersection_substitution_1, axiom, (mlocal @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => (! [B:$i]: ((((eiw_di @ B) @ W) => (! [C:$i]: ((((eiw_di @ C) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (intersection)) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (intersection)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W)))) @ W)))))))))))))).
thf(intersection_substitution_2, axiom, (mlocal @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => (! [B:$i]: ((((eiw_di @ B) @ W) => (! [C:$i]: ((((eiw_di @ C) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (intersection)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (intersection)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W)))) @ W)))) @ W)))))))))))))).
thf(empty_substitution_1, axiom, (mlocal @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => (! [B:$i]: ((((eiw_di @ B) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) & ((^ [W:mworld]: (((empty @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) => ((^ [W:mworld]: (((empty @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W)))) @ W))))))))))).
thf(member_substitution_1, axiom, (mlocal @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => (! [B:$i]: ((((eiw_di @ B) @ W) => (! [C:$i]: ((((eiw_di @ C) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) & ((^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W)))))))))))))).
thf(member_substitution_2, axiom, (mlocal @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => (! [B:$i]: ((((eiw_di @ B) @ W) => (! [C:$i]: ((((eiw_di @ C) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) & ((^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W)))) @ W)))))))))))))).
thf(not_equal_substitution_1, axiom, (mlocal @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => (! [B:$i]: ((((eiw_di @ B) @ W) => (! [C:$i]: ((((eiw_di @ C) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) & ((^ [W:mworld]: ((((^ [W:mworld]: (((not_equal @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: (((not_equal @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W)))))))))))))).
thf(not_equal_substitution_2, axiom, (mlocal @ (^ [W:mworld]: ((! [A:$i]: ((((eiw_di @ A) @ W) => (! [B:$i]: ((((eiw_di @ B) @ W) => (! [C:$i]: ((((eiw_di @ C) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) & ((^ [W:mworld]: ((((^ [W:mworld]: (((not_equal @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (A)) @ W)))) @ W)))) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: (((not_equal @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W)))) @ W)))))))))))))).
thf(intersection_defn, axiom, (mlocal @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => (! [C:$i]: ((((eiw_di @ C) @ W) => (! [D:$i]: ((((eiw_di @ D) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (D)) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (intersection)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W) <=> ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (D)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) & ((^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (D)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W)))) @ W)))))))))))))).
thf(empty_set_defn, axiom, (mlocal @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((^ [W:mworld]: ((~ (((^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (empty_set)) @ W)))) @ W))))) @ W)))))))).
thf(equal_member_defn, axiom, (mlocal @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => (! [C:$i]: ((((eiw_di @ C) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) <=> ((^ [W:mworld]: ((! [D:$i]: ((((eiw_di @ D) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (D)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) <=> ((^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (D)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W)))))) @ W)))) @ W))))))))))).
thf(not_equal_defn, axiom, (mlocal @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => (! [C:$i]: ((((eiw_di @ C) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((not_equal @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) <=> ((^ [W:mworld]: ((~ (((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W))))) @ W)))) @ W))))))))))).
thf(commutativity_of_intersection, axiom, (mlocal @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => (! [C:$i]: ((((eiw_di @ C) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: (((qmltpeq @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (intersection)) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (intersection)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W)))) @ W))))))))))).
thf(empty_defn, axiom, (mlocal @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: (((empty @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) <=> ((^ [W:mworld]: ((! [C:$i]: ((((eiw_di @ C) @ W) => ((^ [W:mworld]: ((~ (((^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W))))) @ W)))))) @ W)))) @ W)))))))).
thf(prove_th24, conjecture, (mlocal @ (^ [W:mworld]: ((! [B:$i]: ((((eiw_di @ B) @ W) => (! [C:$i]: ((((eiw_di @ C) @ W) => (! [D:$i]: ((((eiw_di @ D) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) & ((^ [W:mworld]: ((((^ [W:mworld]: (((member @ W) @ ((^ [W:mworld]: (B)) @ W)))) @ W) @ ((^ [W:mworld]: (D)) @ W)))) @ W)))) @ W) => ((^ [W:mworld]: ((((^ [W:mworld]: (((not_equal @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (intersection)) @ W) @ ((^ [W:mworld]: (C)) @ W)))) @ W) @ ((^ [W:mworld]: (D)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (empty_set)) @ W)))) @ W)))) @ W)))))))))))))).

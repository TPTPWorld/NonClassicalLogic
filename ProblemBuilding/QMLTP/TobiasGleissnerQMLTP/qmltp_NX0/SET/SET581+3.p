%%% This output was generated by tptputils, version 1.2.
%%% Generated on Wed Apr 27 15:38:07 CEST 2022 using command 'downgrade(tff)'.
tff(empty_set_type, type, empty_set: $i).
tff(qmltpeq_type, type, qmltpeq: (($i * $i) > $o)).
tff(not_equal_type, type, not_equal: (($i * $i) > $o)).
tff(member_type, type, member: (($i * $i) > $o)).
tff(empty_type, type, empty: ($i > $o)).
tff(intersection_type, type, intersection: (($i * $i) > $i)).
tff(reflexivity, axiom, (! [X:$i]: (qmltpeq(X,X)))).
tff(symmetry, axiom, (! [X:$i,Y:$i]: ((qmltpeq(X,Y) => qmltpeq(Y,X))))).
tff(transitivity, axiom, (! [X:$i,Y:$i,Z:$i]: (((qmltpeq(X,Y) & qmltpeq(Y,Z)) => qmltpeq(X,Z))))).
tff(intersection_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq(A,B) => qmltpeq(intersection(A,C),intersection(B,C)))))).
tff(intersection_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: ((qmltpeq(A,B) => qmltpeq(intersection(C,A),intersection(C,B)))))).
tff(empty_substitution_1, axiom, (! [A:$i,B:$i]: (((qmltpeq(A,B) & empty(A)) => empty(B))))).
tff(member_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: (((qmltpeq(A,B) & member(A,C)) => member(B,C))))).
tff(member_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: (((qmltpeq(A,B) & member(C,A)) => member(C,B))))).
tff(not_equal_substitution_1, axiom, (! [A:$i,B:$i,C:$i]: (((qmltpeq(A,B) & not_equal(A,C)) => not_equal(B,C))))).
tff(not_equal_substitution_2, axiom, (! [A:$i,B:$i,C:$i]: (((qmltpeq(A,B) & not_equal(C,A)) => not_equal(C,B))))).
tff(intersection_defn, axiom, (! [B:$i,C:$i,D:$i]: ((member(D,intersection(B,C)) <=> (member(D,B) & member(D,C)))))).
tff(empty_set_defn, axiom, (! [B:$i]: (~ (member(B,empty_set))))).
tff(equal_member_defn, axiom, (! [B:$i,C:$i]: ((qmltpeq(B,C) <=> (! [D:$i]: ((member(D,B) <=> member(D,C)))))))).
tff(not_equal_defn, axiom, (! [B:$i,C:$i]: ((not_equal(B,C) <=> ~ (qmltpeq(B,C)))))).
tff(commutativity_of_intersection, axiom, (! [B:$i,C:$i]: (qmltpeq(intersection(B,C),intersection(C,B))))).
tff(empty_defn, axiom, (! [B:$i]: ((empty(B) <=> (! [C:$i]: (~ (member(C,B)))))))).
tff(prove_th24, conjecture, (! [B:$i,C:$i,D:$i]: (((member(B,C) & member(B,D)) => not_equal(intersection(C,D),empty_set))))).

%%% This output was generated by embedproblem, version 1.7.1 (library version 1.3).
%%% Generated on Thu Apr 28 13:26:27 EDT 2022
%%% using 'modal' embedding, version 1.5.2.
%%% Logic specification used:
%%% tff(k_decreasing_rigid, logic, ($modal) == ([($constants) == ($rigid),($quantification) == ($decreasing),($modalities) == ($modal_system_K)])).

thf(mworld, type, mworld: $tType).
thf(mrel_type, type, mrel: (mworld > (mworld > $o))).
thf(mactual_type, type, mactual: mworld).
thf(mlocal_type, type, mlocal: ((mworld > $o) > $o)).
thf(mlocal_def, definition, (mlocal = (^ [Phi:(mworld > $o)]: ((Phi @ mactual))))).
thf(mnot_type, type, mnot: ((mworld > $o) > (mworld > $o))).
thf(mand_type, type, mand: ((mworld > $o) > ((mworld > $o) > (mworld > $o)))).
thf(mor_type, type, mor: ((mworld > $o) > ((mworld > $o) > (mworld > $o)))).
thf(mimplies_type, type, mimplies: ((mworld > $o) > ((mworld > $o) > (mworld > $o)))).
thf(mequiv_type, type, mequiv: ((mworld > $o) > ((mworld > $o) > (mworld > $o)))).
thf(mnot_def, definition, (mnot = (^ [A:(mworld > $o),W:mworld]: ((~ ((A @ W))))))).
thf(mand_def, definition, (mand = (^ [A:(mworld > $o),B:(mworld > $o),W:mworld]: (((A @ W) & (B @ W)))))).
thf(mor_def, definition, (mor = (^ [A:(mworld > $o),B:(mworld > $o),W:mworld]: (((A @ W) | (B @ W)))))).
thf(mimplies_def, definition, (mimplies = (^ [A:(mworld > $o),B:(mworld > $o),W:mworld]: (((A @ W) => (B @ W)))))).
thf(mequiv_def, definition, (mequiv = (^ [A:(mworld > $o),B:(mworld > $o),W:mworld]: (((A @ W) <=> (B @ W)))))).
thf(mbox_type, type, mbox: ((mworld > $o) > (mworld > $o))).
thf(mbox_def, definition, (mbox = (^ [Phi:(mworld > $o),W:mworld]: ((! [V:mworld]: ((((mrel @ W) @ V) => (Phi @ V)))))))).
thf(mdia_type, type, mdia: ((mworld > $o) > (mworld > $o))).
thf(mdia_def, definition, (mdia = (^ [Phi:(mworld > $o),W:mworld]: ((? [V:mworld]: ((((mrel @ W) @ V) & (Phi @ V)))))))).
thf(eiw_di_type, type, eiw_di: ($i > (mworld > $o))).
thf(eiw_di_nonempty, axiom, (! [W:mworld]: ((? [X:$i]: (((eiw_di @ X) @ W)))))).
thf(eiw_di_decr, axiom, (! [W:mworld,V:mworld,X:$i]: (((((eiw_di @ X) @ W) & ((mrel @ V) @ W)) => ((eiw_di @ X) @ V))))).
thf(mforall_di_type, type, mforall_di: (($i > (mworld > $o)) > (mworld > $o))).
thf(mforall_di_def, definition, (mforall_di = (^ [A:($i > (mworld > $o)),W:mworld]: ((! [X:$i]: ((((eiw_di @ X) @ W) => ((A @ X) @ W)))))))).
thf(mexists_di_type, type, mexists_di: (($i > (mworld > $o)) > (mworld > $o))).
thf(mexists_di_def, definition, (mexists_di = (^ [A:($i > (mworld > $o)),W:mworld]: ((? [X:$i]: ((((eiw_di @ X) @ W) & ((A @ X) @ W)))))))).
thf(qmltpeq_decl, type, qmltpeq: ($i > ($i > (mworld > $o)))).
thf(sorti2_decl, type, sorti2: ($i > (mworld > $o))).
thf(sorti1_decl, type, sorti1: ($i > (mworld > $o))).
thf(op2_decl, type, op2: ($i > ($i > $i))).
thf(op1_decl, type, op1: ($i > ($i > $i))).
thf(h_decl, type, h: ($i > $i)).
thf(j_decl, type, j: ($i > $i)).
thf(reflexivity, axiom, (mlocal @ (mbox @ (mforall_di @ (^ [X:$i]: ((mbox @ ((qmltpeq @ X) @ X)))))))).
thf(symmetry, axiom, (mlocal @ (mbox @ (mforall_di @ (^ [X:$i]: ((mbox @ (mforall_di @ (^ [Y:$i]: ((mbox @ ((mimplies @ (mbox @ ((qmltpeq @ X) @ Y))) @ (mbox @ ((qmltpeq @ Y) @ X)))))))))))))).
thf(transitivity, axiom, (mlocal @ (mbox @ (mforall_di @ (^ [X:$i]: ((mbox @ (mforall_di @ (^ [Y:$i]: ((mbox @ (mforall_di @ (^ [Z:$i]: ((mbox @ ((mimplies @ ((mand @ (mbox @ ((qmltpeq @ X) @ Y))) @ (mbox @ ((qmltpeq @ Y) @ Z)))) @ (mbox @ ((qmltpeq @ X) @ Z)))))))))))))))))).
thf(h_substitution_1, axiom, (mlocal @ (mbox @ (mforall_di @ (^ [A:$i]: ((mbox @ (mforall_di @ (^ [B:$i]: ((mbox @ ((mimplies @ (mbox @ ((qmltpeq @ A) @ B))) @ (mbox @ ((qmltpeq @ (h @ A)) @ (h @ B))))))))))))))).
thf(j_substitution_1, axiom, (mlocal @ (mbox @ (mforall_di @ (^ [A:$i]: ((mbox @ (mforall_di @ (^ [B:$i]: ((mbox @ ((mimplies @ (mbox @ ((qmltpeq @ A) @ B))) @ (mbox @ ((qmltpeq @ (j @ A)) @ (j @ B))))))))))))))).
thf(op1_substitution_1, axiom, (mlocal @ (mbox @ (mforall_di @ (^ [A:$i]: ((mbox @ (mforall_di @ (^ [B:$i]: ((mbox @ (mforall_di @ (^ [C:$i]: ((mbox @ ((mimplies @ (mbox @ ((qmltpeq @ A) @ B))) @ (mbox @ ((qmltpeq @ ((op1 @ A) @ C)) @ ((op1 @ B) @ C))))))))))))))))))).
thf(op1_substitution_2, axiom, (mlocal @ (mbox @ (mforall_di @ (^ [A:$i]: ((mbox @ (mforall_di @ (^ [B:$i]: ((mbox @ (mforall_di @ (^ [C:$i]: ((mbox @ ((mimplies @ (mbox @ ((qmltpeq @ A) @ B))) @ (mbox @ ((qmltpeq @ ((op1 @ C) @ A)) @ ((op1 @ C) @ B))))))))))))))))))).
thf(op2_substitution_1, axiom, (mlocal @ (mbox @ (mforall_di @ (^ [A:$i]: ((mbox @ (mforall_di @ (^ [B:$i]: ((mbox @ (mforall_di @ (^ [C:$i]: ((mbox @ ((mimplies @ (mbox @ ((qmltpeq @ A) @ B))) @ (mbox @ ((qmltpeq @ ((op2 @ A) @ C)) @ ((op2 @ B) @ C))))))))))))))))))).
thf(op2_substitution_2, axiom, (mlocal @ (mbox @ (mforall_di @ (^ [A:$i]: ((mbox @ (mforall_di @ (^ [B:$i]: ((mbox @ (mforall_di @ (^ [C:$i]: ((mbox @ ((mimplies @ (mbox @ ((qmltpeq @ A) @ B))) @ (mbox @ ((qmltpeq @ ((op2 @ C) @ A)) @ ((op2 @ C) @ B))))))))))))))))))).
thf(sorti1_substitution_1, axiom, (mlocal @ (mbox @ (mforall_di @ (^ [A:$i]: ((mbox @ (mforall_di @ (^ [B:$i]: ((mbox @ ((mimplies @ ((mand @ (mbox @ ((qmltpeq @ A) @ B))) @ (mbox @ (sorti1 @ A)))) @ (mbox @ (sorti1 @ B)))))))))))))).
thf(sorti2_substitution_1, axiom, (mlocal @ (mbox @ (mforall_di @ (^ [A:$i]: ((mbox @ (mforall_di @ (^ [B:$i]: ((mbox @ ((mimplies @ ((mand @ (mbox @ ((qmltpeq @ A) @ B))) @ (mbox @ (sorti2 @ A)))) @ (mbox @ (sorti2 @ B)))))))))))))).
thf(ax1, axiom, (mlocal @ (mbox @ (mforall_di @ (^ [U:$i]: ((mbox @ ((mimplies @ (mbox @ (sorti1 @ U))) @ (mbox @ (mforall_di @ (^ [V:$i]: ((mbox @ ((mimplies @ (mbox @ (sorti1 @ V))) @ (mbox @ (sorti1 @ ((op1 @ U) @ V))))))))))))))))).
thf(ax2, axiom, (mlocal @ (mbox @ (mforall_di @ (^ [U:$i]: ((mbox @ ((mimplies @ (mbox @ (sorti2 @ U))) @ (mbox @ (mforall_di @ (^ [V:$i]: ((mbox @ ((mimplies @ (mbox @ (sorti2 @ V))) @ (mbox @ (sorti2 @ ((op2 @ U) @ V))))))))))))))))).
thf(ax3, axiom, (mlocal @ (mexists_di @ (^ [U:$i]: (((mand @ (mbox @ (sorti1 @ U))) @ (mbox @ (mforall_di @ (^ [V:$i]: ((mbox @ ((mimplies @ (mbox @ (sorti1 @ V))) @ (mbox @ ((qmltpeq @ ((op1 @ V) @ V)) @ U)))))))))))))).
thf(ax4, axiom, (mlocal @ (mbox @ (mnot @ (mexists_di @ (^ [U:$i]: (((mand @ (mbox @ (sorti2 @ U))) @ (mbox @ (mforall_di @ (^ [V:$i]: ((mbox @ ((mimplies @ (mbox @ (sorti2 @ V))) @ (mbox @ ((qmltpeq @ ((op2 @ V) @ V)) @ U)))))))))))))))).
thf(co1, conjecture, (mlocal @ (mbox @ ((mimplies @ ((mand @ (mbox @ (mforall_di @ (^ [U:$i]: ((mbox @ ((mimplies @ (mbox @ (sorti1 @ U))) @ (mbox @ (sorti2 @ (h @ U)))))))))) @ (mbox @ (mforall_di @ (^ [V:$i]: ((mbox @ ((mimplies @ (mbox @ (sorti2 @ V))) @ (mbox @ (sorti1 @ (j @ V))))))))))) @ (mbox @ (mnot @ ((mand @ (mbox @ (mforall_di @ (^ [W:$i]: ((mbox @ ((mimplies @ (mbox @ (sorti1 @ W))) @ (mbox @ (mforall_di @ (^ [X:$i]: ((mbox @ ((mimplies @ (mbox @ (sorti1 @ X))) @ (mbox @ ((qmltpeq @ (h @ ((op1 @ W) @ X))) @ ((op2 @ (h @ W)) @ (h @ X))))))))))))))))) @ ((mand @ (mbox @ (mforall_di @ (^ [Y:$i]: ((mbox @ ((mimplies @ (mbox @ (sorti2 @ Y))) @ (mbox @ (mforall_di @ (^ [Z:$i]: ((mbox @ ((mimplies @ (mbox @ (sorti2 @ Z))) @ (mbox @ ((qmltpeq @ (j @ ((op2 @ Y) @ Z))) @ ((op1 @ (j @ Y)) @ (j @ Z))))))))))))))))) @ ((mand @ (mbox @ (mforall_di @ (^ [X1:$i]: ((mbox @ ((mimplies @ (mbox @ (sorti2 @ X1))) @ (mbox @ ((qmltpeq @ (h @ (j @ X1))) @ X1))))))))) @ (mbox @ (mforall_di @ (^ [X2:$i]: ((mbox @ ((mimplies @ (mbox @ (sorti1 @ X2))) @ (mbox @ ((qmltpeq @ (j @ (h @ X2))) @ X2))))))))))))))))).

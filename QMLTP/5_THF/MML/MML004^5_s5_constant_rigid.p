%------------------------------------------------------------------------------
% File     : NTF001^1 : TPTP v8.1.0. Released v8.1.0.
% Domain   : TBA
% Problem  : TBA
% Version  : TBA
% English  : TBA

% Refs     : TBA
% Source   : [TPTP]
% Names    :

% Status   : Theorem
% Rating   : ? b8.1.0
% Syntax   : Number of formulae    :   29 (  14 unt;  14 typ;  14 def)
% SPC      : TH0_THM_EQU_NAR

% Comments : This output was generated by embedproblem, version 1.7.1 (library
%            version 1.3). Generated on Thu Apr 28 13:18:18 EDT 2022 using
%            'modal' embedding, version 1.5.2. Logic specification used:
%            $modal == [$constants == $rigid,$quantification == $constant,
%            $modalities == $modal_system_S5].
%------------------------------------------------------------------------------
thf(mworld,type,
    mworld: $tType ).

thf(mindex,type,
    mindex: $tType ).

thf(mrel_type,type,
    mrel: mindex > mworld > mworld > $o ).

thf('#always_type',type,
    '#always': mindex ).

thf('#shoot_type',type,
    '#shoot': mindex ).

thf('#load_type',type,
    '#load': mindex ).

thf(mactual_type,type,
    mactual: mworld ).

thf(mlocal_type,type,
    mlocal: ( mworld > $o ) > $o ).

thf(mlocal_def,definition,
    ( mlocal
    = ( ^ [Phi: mworld > $o] : ( Phi @ mactual ) ) ) ).

thf(mnot_type,type,
    mnot: ( mworld > $o ) > mworld > $o ).

thf(mand_type,type,
    mand: ( mworld > $o ) > ( mworld > $o ) > mworld > $o ).

thf(mor_type,type,
    mor: ( mworld > $o ) > ( mworld > $o ) > mworld > $o ).

thf(mimplies_type,type,
    mimplies: ( mworld > $o ) > ( mworld > $o ) > mworld > $o ).

thf(mequiv_type,type,
    mequiv: ( mworld > $o ) > ( mworld > $o ) > mworld > $o ).

thf(mnot_def,definition,
    ( mnot
    = ( ^ [A: mworld > $o,W: mworld] :
          ~ ( A @ W ) ) ) ).

thf(mand_def,definition,
    ( mand
    = ( ^ [A: mworld > $o,B: mworld > $o,W: mworld] :
          ( ( A @ W )
          & ( B @ W ) ) ) ) ).

thf(mor_def,definition,
    ( mor
    = ( ^ [A: mworld > $o,B: mworld > $o,W: mworld] :
          ( ( A @ W )
          | ( B @ W ) ) ) ) ).

thf(mimplies_def,definition,
    ( mimplies
    = ( ^ [A: mworld > $o,B: mworld > $o,W: mworld] :
          ( ( A @ W )
         => ( B @ W ) ) ) ) ).

thf(mequiv_def,definition,
    ( mequiv
    = ( ^ [A: mworld > $o,B: mworld > $o,W: mworld] :
          ( ( A @ W )
        <=> ( B @ W ) ) ) ) ).

thf(mbox_type,type,
    mbox: mindex > ( mworld > $o ) > mworld > $o ).

thf(mbox_def,definition,
    ( mbox
    = ( ^ [R: mindex,Phi: mworld > $o,W: mworld] :
        ! [V: mworld] :
          ( ( mrel @ R @ W @ V )
         => ( Phi @ V ) ) ) ) ).

thf(mdia_type,type,
    mdia: mindex > ( mworld > $o ) > mworld > $o ).

thf(mdia_def,definition,
    ( mdia
    = ( ^ [R: mindex,Phi: mworld > $o,W: mworld] :
        ? [V: mworld] :
          ( ( mrel @ R @ W @ V )
          & ( Phi @ V ) ) ) ) ).

thf('mrel_#always_reflexive',axiom,
    ! [W: mworld] : ( mrel @ '#always' @ W @ W ) ).

thf('mrel_#always_euclidean',axiom,
    ! [W: mworld,V: mworld,U: mworld] :
      ( ( ( mrel @ '#always' @ W @ U )
        & ( mrel @ '#always' @ W @ V ) )
     => ( mrel @ '#always' @ U @ V ) ) ).

thf('mrel_#shoot_reflexive',axiom,
    ! [W: mworld] : ( mrel @ '#shoot' @ W @ W ) ).

thf('mrel_#shoot_euclidean',axiom,
    ! [W: mworld,V: mworld,U: mworld] :
      ( ( ( mrel @ '#shoot' @ W @ U )
        & ( mrel @ '#shoot' @ W @ V ) )
     => ( mrel @ '#shoot' @ U @ V ) ) ).

thf('mrel_#load_reflexive',axiom,
    ! [W: mworld] : ( mrel @ '#load' @ W @ W ) ).

thf('mrel_#load_euclidean',axiom,
    ! [W: mworld,V: mworld,U: mworld] :
      ( ( ( mrel @ '#load' @ W @ U )
        & ( mrel @ '#load' @ W @ V ) )
     => ( mrel @ '#load' @ U @ V ) ) ).

thf(alive_decl,type,
    alive: mworld > $o ).

thf(loaded_decl,type,
    loaded: mworld > $o ).

thf(i_always_load_1,axiom,
    mlocal @ ( mimplies @ ( mbox @ '#always' @ loaded ) @ ( mbox @ '#load' @ loaded ) ) ).

thf(i_always_load_2,axiom,
    mlocal @ ( mimplies @ ( mbox @ '#always' @ ( mnot @ loaded ) ) @ ( mbox @ '#load' @ ( mnot @ loaded ) ) ) ).

thf(i_always_alive_1,axiom,
    mlocal @ ( mimplies @ ( mbox @ '#always' @ alive ) @ ( mbox @ '#load' @ alive ) ) ).

thf(i_always_alive_2,axiom,
    mlocal @ ( mimplies @ ( mbox @ '#always' @ ( mnot @ alive ) ) @ ( mbox @ '#load' @ ( mnot @ alive ) ) ) ).

thf(i_always_load_1_0,axiom,
    mlocal @ ( mimplies @ ( mbox @ '#always' @ loaded ) @ ( mbox @ '#shoot' @ loaded ) ) ).

thf(i_always_load_2_0,axiom,
    mlocal @ ( mimplies @ ( mbox @ '#always' @ ( mnot @ loaded ) ) @ ( mbox @ '#shoot' @ ( mnot @ loaded ) ) ) ).

thf(i_always_alive_1_0,axiom,
    mlocal @ ( mimplies @ ( mbox @ '#always' @ alive ) @ ( mbox @ '#shoot' @ alive ) ) ).

thf(i_always_alive_2_0,axiom,
    mlocal @ ( mimplies @ ( mbox @ '#always' @ ( mnot @ alive ) ) @ ( mbox @ '#shoot' @ ( mnot @ alive ) ) ) ).

thf(axiom_1,axiom,
    mlocal @ ( mbox @ '#always' @ ( mbox @ '#load' @ loaded ) ) ).

thf(axiom_2,axiom,
    mlocal @ ( mbox @ '#always' @ ( mimplies @ loaded @ ( mbox @ '#shoot' @ ( mnot @ alive ) ) ) ) ).

thf(conj,conjecture,
    mlocal @ ( mbox @ '#load' @ ( mbox @ '#shoot' @ ( mnot @ alive ) ) ) ).

%------------------------------------------------------------------------------

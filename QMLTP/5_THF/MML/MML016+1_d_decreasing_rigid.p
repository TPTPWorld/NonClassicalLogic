%%% This output was generated by embedproblem, version 1.7.1 (library version 1.3).
%%% Generated on Thu Apr 28 15:58:42 EDT 2022
%%% using 'modal' embedding, version 1.5.2.
%%% Logic specification used:
%%% tff(d_decreasing_rigid, logic, ($modal) == ([($constants) == ($rigid),($quantification) == ($decreasing),($modalities) == ($modal_system_D)])).

thf(mworld, type, mworld: $tType).
thf(mindex, type, mindex: $tType).
thf(mrel_type, type, mrel: (mindex > (mworld > (mworld > $o)))).
thf('#b_u_type', type, '#b_u': mindex).
thf('#b_s_type', type, '#b_s': mindex).
thf(mactual_type, type, mactual: mworld).
thf(mlocal_type, type, mlocal: ((mworld > $o) > $o)).
thf(mlocal_def, definition, (mlocal = (^ [Phi:(mworld > $o)]: ((Phi @ mactual))))).
thf(mnot_type, type, mnot: ((mworld > $o) > (mworld > $o))).
thf(mand_type, type, mand: ((mworld > $o) > ((mworld > $o) > (mworld > $o)))).
thf(mor_type, type, mor: ((mworld > $o) > ((mworld > $o) > (mworld > $o)))).
thf(mimplies_type, type, mimplies: ((mworld > $o) > ((mworld > $o) > (mworld > $o)))).
thf(mequiv_type, type, mequiv: ((mworld > $o) > ((mworld > $o) > (mworld > $o)))).
thf(mnot_def, definition, (mnot = (^ [A:(mworld > $o),W:mworld]: ((~ ((A @ W))))))).
thf(mand_def, definition, (mand = (^ [A:(mworld > $o),B:(mworld > $o),W:mworld]: (((A @ W) & (B @ W)))))).
thf(mor_def, definition, (mor = (^ [A:(mworld > $o),B:(mworld > $o),W:mworld]: (((A @ W) | (B @ W)))))).
thf(mimplies_def, definition, (mimplies = (^ [A:(mworld > $o),B:(mworld > $o),W:mworld]: (((A @ W) => (B @ W)))))).
thf(mequiv_def, definition, (mequiv = (^ [A:(mworld > $o),B:(mworld > $o),W:mworld]: (((A @ W) <=> (B @ W)))))).
thf(mbox_type, type, mbox: (mindex > ((mworld > $o) > (mworld > $o)))).
thf(mbox_def, definition, (mbox = (^ [R:mindex,Phi:(mworld > $o),W:mworld]: ((! [V:mworld]: (((((mrel @ R) @ W) @ V) => (Phi @ V)))))))).
thf(mdia_type, type, mdia: (mindex > ((mworld > $o) > (mworld > $o)))).
thf(mdia_def, definition, (mdia = (^ [R:mindex,Phi:(mworld > $o),W:mworld]: ((? [V:mworld]: (((((mrel @ R) @ W) @ V) & (Phi @ V)))))))).
thf('mrel_#b_u_serial', axiom, (! [W:mworld]: ((? [V:mworld]: ((((mrel @ '#b_u') @ W) @ V)))))).
thf('mrel_#b_s_serial', axiom, (! [W:mworld]: ((? [V:mworld]: ((((mrel @ '#b_s') @ W) @ V)))))).
thf(seventy_decl, type, seventy: $i).
thf(ninetyfive_decl, type, ninetyfive: $i).
thf(second_decl, type, second: $i).
thf(paris_decl, type, paris: $i).
thf(first_decl, type, first: $i).
thf(price_decl, type, price: ($i > (mworld > $o))).
thf(dest_decl, type, dest: ($i > (mworld > $o))).
thf(class_decl, type, class: ($i > (mworld > $o))).
thf(axiom_1, axiom, (mlocal @ ((mbox @ '#b_s') @ ((mimplies @ ((mand @ (dest @ paris)) @ (class @ first))) @ (price @ ninetyfive))))).
thf(axiom_2, axiom, (mlocal @ ((mbox @ '#b_s') @ ((mimplies @ ((mand @ (dest @ paris)) @ (class @ second))) @ (price @ seventy))))).
thf(axiom_3_s, axiom, (mlocal @ ((mbox @ '#b_s') @ (mnot @ ((mand @ (class @ first)) @ (class @ second)))))).
thf(axiom_3_u, axiom, (mlocal @ ((mbox @ '#b_u') @ (mnot @ ((mand @ (class @ first)) @ (class @ second)))))).
thf(axiom_4_s, axiom, (mlocal @ ((mbox @ '#b_s') @ (mnot @ ((mand @ (price @ seventy)) @ (price @ ninetyfive)))))).
thf(axiom_4_u, axiom, (mlocal @ ((mbox @ '#b_u') @ (mnot @ ((mand @ (price @ seventy)) @ (price @ ninetyfive)))))).
thf(axiom_5, axiom, (mlocal @ ((mbox @ '#b_s') @ ((mand @ (dest @ paris)) @ (class @ second))))).
thf(con, conjecture, (mlocal @ ((mbox @ '#b_s') @ (price @ seventy)))).

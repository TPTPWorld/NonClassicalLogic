%------------------------------------------------------------------------------
% File     : NTF001^1 : TPTP v8.1.0. Released v8.1.0.
% Domain   : TBA
% Problem  : Bank example
% Version  : [BP13] axioms.
% English  : 

% Refs     : [Sto97] Stone (1997), Applying Theories of Communicative Actio
%          : [RO12]  Raths & Otten (2012), The QMLTP Problem Library for Fi
%          : [BP13]  Benzmueller & Paulson (2013), Quantified Multimodal Lo
%          : [Ste22] Steen (2022), An Extensible Logic Embedding Tool for L
% Source   : [TPTP]
% Names    : MML017+1 [QMLTP]

% Status   : Unknown 
% Rating   : ? v8.1.0
% Syntax   : Number of formulae    :   63 (  14 unt;  32 typ;  10 def)
%            Number of atoms       :  329 (  10 equ;   0 cnn)
%            Maximal formula atoms :   87 (  10 avg)
%            Number of connectives :  542 (   1   ~;   1   |;   6   &; 527   @)
%                                         (   1 <=>;   6  =>;   0  <=;   0 <~>)
%            Maximal formula depth :   21 (   9 avg)
%            Number of types       :    4 (   2 usr)
%            Number of type conns  :   89 (  89   >;   0   *;   0   +;   0  <<)
%            Number of symbols     :   31 (  30 usr;   6 con; 0-3 aty)
%            Number of variables   :   73 (  55   ^  15   !;   3   ?;  73   :)
% SPC      : TH0_THM_EQU_NAR

% Comments : This output was generated by embedproblem, version 1.7.1 (library
%            version 1.3). Generated on Thu Apr 28 13:18:18 EDT 2022 using
%            'modal' embedding, version 1.5.2. Logic specification used:
%            $modal == [$constants == $rigid,$quantification == $varying,
%            $modalities == $modal_system_S5].
%------------------------------------------------------------------------------
thf(mworld,type,
    mworld: $tType ).

thf(mindex,type,
    mindex: $tType ).

thf(mrel_type,type,
    mrel: mindex > mworld > mworld > $o ).

thf('#s_type',type,
    '#s': mindex ).

thf('#a_type',type,
    '#a': mindex ).

thf('#bank_type',type,
    '#bank': mindex ).

thf(mactual_type,type,
    mactual: mworld ).

thf(mlocal_type,type,
    mlocal: ( mworld > $o ) > $o ).

thf(mlocal_def,definition,
    ( mlocal
    = ( ^ [Phi: mworld > $o] : ( Phi @ mactual ) ) ) ).

thf(mnot_type,type,
    mnot: ( mworld > $o ) > mworld > $o ).

thf(mand_type,type,
    mand: ( mworld > $o ) > ( mworld > $o ) > mworld > $o ).

thf(mor_type,type,
    mor: ( mworld > $o ) > ( mworld > $o ) > mworld > $o ).

thf(mimplies_type,type,
    mimplies: ( mworld > $o ) > ( mworld > $o ) > mworld > $o ).

thf(mequiv_type,type,
    mequiv: ( mworld > $o ) > ( mworld > $o ) > mworld > $o ).

thf(mnot_def,definition,
    ( mnot
    = ( ^ [A: mworld > $o,W: mworld] :
          ~ ( A @ W ) ) ) ).

thf(mand_def,definition,
    ( mand
    = ( ^ [A: mworld > $o,B: mworld > $o,W: mworld] :
          ( ( A @ W )
          & ( B @ W ) ) ) ) ).

thf(mor_def,definition,
    ( mor
    = ( ^ [A: mworld > $o,B: mworld > $o,W: mworld] :
          ( ( A @ W )
          | ( B @ W ) ) ) ) ).

thf(mimplies_def,definition,
    ( mimplies
    = ( ^ [A: mworld > $o,B: mworld > $o,W: mworld] :
          ( ( A @ W )
         => ( B @ W ) ) ) ) ).

thf(mequiv_def,definition,
    ( mequiv
    = ( ^ [A: mworld > $o,B: mworld > $o,W: mworld] :
          ( ( A @ W )
        <=> ( B @ W ) ) ) ) ).

thf(mbox_type,type,
    mbox: mindex > ( mworld > $o ) > mworld > $o ).

thf(mbox_def,definition,
    ( mbox
    = ( ^ [R: mindex,Phi: mworld > $o,W: mworld] :
        ! [V: mworld] :
          ( ( mrel @ R @ W @ V )
         => ( Phi @ V ) ) ) ) ).

thf(mdia_type,type,
    mdia: mindex > ( mworld > $o ) > mworld > $o ).

thf(mdia_def,definition,
    ( mdia
    = ( ^ [R: mindex,Phi: mworld > $o,W: mworld] :
        ? [V: mworld] :
          ( ( mrel @ R @ W @ V )
          & ( Phi @ V ) ) ) ) ).

thf('mrel_#s_reflexive',axiom,
    ! [W: mworld] : ( mrel @ '#s' @ W @ W ) ).

thf('mrel_#s_euclidean',axiom,
    ! [W: mworld,V: mworld,U: mworld] :
      ( ( ( mrel @ '#s' @ W @ U )
        & ( mrel @ '#s' @ W @ V ) )
     => ( mrel @ '#s' @ U @ V ) ) ).

thf('mrel_#a_reflexive',axiom,
    ! [W: mworld] : ( mrel @ '#a' @ W @ W ) ).

thf('mrel_#a_euclidean',axiom,
    ! [W: mworld,V: mworld,U: mworld] :
      ( ( ( mrel @ '#a' @ W @ U )
        & ( mrel @ '#a' @ W @ V ) )
     => ( mrel @ '#a' @ U @ V ) ) ).

thf('mrel_#bank_reflexive',axiom,
    ! [W: mworld] : ( mrel @ '#bank' @ W @ W ) ).

thf('mrel_#bank_euclidean',axiom,
    ! [W: mworld,V: mworld,U: mworld] :
      ( ( ( mrel @ '#bank' @ W @ U )
        & ( mrel @ '#bank' @ W @ V ) )
     => ( mrel @ '#bank' @ U @ V ) ) ).

thf(eiw_di_type,type,
    eiw_di: $i > mworld > $o ).

thf(eiw_di_nonempty,axiom,
    ! [W: mworld] :
    ? [X: $i] : ( eiw_di @ X @ W ) ).

thf(mforall_di_type,type,
    mforall_di: ( $i > mworld > $o ) > mworld > $o ).

thf(mforall_di_def,definition,
    ( mforall_di
    = ( ^ [A: $i > mworld > $o,W: mworld] :
        ! [X: $i] :
          ( ( eiw_di @ X @ W )
         => ( A @ X @ W ) ) ) ) ).

thf(mexists_di_type,type,
    mexists_di: ( $i > mworld > $o ) > mworld > $o ).

thf(mexists_di_def,definition,
    ( mexists_di
    = ( ^ [A: $i > mworld > $o,W: mworld] :
        ? [X: $i] :
          ( ( eiw_di @ X @ W )
          & ( A @ X @ W ) ) ) ) ).

thf(answerable_decl,type,
    answerable: mworld > $o ).

thf(fortytwo_decl,type,
    fortytwo: $i ).

thf(s_decl,type,
    s: $i ).

thf(number_decl,type,
    number: $i > $i > mworld > $o ).

thf(code_decl,type,
    code: $i > mworld > $o ).

thf(belong_decl,type,
    belong: $i > $i > mworld > $o ).

thf(balance_decl,type,
    balance: $i > $i > mworld > $o ).

thf(belongs_decl,type,
    belongs: $i > $i > mworld > $o ).

thf(identifiable_decl,type,
    identifiable: $i > mworld > $o ).

thf(value_decl,type,
    value: $i > $i > mworld > $o ).

thf(done_decl,type,
    done: $i > mworld > $o ).

thf(account_decl,type,
    account: $i > mworld > $o ).

thf(u0_decl,type,
    u0: $i > $i ).

thf(u1_decl,type,
    u1: $i > $i > $i ).

thf(axiom_1,axiom,
    ( mlocal
    @ ( mbox @ '#bank'
      @ ( mforall_di
        @ ^ [C: $i] :
            ( mimplies @ ( code @ C )
            @ ( mexists_di
              @ ^ [A: $i] : ( mbox @ '#bank' @ ( mand @ ( account @ A ) @ ( mand @ ( number @ A @ C ) @ ( identifiable @ A ) ) ) ) ) ) ) ) ) ).

thf(axiom_2,axiom,
    mlocal @ ( mbox @ '#bank' @ ( code @ fortytwo ) ) ).

thf(axiom_3,axiom,
    ( mlocal
    @ ( mbox @ '#bank'
      @ ( mforall_di
        @ ^ [A: $i] :
            ( mexists_di
            @ ^ [B: $i] : ( mbox @ '#bank' @ ( mimplies @ ( account @ A ) @ ( balance @ A @ B ) ) ) ) ) ) ) ).

thf(axiom_4,axiom,
    ( mlocal
    @ ( mbox @ '#bank'
      @ ( mforall_di
        @ ^ [A: $i] :
            ( mforall_di
            @ ^ [B: $i] : ( mimplies @ ( mand @ ( balance @ A @ B ) @ ( identifiable @ A ) ) @ ( identifiable @ B ) ) ) ) ) ) ).

thf(axiom_5,axiom,
    ( mlocal
    @ ( mbox @ '#bank'
      @ ( mforall_di
        @ ^ [A: $i] :
            ( mforall_di
            @ ^ [B: $i] :
                ( mimplies @ ( balance @ A @ B )
                @ ( mexists_di
                  @ ^ [V: $i] : ( mbox @ '#a' @ ( value @ B @ V ) ) ) ) ) ) ) ) ).

thf(axiom_phi0_aa,axiom,
    ( mlocal
    @ ( mbox @ '#a'
      @ ( mforall_di
        @ ^ [A: $i] : ( mimplies @ ( mand @ ( mbox @ '#a' @ ( mand @ ( account @ A ) @ ( mand @ ( number @ A @ fortytwo ) @ ( identifiable @ A ) ) ) ) @ ( done @ ( u0 @ A ) ) ) @ ( mand @ ( mbox @ '#a' @ ( belongs @ A @ s ) ) @ ( mbox @ '#s' @ ( belong @ A @ s ) ) ) ) ) ) ) ).

thf(axiom_phi0_as,axiom,
    ( mlocal
    @ ( mbox @ '#a'
      @ ( mforall_di
        @ ^ [A: $i] : ( mimplies @ ( mand @ ( mbox @ '#s' @ ( mand @ ( account @ A ) @ ( mand @ ( number @ A @ fortytwo ) @ ( identifiable @ A ) ) ) ) @ ( done @ ( u0 @ A ) ) ) @ ( mand @ ( mbox @ '#a' @ ( belongs @ A @ s ) ) @ ( mbox @ '#s' @ ( belong @ A @ s ) ) ) ) ) ) ) ).

thf(axiom_phi0_sa,axiom,
    ( mlocal
    @ ( mbox @ '#s'
      @ ( mforall_di
        @ ^ [A: $i] : ( mimplies @ ( mand @ ( mbox @ '#a' @ ( mand @ ( account @ A ) @ ( mand @ ( number @ A @ fortytwo ) @ ( identifiable @ A ) ) ) ) @ ( done @ ( u0 @ A ) ) ) @ ( mand @ ( mbox @ '#a' @ ( belongs @ A @ s ) ) @ ( mbox @ '#s' @ ( belong @ A @ s ) ) ) ) ) ) ) ).

thf(axiom_phi0_ss,axiom,
    ( mlocal
    @ ( mbox @ '#s'
      @ ( mforall_di
        @ ^ [A: $i] : ( mimplies @ ( mand @ ( mbox @ '#a' @ ( mand @ ( account @ A ) @ ( mand @ ( number @ A @ fortytwo ) @ ( identifiable @ A ) ) ) ) @ ( done @ ( u0 @ A ) ) ) @ ( mand @ ( mbox @ '#a' @ ( belongs @ A @ s ) ) @ ( mbox @ '#s' @ ( belong @ A @ s ) ) ) ) ) ) ) ).

thf(axiom_phi1_aa,axiom,
    ( mlocal
    @ ( mbox @ '#a'
      @ ( mforall_di
        @ ^ [A: $i] :
            ( mforall_di
            @ ^ [B: $i] :
                ( mimplies
                @ ( mbox @ '#a'
                  @ ( mand
                    @ ( mand @ ( account @ A )
                      @ ( mand @ ( belongs @ A @ s )
                        @ ( mand @ ( balance @ A @ B )
                          @ ( mand @ ( identifiable @ B )
                            @ ( mexists_di
                              @ ^ [V: $i] : ( mbox @ '#a' @ ( value @ B @ V ) ) ) ) ) ) )
                    @ ( done @ ( u1 @ A @ B ) ) ) )
                @ ( mand @ ( mbox @ '#a' @ answerable ) @ ( mbox @ '#s' @ answerable ) ) ) ) ) ) ) ).

thf(axiom_phi1_as,axiom,
    ( mlocal
    @ ( mbox @ '#a'
      @ ( mforall_di
        @ ^ [A: $i] :
            ( mforall_di
            @ ^ [B: $i] :
                ( mimplies
                @ ( mbox @ '#s'
                  @ ( mand
                    @ ( mand @ ( account @ A )
                      @ ( mand @ ( belongs @ A @ s )
                        @ ( mand @ ( balance @ A @ B )
                          @ ( mand @ ( identifiable @ B )
                            @ ( mexists_di
                              @ ^ [V: $i] : ( mbox @ '#a' @ ( value @ B @ V ) ) ) ) ) ) )
                    @ ( done @ ( u1 @ A @ B ) ) ) )
                @ ( mand @ ( mbox @ '#a' @ answerable ) @ ( mbox @ '#s' @ answerable ) ) ) ) ) ) ) ).

thf(axiom_phi1_sa,axiom,
    ( mlocal
    @ ( mbox @ '#s'
      @ ( mforall_di
        @ ^ [A: $i] :
            ( mforall_di
            @ ^ [B: $i] :
                ( mimplies
                @ ( mbox @ '#a'
                  @ ( mand
                    @ ( mand @ ( account @ A )
                      @ ( mand @ ( belongs @ A @ s )
                        @ ( mand @ ( balance @ A @ B )
                          @ ( mand @ ( identifiable @ B )
                            @ ( mexists_di
                              @ ^ [V: $i] : ( mbox @ '#a' @ ( value @ B @ V ) ) ) ) ) ) )
                    @ ( done @ ( u1 @ A @ B ) ) ) )
                @ ( mand @ ( mbox @ '#a' @ answerable ) @ ( mbox @ '#s' @ answerable ) ) ) ) ) ) ) ).

thf(axiom_phi1_ss,axiom,
    ( mlocal
    @ ( mbox @ '#s'
      @ ( mforall_di
        @ ^ [A: $i] :
            ( mforall_di
            @ ^ [B: $i] :
                ( mimplies
                @ ( mbox @ '#s'
                  @ ( mand
                    @ ( mand @ ( account @ A )
                      @ ( mand @ ( belongs @ A @ s )
                        @ ( mand @ ( balance @ A @ B )
                          @ ( mand @ ( identifiable @ B )
                            @ ( mexists_di
                              @ ^ [V: $i] : ( mbox @ '#a' @ ( value @ B @ V ) ) ) ) ) ) )
                    @ ( done @ ( u1 @ A @ B ) ) ) )
                @ ( mand @ ( mbox @ '#a' @ answerable ) @ ( mbox @ '#s' @ answerable ) ) ) ) ) ) ) ).

thf(con,conjecture,
    ( mlocal
    @ ( mexists_di
      @ ^ [U0: $i] :
          ( mand
          @ ( mbox @ '#a'
            @ ( mimplies @ ( done @ U0 )
              @ ( mand
                @ ( mbox @ '#a'
                  @ ( mexists_di
                    @ ^ [U1: $i] : ( mand @ ( mbox @ '#a' @ ( mimplies @ ( done @ U1 ) @ ( mand @ ( mbox @ '#a' @ answerable ) @ ( mbox @ '#s' @ answerable ) ) ) ) @ ( mbox @ '#s' @ ( mimplies @ ( done @ U1 ) @ ( mand @ ( mbox @ '#a' @ answerable ) @ ( mbox @ '#s' @ answerable ) ) ) ) ) ) )
                @ ( mbox @ '#s'
                  @ ( mexists_di
                    @ ^ [U1: $i] : ( mand @ ( mbox @ '#a' @ ( mimplies @ ( done @ U1 ) @ ( mand @ ( mbox @ '#a' @ answerable ) @ ( mbox @ '#s' @ answerable ) ) ) ) @ ( mbox @ '#s' @ ( mimplies @ ( done @ U1 ) @ ( mand @ ( mbox @ '#a' @ answerable ) @ ( mbox @ '#s' @ answerable ) ) ) ) ) ) ) ) ) )
          @ ( mbox @ '#s'
            @ ( mimplies @ ( done @ U0 )
              @ ( mand
                @ ( mbox @ '#a'
                  @ ( mexists_di
                    @ ^ [U1: $i] : ( mand @ ( mbox @ '#a' @ ( mimplies @ ( done @ U1 ) @ ( mand @ ( mbox @ '#a' @ answerable ) @ ( mbox @ '#s' @ answerable ) ) ) ) @ ( mbox @ '#s' @ ( mimplies @ ( done @ U1 ) @ ( mand @ ( mbox @ '#a' @ answerable ) @ ( mbox @ '#s' @ answerable ) ) ) ) ) ) )
                @ ( mbox @ '#s'
                  @ ( mexists_di
                    @ ^ [U1: $i] : ( mand @ ( mbox @ '#a' @ ( mimplies @ ( done @ U1 ) @ ( mand @ ( mbox @ '#a' @ answerable ) @ ( mbox @ '#s' @ answerable ) ) ) ) @ ( mbox @ '#s' @ ( mimplies @ ( done @ U1 ) @ ( mand @ ( mbox @ '#a' @ answerable ) @ ( mbox @ '#s' @ answerable ) ) ) ) ) ) ) ) ) ) ) ) ) ).

%------------------------------------------------------------------------------

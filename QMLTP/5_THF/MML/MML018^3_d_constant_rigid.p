%%% This output was generated by embedproblem, version 1.7.1 (library version 1.3).
%%% Generated on Thu Apr 28 15:59:46 EDT 2022
%%% using 'modal' embedding, version 1.5.2.
%%% Logic specification used:
%%% tff(d_constant_rigid, logic, ($modal) == ([($constants) == ($rigid),($quantification) == ($constant),($modalities) == ($modal_system_D)])).

thf(mworld, type, mworld: $tType).
thf(mindex, type, mindex: $tType).
thf(mrel_type, type, mrel: (mindex > (mworld > (mworld > $o)))).
thf('#cr_type', type, '#cr': mindex).
thf('#t_type', type, '#t': mindex).
thf('#bank_type', type, '#bank': mindex).
thf(mactual_type, type, mactual: mworld).
thf(mlocal_type, type, mlocal: ((mworld > $o) > $o)).
thf(mlocal_def, definition, (mlocal = (^ [Phi:(mworld > $o)]: ((Phi @ mactual))))).
thf(mnot_type, type, mnot: ((mworld > $o) > (mworld > $o))).
thf(mand_type, type, mand: ((mworld > $o) > ((mworld > $o) > (mworld > $o)))).
thf(mor_type, type, mor: ((mworld > $o) > ((mworld > $o) > (mworld > $o)))).
thf(mimplies_type, type, mimplies: ((mworld > $o) > ((mworld > $o) > (mworld > $o)))).
thf(mequiv_type, type, mequiv: ((mworld > $o) > ((mworld > $o) > (mworld > $o)))).
thf(mnot_def, definition, (mnot = (^ [A:(mworld > $o),W:mworld]: ((~ ((A @ W))))))).
thf(mand_def, definition, (mand = (^ [A:(mworld > $o),B:(mworld > $o),W:mworld]: (((A @ W) & (B @ W)))))).
thf(mor_def, definition, (mor = (^ [A:(mworld > $o),B:(mworld > $o),W:mworld]: (((A @ W) | (B @ W)))))).
thf(mimplies_def, definition, (mimplies = (^ [A:(mworld > $o),B:(mworld > $o),W:mworld]: (((A @ W) => (B @ W)))))).
thf(mequiv_def, definition, (mequiv = (^ [A:(mworld > $o),B:(mworld > $o),W:mworld]: (((A @ W) <=> (B @ W)))))).
thf(mbox_type, type, mbox: (mindex > ((mworld > $o) > (mworld > $o)))).
thf(mbox_def, definition, (mbox = (^ [R:mindex,Phi:(mworld > $o),W:mworld]: ((! [V:mworld]: (((((mrel @ R) @ W) @ V) => (Phi @ V)))))))).
thf(mdia_type, type, mdia: (mindex > ((mworld > $o) > (mworld > $o)))).
thf(mdia_def, definition, (mdia = (^ [R:mindex,Phi:(mworld > $o),W:mworld]: ((? [V:mworld]: (((((mrel @ R) @ W) @ V) & (Phi @ V)))))))).
thf('mrel_#cr_serial', axiom, (! [W:mworld]: ((? [V:mworld]: ((((mrel @ '#cr') @ W) @ V)))))).
thf('mrel_#t_serial', axiom, (! [W:mworld]: ((? [V:mworld]: ((((mrel @ '#t') @ W) @ V)))))).
thf('mrel_#bank_serial', axiom, (! [W:mworld]: ((? [V:mworld]: ((((mrel @ '#bank') @ W) @ V)))))).
thf(mforall_di_type, type, mforall_di: (($i > (mworld > $o)) > (mworld > $o))).
thf(mforall_di_def, definition, (mforall_di = (^ [A:($i > (mworld > $o)),W:mworld]: ((! [X:$i]: (((A @ X) @ W))))))).
thf(mexists_di_type, type, mexists_di: (($i > (mworld > $o)) > (mworld > $o))).
thf(mexists_di_def, definition, (mexists_di = (^ [A:($i > (mworld > $o)),W:mworld]: ((? [X:$i]: (((A @ X) @ W))))))).
thf(p_decl, type, p: $i).
thf(fortytwo_decl, type, fortytwo: $i).
thf(balance_decl, type, balance: ($i > ($i > (mworld > $o)))).
thf(account_decl, type, account: ($i > ($i > (mworld > $o)))).
thf(axiom_1, axiom, (mlocal @ ((mbox @ '#bank') @ (mforall_di @ (^ [X:$i]: (((mbox @ '#cr') @ ((mimplies @ ((account @ p) @ X)) @ (mexists_di @ (^ [B:$i]: (((mbox @ '#t') @ ((balance @ p) @ B))))))))))))).
thf(axiom_1_0, axiom, (mlocal @ ((mbox @ '#cr') @ ((account @ p) @ fortytwo)))).
thf(con, conjecture, (mlocal @ (mexists_di @ (^ [B:$i]: (((mbox @ '#t') @ ((balance @ p) @ B))))))).

%------------------------------------------------------------------------------
% File     : MML020^1.010 : TPTP v8.1.0. Released v8.1.0.
% Domain   : Natural Language Processing
% Problem  : Coffee and ticket example (adapted)
% Version  : [BP13] axioms.
% English  : When I can get ticket and coffee I can take a journey

% Refs     : [Sto99] Stone (1999), Indefinite Information in Modal Logic Pr
%          : [RO12]  Raths & Otten (2012), The QMLTP Problem Library for Fi
%          : [BP13]  Benzmueller & Paulson (2013), Quantified Multimodal Lo
%          : [Ste22] Steen (2022), An Extensible Logic Embedding Tool for L
% Source   : [TPTP]
% Names    : MML020+1 [QMLTP]

% Status   : Unknown 
% Rating   : ? v8.1.0
% Syntax   : Number of formulae    :   49 (  13 unt;  26 typ;  10 def)
%            Number of atoms       :   80 (  10 equ;   0 cnn)
%            Maximal formula atoms :    9 (   3 avg)
%            Number of connectives :  128 (   1   ~;   1   |;   5   &; 115   @)
%                                         (   1 <=>;   5  =>;   0  <=;   0 <~>)
%            Maximal formula depth :   10 (   5 avg)
%            Number of types       :    4 (   2 usr)
%            Number of type conns  :   78 (  78   >;   0   *;   0   +;   0  <<)
%            Number of symbols     :   25 (  24 usr;   4 con; 0-3 aty)
%            Number of variables   :   46 (  32   ^  11   !;   3   ?;  46   :)
% SPC      : TH0_UNK_EQU_NAR

% Comments : This output was generated by embedproblem, version 1.7.1 (library
%            version 1.3). Generated on Thu Apr 28 13:18:18 EDT 2022 using
%            'modal' embedding, version 1.5.2. Logic specification used:
%            $modal == [$constants == $rigid,$quantification == $varying,
%            $modalities == $modal_system_S4].
%------------------------------------------------------------------------------
thf(mworld,type,
    mworld: $tType ).

thf(mindex,type,
    mindex: $tType ).

thf(mrel_type,type,
    mrel: mindex > mworld > mworld > $o ).

thf('#coffee_type',type,
    '#coffee': mindex ).

thf('#ticket_type',type,
    '#ticket': mindex ).

thf(mactual_type,type,
    mactual: mworld ).

thf(mlocal_type,type,
    mlocal: ( mworld > $o ) > $o ).

thf(mlocal_def,definition,
    ( mlocal
    = ( ^ [Phi: mworld > $o] : ( Phi @ mactual ) ) ) ).

thf(mnot_type,type,
    mnot: ( mworld > $o ) > mworld > $o ).

thf(mand_type,type,
    mand: ( mworld > $o ) > ( mworld > $o ) > mworld > $o ).

thf(mor_type,type,
    mor: ( mworld > $o ) > ( mworld > $o ) > mworld > $o ).

thf(mimplies_type,type,
    mimplies: ( mworld > $o ) > ( mworld > $o ) > mworld > $o ).

thf(mequiv_type,type,
    mequiv: ( mworld > $o ) > ( mworld > $o ) > mworld > $o ).

thf(mnot_def,definition,
    ( mnot
    = ( ^ [A: mworld > $o,W: mworld] :
          ~ ( A @ W ) ) ) ).

thf(mand_def,definition,
    ( mand
    = ( ^ [A: mworld > $o,B: mworld > $o,W: mworld] :
          ( ( A @ W )
          & ( B @ W ) ) ) ) ).

thf(mor_def,definition,
    ( mor
    = ( ^ [A: mworld > $o,B: mworld > $o,W: mworld] :
          ( ( A @ W )
          | ( B @ W ) ) ) ) ).

thf(mimplies_def,definition,
    ( mimplies
    = ( ^ [A: mworld > $o,B: mworld > $o,W: mworld] :
          ( ( A @ W )
         => ( B @ W ) ) ) ) ).

thf(mequiv_def,definition,
    ( mequiv
    = ( ^ [A: mworld > $o,B: mworld > $o,W: mworld] :
          ( ( A @ W )
        <=> ( B @ W ) ) ) ) ).

thf(mbox_type,type,
    mbox: mindex > ( mworld > $o ) > mworld > $o ).

thf(mbox_def,definition,
    ( mbox
    = ( ^ [R: mindex,Phi: mworld > $o,W: mworld] :
        ! [V: mworld] :
          ( ( mrel @ R @ W @ V )
         => ( Phi @ V ) ) ) ) ).

thf(mdia_type,type,
    mdia: mindex > ( mworld > $o ) > mworld > $o ).

thf(mdia_def,definition,
    ( mdia
    = ( ^ [R: mindex,Phi: mworld > $o,W: mworld] :
        ? [V: mworld] :
          ( ( mrel @ R @ W @ V )
          & ( Phi @ V ) ) ) ) ).

thf('mrel_#coffee_reflexive',axiom,
    ! [W: mworld] : ( mrel @ '#coffee' @ W @ W ) ).

thf('mrel_#coffee_transitive',axiom,
    ! [W: mworld,V: mworld,U: mworld] :
      ( ( ( mrel @ '#coffee' @ W @ V )
        & ( mrel @ '#coffee' @ V @ U ) )
     => ( mrel @ '#coffee' @ W @ U ) ) ).

thf('mrel_#ticket_reflexive',axiom,
    ! [W: mworld] : ( mrel @ '#ticket' @ W @ W ) ).

thf('mrel_#ticket_transitive',axiom,
    ! [W: mworld,V: mworld,U: mworld] :
      ( ( ( mrel @ '#ticket' @ W @ V )
        & ( mrel @ '#ticket' @ V @ U ) )
     => ( mrel @ '#ticket' @ W @ U ) ) ).

thf(eiw_di_type,type,
    eiw_di: $i > mworld > $o ).

thf(eiw_di_nonempty,axiom,
    ! [W: mworld] :
    ? [X: $i] : ( eiw_di @ X @ W ) ).

thf(mforall_di_type,type,
    mforall_di: ( $i > mworld > $o ) > mworld > $o ).

thf(mforall_di_def,definition,
    ( mforall_di
    = ( ^ [A: $i > mworld > $o,W: mworld] :
        ! [X: $i] :
          ( ( eiw_di @ X @ W )
         => ( A @ X @ W ) ) ) ) ).

thf(mexists_di_type,type,
    mexists_di: ( $i > mworld > $o ) > mworld > $o ).

thf(mexists_di_def,definition,
    ( mexists_di
    = ( ^ [A: $i > mworld > $o,W: mworld] :
        ? [X: $i] :
          ( ( eiw_di @ X @ W )
          & ( A @ X @ W ) ) ) ) ).

thf(passenger_decl,type,
    passenger: $i ).

thf(takejourney_decl,type,
    takejourney: $i > mworld > $o ).

thf(usemachine_decl,type,
    usemachine: $i > mworld > $o ).

thf(visitdonuts_decl,type,
    visitdonuts: $i > mworld > $o ).

thf(usewindow_decl,type,
    usewindow: $i > mworld > $o ).

thf(getticket_decl,type,
    getticket: $i > mworld > $o ).

thf(visitstarbucks_decl,type,
    visitstarbucks: $i > mworld > $o ).

thf(getcoffee_decl,type,
    getcoffee: $i > mworld > $o ).

thf(visitstarbuck_decl,type,
    visitstarbuck: $i > mworld > $o ).

thf(axiom_1,axiom,
    ( mlocal
    @ ( mforall_di
      @ ^ [X: $i] : ( mbox @ '#ticket' @ ( mor @ ( usemachine @ X ) @ ( usewindow @ X ) ) ) ) ) ).

thf(axiom_2,axiom,
    ( mlocal
    @ ( mforall_di
      @ ^ [X: $i] : ( mbox @ '#ticket' @ ( mimplies @ ( usemachine @ X ) @ ( getticket @ X ) ) ) ) ) ).

thf(axiom_3,axiom,
    ( mlocal
    @ ( mforall_di
      @ ^ [X: $i] : ( mbox @ '#ticket' @ ( mimplies @ ( usewindow @ X ) @ ( getticket @ X ) ) ) ) ) ).

thf(axiom_4,axiom,
    ( mlocal
    @ ( mforall_di
      @ ^ [X: $i] : ( mbox @ '#coffee' @ ( mor @ ( visitdonuts @ X ) @ ( visitstarbucks @ X ) ) ) ) ) ).

thf(axiom_5,axiom,
    ( mlocal
    @ ( mforall_di
      @ ^ [X: $i] : ( mbox @ '#coffee' @ ( mimplies @ ( visitdonuts @ X ) @ ( getcoffee @ X ) ) ) ) ) ).

thf(axiom_6,axiom,
    ( mlocal
    @ ( mforall_di
      @ ^ [X: $i] : ( mbox @ '#coffee' @ ( mimplies @ ( visitstarbuck @ X ) @ ( getcoffee @ X ) ) ) ) ) ).

thf(axiom_7,axiom,
    ( mlocal
    @ ( mforall_di
      @ ^ [X: $i] : ( mimplies @ ( mand @ ( mbox @ '#ticket' @ ( getticket @ X ) ) @ ( mbox @ '#coffee' @ ( getcoffee @ X ) ) ) @ ( takejourney @ X ) ) ) ) ).

thf(con,conjecture,
    mlocal @ ( takejourney @ passenger ) ).

%------------------------------------------------------------------------------

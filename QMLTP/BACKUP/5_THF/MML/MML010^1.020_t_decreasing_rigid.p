%------------------------------------------------------------------------------
% File     : MML010^1.020 : TPTP v8.1.0. Released v8.1.0.
% Domain   : Processes
% Problem  : Printer example (simplified)
% Version  : [BP13] axioms.
% English  : If the user is believed to want a document to be printed on a
%            printer, then (s)he is also assumed to believe that this is
%            possible. Users want any implication of their immediate goals if
%            they know the implication relation. The user wants to print the
%            document userdoc. The user believes that all documents are
%            printed on printer lw. Then the user wants the document userdoc
%            to be printed on printer lw.

% Refs     : [KP95]  Kobsa & Pohl (1995), The User Modeling Shell System BG
%          : [RO12]  Raths & Otten (2012), The QMLTP Problem Library for Fi
%          : [BP13]  Benzmueller & Paulson (2013), Quantified Multimodal Lo
%          : [Ste22] Steen (2022), An Extensible Logic Embedding Tool for L
% Source   : [TPTP]
% Names    : MML010+1 [QMLTP]

% Status   : Unknown 
% Rating   : ? v8.1.0
% Syntax   : Number of formulae    :   45 (  14 unt;  24 typ;  10 def)
%            Number of atoms       :   88 (  10 equ;   0 cnn)
%            Maximal formula atoms :   16 (   4 avg)
%            Number of connectives :  152 (   1   ~;   1   |;   4   &; 141   @)
%                                         (   1 <=>;   4  =>;   0  <=;   0 <~>)
%            Maximal formula depth :   15 (   5 avg)
%            Number of types       :    4 (   2 usr)
%            Number of type conns  :   73 (  73   >;   0   *;   0   +;   0  <<)
%            Number of symbols     :   23 (  22 usr;   6 con; 0-3 aty)
%            Number of variables   :   45 (  32   ^  10   !;   3   ?;  45   :)
% SPC      : TH0_UNK_EQU_NAR

% Comments : This output was generated by embedproblem, version 1.7.1 (library
%            version 1.3). Generated on Thu Apr 28 13:18:18 EDT 2022 using
%            'modal' embedding, version 1.5.2. Logic specification used:
%            $modal == [$constants == $rigid,$quantification == $decreasing,
%            $modalities == $modal_system_T].
%------------------------------------------------------------------------------
thf(mworld,type,
    mworld: $tType ).

thf(mindex,type,
    mindex: $tType ).

thf(mrel_type,type,
    mrel: mindex > mworld > mworld > $o ).

thf('#wu_type',type,
    '#wu': mindex ).

thf('#bu_type',type,
    '#bu': mindex ).

thf('#bs_type',type,
    '#bs': mindex ).

thf(mactual_type,type,
    mactual: mworld ).

thf(mlocal_type,type,
    mlocal: ( mworld > $o ) > $o ).

thf(mlocal_def,definition,
    ( mlocal
    = ( ^ [Phi: mworld > $o] : ( Phi @ mactual ) ) ) ).

thf(mnot_type,type,
    mnot: ( mworld > $o ) > mworld > $o ).

thf(mand_type,type,
    mand: ( mworld > $o ) > ( mworld > $o ) > mworld > $o ).

thf(mor_type,type,
    mor: ( mworld > $o ) > ( mworld > $o ) > mworld > $o ).

thf(mimplies_type,type,
    mimplies: ( mworld > $o ) > ( mworld > $o ) > mworld > $o ).

thf(mequiv_type,type,
    mequiv: ( mworld > $o ) > ( mworld > $o ) > mworld > $o ).

thf(mnot_def,definition,
    ( mnot
    = ( ^ [A: mworld > $o,W: mworld] :
          ~ ( A @ W ) ) ) ).

thf(mand_def,definition,
    ( mand
    = ( ^ [A: mworld > $o,B: mworld > $o,W: mworld] :
          ( ( A @ W )
          & ( B @ W ) ) ) ) ).

thf(mor_def,definition,
    ( mor
    = ( ^ [A: mworld > $o,B: mworld > $o,W: mworld] :
          ( ( A @ W )
          | ( B @ W ) ) ) ) ).

thf(mimplies_def,definition,
    ( mimplies
    = ( ^ [A: mworld > $o,B: mworld > $o,W: mworld] :
          ( ( A @ W )
         => ( B @ W ) ) ) ) ).

thf(mequiv_def,definition,
    ( mequiv
    = ( ^ [A: mworld > $o,B: mworld > $o,W: mworld] :
          ( ( A @ W )
        <=> ( B @ W ) ) ) ) ).

thf(mbox_type,type,
    mbox: mindex > ( mworld > $o ) > mworld > $o ).

thf(mbox_def,definition,
    ( mbox
    = ( ^ [R: mindex,Phi: mworld > $o,W: mworld] :
        ! [V: mworld] :
          ( ( mrel @ R @ W @ V )
         => ( Phi @ V ) ) ) ) ).

thf(mdia_type,type,
    mdia: mindex > ( mworld > $o ) > mworld > $o ).

thf(mdia_def,definition,
    ( mdia
    = ( ^ [R: mindex,Phi: mworld > $o,W: mworld] :
        ? [V: mworld] :
          ( ( mrel @ R @ W @ V )
          & ( Phi @ V ) ) ) ) ).

thf('mrel_#wu_reflexive',axiom,
    ! [W: mworld] : ( mrel @ '#wu' @ W @ W ) ).

thf('mrel_#bu_reflexive',axiom,
    ! [W: mworld] : ( mrel @ '#bu' @ W @ W ) ).

thf('mrel_#bs_reflexive',axiom,
    ! [W: mworld] : ( mrel @ '#bs' @ W @ W ) ).

thf(eiw_di_type,type,
    eiw_di: $i > mworld > $o ).

thf(eiw_di_nonempty,axiom,
    ! [W: mworld] :
    ? [X: $i] : ( eiw_di @ X @ W ) ).

thf(eiw_di_decr,axiom,
    ! [Index: mindex,W: mworld,V: mworld,X: $i] :
      ( ( ( eiw_di @ X @ W )
        & ( mrel @ Index @ V @ W ) )
     => ( eiw_di @ X @ V ) ) ).

thf(mforall_di_type,type,
    mforall_di: ( $i > mworld > $o ) > mworld > $o ).

thf(mforall_di_def,definition,
    ( mforall_di
    = ( ^ [A: $i > mworld > $o,W: mworld] :
        ! [X: $i] :
          ( ( eiw_di @ X @ W )
         => ( A @ X @ W ) ) ) ) ).

thf(mexists_di_type,type,
    mexists_di: ( $i > mworld > $o ) > mworld > $o ).

thf(mexists_di_def,definition,
    ( mexists_di
    = ( ^ [A: $i > mworld > $o,W: mworld] :
        ? [X: $i] :
          ( ( eiw_di @ X @ W )
          & ( A @ X @ W ) ) ) ) ).

thf(userdoc_decl,type,
    userdoc: $i ).

thf(lw_decl,type,
    lw: $i ).

thf(printed_decl,type,
    printed: $i > mworld > $o ).

thf(printableon_decl,type,
    printableon: $i > $i > mworld > $o ).

thf(printedable_decl,type,
    printedable: $i > $i > mworld > $o ).

thf(printedon_decl,type,
    printedon: $i > $i > mworld > $o ).

thf(aciom_1,axiom,
    ( mlocal
    @ ( mforall_di
      @ ^ [D: $i] :
          ( mforall_di
          @ ^ [P: $i] : ( mimplies @ ( mbox @ '#bs' @ ( mbox @ '#wu' @ ( printedon @ D @ P ) ) ) @ ( mbox @ '#bs' @ ( mbox @ '#bu' @ ( printableon @ D @ P ) ) ) ) ) ) ) ).

thf(axiom_2_1,axiom,
    ( mlocal
    @ ( mforall_di
      @ ^ [D: $i] :
          ( mforall_di
          @ ^ [P: $i] : ( mimplies @ ( mand @ ( mbox @ '#bs' @ ( mbox @ '#wu' @ ( printed @ D ) ) ) @ ( mbox @ '#bs' @ ( mbox @ '#bu' @ ( mimplies @ ( printed @ D ) @ ( printedon @ D @ P ) ) ) ) ) @ ( mbox @ '#bs' @ ( mbox @ '#wu' @ ( printedon @ D @ P ) ) ) ) ) ) ) ).

thf(axiom_2_2,axiom,
    ( mlocal
    @ ( mforall_di
      @ ^ [D: $i] :
          ( mforall_di
          @ ^ [P: $i] : ( mimplies @ ( mand @ ( mbox @ '#bs' @ ( mbox @ '#wu' @ ( printedon @ D @ P ) ) ) @ ( mbox @ '#bs' @ ( mbox @ '#bu' @ ( mimplies @ ( printedon @ D @ P ) @ ( printedable @ D @ P ) ) ) ) ) @ ( mbox @ '#bs' @ ( mbox @ '#wu' @ ( printedable @ D @ P ) ) ) ) ) ) ) ).

thf(axiom_3,axiom,
    mlocal @ ( mbox @ '#bs' @ ( mbox @ '#wu' @ ( printed @ userdoc ) ) ) ).

thf(axiom_4,axiom,
    ( mlocal
    @ ( mbox @ '#bs'
      @ ( mbox @ '#bu'
        @ ( mforall_di
          @ ^ [D: $i] : ( mimplies @ ( printed @ D ) @ ( printedon @ D @ lw ) ) ) ) ) ) ).

thf(con,conjecture,
    mlocal @ ( mbox @ '#bs' @ ( mbox @ '#wu' @ ( printedon @ userdoc @ lw ) ) ) ).

%------------------------------------------------------------------------------
